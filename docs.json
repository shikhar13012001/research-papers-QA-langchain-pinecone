[
  {
    "pageContent": "378IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nDAG-BLOCK: A Novel Architecture for Scaling\nBlockchain-EnabledCryptocurrencies\nNaina Qi, Yong Yuan,andFei-YueWang,Fellow, IEEE\nAbstract— With the rapid development of blockchain technol-\nogy  and  industries,  scalability  has  been  widely  realized  as  one\nof the primary and urgent concerns for the large-scale adoption\nof  blockchain,  especially  for  cryptocurrencies.  In  this  respect,\ndirected  acyclic  graph  (DAG)  proves  to  be  an  elegant  solution\nto  scaling  blockchain  but  suffers  from  weak  consistency  and\nsecurity issues. In this article, we designed a novel DAG-BLOCK\narchitecture  for  blockchain-enabled  cryptocurrency  markets  in\norder  to  improve  the  scalability.  In  our  work,  DAG  is  used\nto  replace  the  Merkel-tree-based  transaction  structure  within\nthe  block,  and  a  novel  design  of  open  blocks  is  proposed  to\nenable user nodes to participate in verifying the transactions in\nblockchain systems. On this basis, we designed a new segmented\nmarket  structure,  in  which  each  miner  serves  only  a  group  of\nusers  instead  of  all  users,  so  as  to  reduce  miners’  workload\nand thus scale transaction processing capabilities. Our work can\nhelp improve the scalability of cryptocurrencies via evolving the\nunderlying blockchain systems to graph-based distributed ledgers\nand is expected to shed new light on designing blockchain-based\ndecentralized markets.\nIndex Terms— Blockchain,  consensus,  directed  acyclic  graph\n(DAG), scalability.\nI.  INTRODUCTION\nB\nLOCKCHAIN  has  attracted  intensive interests  in  recent\nyears  in  both  academia  and  industries  since   Satoshi\nNakamoto’s  well-publicized  Bitcoin  whitepaper  [1].  Tech-\nnically   speaking,   blockchain   can   be   used   to   evolve   the\nserver-based centralized architecture to serverless, consensus-\nbased distributed ledger systems for enhanced trust, reliability,\nusability, and also social efficiency. In blockchain systems, all\npeer nodes (also known as, miners) simultaneously participate\nin  the  transmission  and  validation  of  data  transactions  and\nManuscript  received   30  June  2022;  revised  3  October  2022;  accepted\n18  November  2022.  Date  of  publication  13  December  2022;  date  of  current\nversion 31 January 2024. This work was supported in part by the National Key\nResearch and Development Program of China under Grant 2018AAA0101401;\nin  part  by  the  National  Natural  Science  Foundation  of  China  under  Grant\n72171230; in part by the Science and Technology Development Fund, Macau,\nSAR, under Grant 0050/2020/A1; and in part by Beijing Advanced Innovation\nCenter for Future Blockchain and Privacy Computing.(Corresponding author:\nYong Yuan.)\nNaina Qi is with the School of Mathematics,  Renmin University  of China,\nBeijing  100872, China.\nYong Yuan is with the School of Mathematics, Renmin University of China,\nBeijing  100872,  China,  and  also  with  the  Engineering  Research  Center  of\nFinance Computation and Digital Engineering, Ministry of Education, Beijing\n100872, China (e-mail:  yong.yuan@ruc.edu.cn).\nFei-Yue Wang is with the State Key Laboratory for Management and Control\nof Complex Systems, Institute of Automation, Chinese Academy of Sciences,\nBeijing  100190,  China,  and  also  with  the  Institute  of  Systems  Engineering,\nMacau  University  of Science and  Technology,  Macau, China.\nDigital  Object Identifier  10.1109/TCSS.2022.3224764\nmaintain an identical data ledger with global consistency. This\ndecentralized  design  can  help  solve  the  long-standing  issues\nincluding  single-point  of  failure  and  data  tampering,  in  that\nthe  data  integrity  will  not  be  effected  in  case  a  minority  of\npeer  nodes  are  corrupted  or  attempt  to  hack  the  system  via\ntampering with the ledgers. As such, blockchain can serve as\na trusted, reliable, usable, and effective platform for handling\nfinancial transactions,  leading  to  a  multibillion  dollar  market\nof cryptocurrencies.\nSpecially,  consensus  can  be  considered  as  the  key  for\nlarge  numbers  of  blockchain  peers  to  reach  agreements  on\ntransaction  data  with  the  presence  of  Byzantine  malicious\nnodes. As a core component in most blockchain architectures,\nconsensus algorithms play an important role in maintaining the\nperformance of the entire blockchain system. However, in the\npractice of cryptocurrency mining, it is widely witnessed that\nmajor  consensus  algorithms,  such  as  proof-of-work  (PoW),\nsuffer from lowered efficiency and in turn widespread criticism\non  its  high  energy  consumption  [2].  Therefore,  in  order  to\nsolve  this  issue,  there  is  an  urgent  need  to  improve  the\nscalability of the underlying blockchain architecture for more\nefficient cryptocurrency mining. In our work, scalability refers\nto the ability to process transactions in response to changes of\nthe  transaction volume and the  number of participants in the\nblockchain network. The network is scalable if it is capable to\ngrow adaptively along with the demand of the user base [3].\nScalability can be regarded as one of the primary and urgent\nconcerns  for  blockchain  system,especially  cryptocurrencies.\nGenerally  speaking,  throughput  and  latency  are  two  major\nperformance  metrics  for  scalability.  Taking  Bitcoin  as  an\nexample,  although  huge  amount  of  miner  computing  power\nis  invested  in  the  hash  operations  to  generate  new  blocks,\nthe processing speed is limited to 3–7 transactions per second\n(TPS) at present, far below the speed of centralized financial\npayment platforms includingVISA and Alipaythat are 2 and\n500 thousands TPS, respectively. Meanwhile, there are severe\nlatency  in  Bitcoin  in  that  transactions  must  wait  for  one\nor  more  consensus  rounds  before  they  can  be  written  into\nblocks,  and  in  practice,  six  blocks  should  be  created  and\nlinked on-chain before transactions can be confirmed secured.\nHence, current cryptocurrencies are not particularly suitable to\nmicropayment and  high-frequency trading scenarios, limiting\nthe potential applications in the future programmable societies.\nIn  literature,  many  researchers  have  worked  on  consensus\nalgorithms  to  solve  the  scalability  issue  of  cryptocurrencies.\nEyal   et   al.   [4]   proposed  Bitcoin-NG   and   introduced  the\n2329-924X  © 2022 IEEE. Personal use is permitted,  but republication/redistribution  requires  IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html  for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "QI et al.:  DAG-BLOCK: A NOVEL ARCHITECTURE FOR SCALING BLOCKCHAIN-ENABLED CRYPTOCURRENCIES379\nconcept  of  microblocks,  which  generates  one  key  block  and\nmultiple microblocks per time slot, thus can be able to create\nmore  blocks  without  changing  the  block  size  and  help  scale\nBitcoin.  Luu  et  al.  [5]  proposed  Elastico  and  introduced  the\nidea  of  sharding,  which  isolated  the  network  into  multiple\nshards  in  a  provably  secure  manner  with  shards  processing\nin  parallel  disjoint  sets  of  transactions,  aiming  at  enhancing\nthe  scalability  of  blockchain.  Kokoros-Kogias  et  al.  [6]  put\nforward  the  Omniledger  to  improve  blockchain  scalability\nby  processing  transaction  across  shards  in  parallel.  Wang\n[7] proposed monoxide to use asynchronous consensus zones\nto  offer  the  ability  of  linear  scaling.  Each  zone  is  respon-\nsible  for  its  own  data  and  thus  splitting  the  workload  of\nall  key  components  without  sacrificing  the  decentralization\nand  security  of  the  system.  Manuskin  [8]  proposed  Ostraka\nthat  can  parallelize  the  nodes  in  fractions  and  demonstrated\nthat  replacing  a  unified  node  with  an  Ostraka  node  will  not\nundermine  the  security  of  underlying  consensus  mechanism.\nOther  similar  solutions  include  Zilliqa  [9],  Harmony  [10],\nand Ethereum Sharding2.0 [11], among others. These research\nefforts significantly increase the scalability due to the parallel\nexecutions of state shards, so that most of the scaling solutions\nto PoW algorithms are shard-based [12]. Meanwhile, there are\nmany  other  probability-based scaling  solutions.  For  instance,\nGilad  et  al.  [13]  proposed  Algorand  using  a  randomized\nalgorithm,  which  can  scale  up  to  500 000  users  with  high\nthroughput.  Kiayias  et  al.  [14]  proposed  Ouroborous  that\nuses  a  coin  flip  protocol  in  leader  election  to  improve  the\nthroughput and number of users. To sum up, these works can\nhelp solve the blockchain scalability issue but mainly from a\nperspective of innovation on PoW or Byzantine fault tolerant\n(BFT)  consensus  algorithms.  To  the  best  of  our  knowledge,\nscalability  solutions  based  on  novel  blockchain  architectures\nare still far from sufficient.\nIn  literature,  researchers  have  proposed  to  use  directed\nacyclic  graph  (DAG)  [15],  [16]  to  evolve  the  chain-based,\nlinear data structure underlying blockchain to the graph-based\ndistributed  ledger  structure.  This  novel  DAG  network  has\nsignificant advantages including enhanced efficiency and con-\ncurrence, lower power consumption, as well as asynchronous\noperations  and  parallel  transaction  processing  capabilities.\nHowever,  it  suffers  from  a  prominent  risk  of  double  spend-\ning  and  unverified  security  on  large-scale  systems.  With  the\ncontinuous  expansion  of  DAG,  the  confirmation  time  of  the\ntransactions is not controllable. In DAG-based systems, a pre-\nvious transaction is approved by later transactions, so that the\ntip transaction might not be approved at all time. Meanwhile,\nDAG  systems  adopt  a  gossip-type  propagation  protocol  and\noperate  asynchronously  and  cannot  maintain  strong  consis-\ntency.  Also,  there  is  no  global  sorting  mechanism,  so  that\nin  case  when  running  a  smart  contract,  it  is  likely  that  data\nstored in nodes will differ after a period of time. To sum up,\nDAG  and  blockchain  can  complement  each  other,  and  thus,\nDAG-based  blockchains  and  cryptocurrencies  have  attracted\nintensive research interests.\nAs  shown  in  Fig.  1,  DAG-based  blockchain  or  distributed\nledger takes a single transaction (instead of a block) as a unit in\nthe graph. The transaction details include sender and receiver\nFig. 1.Structure  of a DAG.\naddresses,  the  value  transferred,  transaction  fee,  timestamp,\ndigital signature, and so on. The edges in a DAG denote the\nunidirectional  hash  pointers  linking  from  the  subunit  to  its\nparent unit between transactions. These hash points cannot be\ntampered with,  so  that  the  positions of transactions denoting\ntheir  submitting  order  are  fixed  in  the  DAG.  The  process  of\nestablishing hash pointers is called “approve,” and those units\nthat  have  not  been  approved  in  the  DAG  are  called  “tips.”\nIn  case  a  new transaction is  added, two  tips will  be  selected\nto approve, and the new transaction will become a new tip. The\nfirst transaction is also known as the Genesis transaction [17].\nIn  this  article,  we  aim  at  combining DAG  and  blockchain\nto address the scalability issues in cryptocurrencies. Our main\nidea  is  to  replace  the  Merkel-tree-based transaction  structure\nwithin  the  block  by  DAG,  instead  of  replacing  the  entire\nchain  as  other  solutions  in  literature.  The  advantages  of  a\nDAG-based  transaction  structure  within  blocks  are  not  only\nto  retain  a  globally linear  chain  to  facilitate  the  judgment of\ntransaction  orders  but  also  to  limit  the  size  of  the  DAG  to\navoid the issues, such as infinite DAG expansion and uncon-\ntrollable  tips  confirmation  time.  At  the  same  time,  we  also\nproposed the  concept of  “open  blocks,” in  which  user  nodes\ncan independently choose tip transactions to approve, instead\nof  having  to  rely  on  miner  nodes  to  handle  their  transac-\ntions. In addition, we propose to segment the cryptocurrency\necosystems into niche markets, in which each miner serves to\nprocess  transactions for  only  a  group of  users  rather than  in\ntraditional peer-to-peer (P2P)  networks, where all miners are\nresponsible to  process transactions for all  users.  This market\nsegmentation  can  effectively  reduce  the  workload  of  miners\nand  thus  help  scale  to  more users  and  improve the  speed  of\nprocessing transactions.\nThe   remainder  of   this   article   is   organized  as   follows.\nIn Section II, we propose the architecture of underlying market\nnetworks,  the  DAG-BLOCK  blockchain  structure,  and  also\nthe  detailed  design  of  the  consensus  process.  In  Section III,\nwe discuss several security issues including double spending,\ndust trading, tip selection, malicious attacks from adversaries,\nas well as economic incentives. Section IV discusses the key\ndifferences  between  our  proposed  DAG-BLOCK  and  other\nDAG-based cryptocurrencies including IoTA [18]. Section IV\nconcludes and discusses our future works.\nII.  DAG-BLOCK A\nRCHITECTURE\nIn  this  section,  we  will  present  the  detailed  design  of  our\nDAG-BLOCK  architecture,  including  the  underlying  market\nnetwork, the block structure, and the consensus process.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "380IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nTA B L E  I\nL\nIST OFNOTATIONS\nFig. 2.Architecture  of the market network.\nA. Architecture of Market Networks\nIn  our  design,  the  market  network  is  a  combination  of\na  decentralized  P2P  network  andcentralized  star  networks.\nSimilar as in Bitcoin systems, there are also two types of nodes\nin this network, i.e., user nodes and miner nodes.\nThe  market  network  is  illustrated  in  Fig.  2.  Assume  that\nthere areNminer nodes in the P2P network, each connected\nwith  a  group  of  user  nodes  with  network  addresses.  Note\nthat  each  miner  node  has  complete  transaction  data  of  the\nblockchain  and  is  responsible  for  serving  its  connected  user\nnodes  (instead  of  all  users  as  in  Bitcoin).  We  useS\ni\n(i=\n1,2,...,N)to  denote  the  set  of  user  nodes  that  theith\nminer node serves. For simplicity, we assume that each miner\nnode  serves  a  disjoint  set  of  user  nodes,  i.e.,S\ni\n∩S\nj\n=\n∅,∀i\u0005=j,i,j=1,2,...,N.  Without  loss  of  generality,\na  user  node  might  have  multiple  network  addresses  served\nby different miners. For instance, a user node might have two\naddresses  inS\ni\nandS\nj\n(i\u0005=j),  respectively.  A  miner  node\nmust store the transactions submitted by its served user nodes\nin the memory pool and generate a sub-DAG (i.e., a part of the\ncomplete DAG in the block) for the current consensus round.\nUser  nodes  also  have  memory  pools  to  store  its  historical\ntransactions but do not have to store all transaction data. The\nrelationship  of  the  nodes  is  shown  in  Fig.  2,  with  a  fully\ndecentralized  P2P  network  among  miner  nodes  and  a  star\nFig. 3.DAG-BLOCK structure.\nnetwork between a miner node and its served user nodes. The\nnotation and description of all variables used in this article are\nlisted in Table I.\nB. DAG-BLOCK Structure\nAs shown in Fig. 3, a DAG-based block consists of a block\nhead and a block body.\nThe block body encapsulates all packaged transactions using\na  DAG  structure.  Each  transaction  uses  a  hash  value  as\nits  unique  ID,  and  transactions  link  to  each  other  via  hash\npointers. Each transaction is denoted by  a circle in  the DAG\nin Fig. 3 and consists of five elements, i.e.,m=[pre_hash(1),\npre_hash(2),   transaction,   timestamp,   signature(μ)],   where\npre_hash(1)   and   pre_hash(2)   are   two   parent   transactions\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "QI et al.:  DAG-BLOCK: A NOVEL ARCHITECTURE FOR SCALING BLOCKCHAIN-ENABLED CRYPTOCURRENCIES381\nFig. 4.Hashing  the block  body: an illustrating  example.\napproved  bym,  and  the  other  three  elements  represent  the\ndetailed  data  of  the  transaction,  user  node’s  timestamp,  and\nsignature  of  the  submitting  userμ,  respectively  [19].  It  is\nworth  noting  that  each  transaction  must  approve  two  parent\ntransactions, except the one that approves the unique genesis\ntransactionG\ni\n(i=1,2,...,N)and  the  transaction  “M”.\nWe  also  generate  a  global  tip  transaction  denoted  by  “M”\nin  Fig.  3  for  each  block  to  aggregate  all  miners’  submitted\nsub-DAGs  via  approving  their  tip  transactions.  The  genera-\ntion  method  of  transactionMwill  be  explained  in  detail  in\nSection II.\nThe  detailed  design  of  our  DAG-BLOCK  architecture  is\nshown  in  Fig.  3.  Typically,  a  block  header  consists  of  nine\nitems including the block height, timestamp, block size, hash\nof the block body, miner’s signature, miner’s consensus proof,\nminer’s priority, hash value of the previous block, as well as\nseed and its proof for next round. Here, the miner’s consensus\nproof is the output of the verifiable random functions (VRFs)\nin the random leader selection process, serving as a proof of\nthe legitimacy for the selected miner node.\nThe  hash  value  of  the  block  body  is  computed  as  the\naggregated hash value of all transactions in the DAG. In case\nwhen computing the hash of block body, we must recompute\nthe hash of each transactionm, which is the hash value of all\ntransactions  approvingmand  the  original  hash  value  ofm.\nAs such, we can compute the hash value of  each transaction\nin  a  reverse  chronological  order  of  timestamps,  from  later\ntransactions  to   earlier  ones,  until   the  genesis  transaction.\nIn  Fig.  4, we  show an illustrating  example of  computing the\nhash of block body with two miner nodes and 15 transactions.\nThe  new  block  is  linked  to  the  previous  block  using  a  hash\npointer to guarantee the tamper-evidence and the order of the\ntransactions.\nThe   other   detailed   definitions   of   the   above   items   are\ndescribed in Section II.\nC. Consensus Process\nWe  assume a  synchronous network in our design, with no\nmore than 1/3 of all miner nodes is Byzantine malicious. The\nconsensus process is divided into rounds of almost equal time\nlength, so we useB\nk\nto denote the block built  in roundk=\n1,2,...,. In roundk, the consensus process is as follows.\nStep  1):  All  user  nodes  submit  transactions.A  user  node\nμ(μ∈S\ni\n)submits  a  transactionmto  the  miner  nodei,\nwherem=[pre_hash(1), pre_hash(2), transaction, timestamp,\nsignature(μ)]. Here, pre_hash(1) and pre_hash(2) denote the\nparent  transactions  approved  bym,  and  “transaction”  is  the\ndetails of the transactionm. More specifically:\na)μrequests the local sub-DAG from its serving miner node\ni.  We  call  miner nodes’ local  DAG as  sub-DAG, which  will\nbe used to construct the complete DAG in block body.\nb)μreceives  the  sub-DAG.To  reduce  the  complexity  in\ncommunication, miner nodes can only send the information of\ntips to user nodes. Ifμwishes to obtain the current sub-DAG\nin  its  miner  node,  it  can  attach  an  additional  information  in\ntransactionmto mineri,sothatminerican send it toμ.\nc)μselects and approves two tips from the tips in the sub-\nDAG.Here, an algorithm can be designed to recommend tips\nfor the user nodes, e.g., via ranking approval fees of tips.\nd)μsends transaction m  back to the miner node i.Inthis\nstep, there might be the case that two user nodes choose the\nsame tips possibly due to the delay of network, but this does\nnot influence the consensus due to DAG’ feature of toleranting\nforks [20].\nStep  2):  All  miner  nodes  generate  the  sub-DAG.Mineri\nkeeps updating its local sub-DAGD\nk\ni\nbased on user-submitted\ntransactions  and  checking  for  conflicting  or  double-spending\ntransactions  submitted  by  user  nodes  according  to  the  tip\nselection algorithm.\nStep  3): Preparation of  leader  selection.According to  the\ndefault duration of  the roundk,  after  a  certain  time  interval,\nmineriwho is the leader of roundk−1 sends the signal<\nbegin next stage,timestamp  P ubli ckey\ni\n>to other minersj\nin  this  system,  herej=1,2,...,Nandj\u0005=i.  Once  the\nsignal was received by miner nodej, it will verify the signal,\ni.e., whether the time interval is correct or not, and if yes, then\nthe state of the network moves on to the next step 4.\nStep  4):  Randomly  select  the  leader  and  build  block  B\nk\n.\nRandomly  selectlminers{L\n1\nk\n,L\n2\nk\n,...,L\nl\nk\n}to  pack  a  global\nDAGD\nk\nand  build  blockB\nk\nusing  VRF.  Here,  we  call\n{L\n1\nk\n,L\n2\nk\n,...,L\nl\nk\n}potential leaders. In particular,lis not fixed\nand can vary withk.\nStep  5):  Broadcast  the  block.{L\n1\nk\n,L\n2\nk\n,...,L\nl\nk\n}broadcast\ntheir built blocks{B\n1\nk\n,B\n1\nk\n,...,B\nl\nk\n}as well as their own priority\nand proof. According to the priority, all miners will choose a\nblock  from  the  miner  with  the  maximum  priority  and  verify\nthis block. If malicious transactions are included in the block,\nthen  all  miners  will  choose  and  verify  the  block  from  the\nminer with the second maximum priority, until finding a valid\nblock  from  a  miner  with  lower  priority.  The  selected  miner\nbecomes the leader of the roundk, denoted byL\nk\n,andthen,\nother miners accept blockB\nk\nbuilt byL\nk\n.\nStep 6): Reach agreement on a block.IfB\nk\nis legal, then all\nminers acceptB\nk\nand then linkB\nk\ntoB\nk−1\nusing a hash pointer.\nIn this situation, all honest miners will reach a consensus, i.e.,\nthey all accept an honest block with the same priority that does\nnot  include  malicious  transactions.  Otherwise,  an  agreement\nwill be reached on an empty block.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "382IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nFig. 5.Communications  in the consensus  process.\nSpecially,  Fig.  5  illustrates  the  process  from  Step  4)  to\nStep 6), i.e., after locally packaging sub-DAGs and verifying\nthe signal of state transition. We focus on the communications\nbetween  miner  nodes  here.  All  miner  nodes  first  broadcast\ntheir  sub-DAGs  to  other  nodes.  Then,  each  miner  node  will\nexecute a cryptographic lottery protocol to determine whether\nitself is a potential leader or not when it received all sub-DAGs\nfrom  others.  If  it  is  a  potential  leader,  it  will  build  a  block.\nAfter building a block, the potential leader will transmit to the\nrest of all miner nodes, who will verify blocks from potential\nleaders and their priority and proof and choose the one with\nthe highest priority and valid block as the unique leader in this\nround. Finally, all miner nodes connect the block generated by\nthe leader to previous one.\nAccording  to  the  network  synchronization assumption,  all\nmessage  will  be  received  within  a  constant  time  period, and\nthus, all miner nodes will know the number of all online miner\nnodes in the entire network in this round and will receive all\nblocks  broadcasted  by  potential  leaders.  Moreover,  potential\nleaders can also decrease their communication costs via only\nbroadcasting  the  block  header  they  built.  If  a  block  header\nis  accepted  by  the  entire  network,  then  its  submitting  miner\nalso knows this message and will send the complete block to\nentire network. In this way, consensus can be reached on this\nblock.\nD. Division of Consensus Rounds\nThe consensus process is divided into rounds by time, and\none block will be built in each round [21]. As shown in Fig. 6,\neach round consists of two steps, i.e., the package ofD\nk\ni\n,which\ntakes  timet\n1\n,  and  building  and  linking  ofB\nk\n,whichtakes\ntimet\n2\n,wheret\n1\n+t\n2\n=t.D\nk\ni\nis the sub-DAG packed by the\nmineri(i=1,2,...,N)in roundkusing the transaction in\nits memory pool and will eventually be packed into blockB\nk\n.\nTechnically, thekth round opens when the transaction DAGD\nk\ni\nstarts forming and closes whenB\nk\nis finally appended onto the\nblockchain. Because it takes time for potential leader miners to\npack blocks, there might be overlaps between rounds, in case\nwhent\n1\n>t\n2\nobviously.\nAs  shown  in  Fig.  7,  when  the  leader  miner  node  starts\nbuildingB\nk\n,  i.e.,  packing  all  sub-DAGs  of  roundkinto  a\ncandidate  block,  it  will  start  forming the  sub-DAG  of  round\nk+1 at the same time, and after timet\n1\nin this leader’s local\nclock (note that there is no global clock in our decentralized\nFig. 6.Timeline of the consensus process.\nFig. 7.    Starting consensus in each round (where mineriis the leader of the\nprevious  round).\nframework), the leader miner node sends a  signal of starting\nconsensus  of  roundk+1  to  all  other  miner  nodes.  Then,\nthe  global consensus  starts  after  other  miners  verify  that  the\ntime interval ist\n1\n[22], approximately. The leader initiates the\nsignal for starting the consensus that also ensurest\n1\n>t\n2\n.\nE. Formation of  D\nk\ni\nAs  shown  in  Fig.  6,  when  the  transaction DAG  formed in\nroundk−1  is  packed  into  block, miner  nodej(ifjis  not\nthe  leader  of  thek−1  round)  will  move  to  roundk,and\njwill  have  a  “public  sub-DAG,”  wherejis  responsible  for\npublishing Genesis transaction.\n1)  When  a  user  nodeμbelonging  toS\nj\nis  willing  to\nconnect a new transaction, minerjwill send a real-time\nupdated  public  sub-DAG  toμit  served,  and  the  new\ntransaction  will  be  broadcast through the  star  network,\nso  that the user node has a real-time updated DAG for\nroundk. However, the user node does not have to store\nall  the  data  of  the  transaction  DAG  in  roundkand\nthus achieving a consistent state synchronization of the\ndistributed ledger containing the new transaction.\n2)  A user nodeμsubmits and connects transactions in this\npublic sub-DAG. The user nodeμsends its transaction\nto  miner  nodej,  who  can  in  turn  choose  the  tips  to\nbe  approved  according  to  the  transaction  information.\nHash  pointers  are  used  to  link  the  transactions,  and\ntwo  tips  are  selected  as  parent transactions  of  the  new\ntransaction. A tip selection protocol can be designed in\nthe framework for recommending tips forμwithout the\ncomplete data of the system.\n3)  Minerjverifies whether there is a conflict between the\nnew  transaction  and  the  historical  transactions  that  its\ndirect  or  indirect  approval  and  completes  the  approval\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "QI et al.:  DAG-BLOCK: A NOVEL ARCHITECTURE FOR SCALING BLOCKCHAIN-ENABLED CRYPTOCURRENCIES383\nFig. 8.Process of VRF.\nof the DAG tips, so as to realize the confirmation of the\nnew transaction in the sub-DAG.\n4)  Minerjis  responsible for verifying whether the trans-\nactions from its served user nodes are malicious or not.\nIn  case  when  there  is  a  conflict  with  the  DAG  ledger,\nthe transaction will be rejected by minerj. Meanwhile,\nminerjcompletes the anti-fraud test of whether or not\nthe new transaction is double spending. If there are two\nconflicting transactions, the miner node can discard one\nof  them  to  maintain  the  security  and  consistent of  this\nsystem as every transaction in sub-DAG is not confirmed\nat this stage.\nF. Random Leader Selection\nInspired  by  Algorand,  a  cryptography  lottery  protocol  is\ndesigned in our work using VRF, and a miner node is selected\nrandomly in each round for building a block. The protocol is\nused  to  create  a  random  number  generator  to  determine  the\nbuilding miner (i.e., leader) for the round. Each miner node is\nweighted and the probability of being selected as the leader is\nproportional to the number of transactions and the total number\nof balances of user nodes it serves.\n1) VRF’s  Operational  Mechanisms:In  each  round,  the\nelection  will  take  a  seed  as  an  input to  the  VRF,  which  will\nthen output a random hash (as seed input for the next round)\nandπ(the  proof  of  the  user  selected  by  lottery  within  this\nround).  The  seed  here  is  also  the  hash  input  value,  and  the\nseed for the genesis block will be generated using a distributed\nrandom  number  generator.  All  other  miner  nodes  can  use\npublic key to verify the correctness of the output.\nThe operation process of VRF is shown in Fig. 8, wheremis\nthe original input message. The VRF contains a key generation\nalgorithm that generates a public VRF key (PK) and a secrete\nVRF key (SK). Verification is conducted by using the pair of\npublic keys to verify that P is a proof generated based on the\noriginal messagem.\n2) Cryptographic Lottery Protocol:\n1)  Calculatingseed\nk\n. If there is an elected miner in round\nk−1, then\n<seed\nk\n,π >←VRF\nsk\nk−1\n(seed\nk−1\n||k).\nHere,  the  signature  of  the  elected  miner  in  roundk−1for\ntheseed\nk−1\nis first used, andseed\nk−1\nis then calculated using\nVRF, which produces a proof andseed\nk\n.Otherwise,seed\nk\n=\nH(seed\nk−1\n||k)when  the  block  is  an  empty  block  in  round\nk−1, in which all potential leaders’ blocks are malicious with\ninvalid transactions or there is no agreement on a valid block\nin  roundk−1.Seed\n0\nis  generated  by  distributed  random\nnumber generator in the beginning of the consensus process.\n2) Determining the potential leader. Whenseed\nk\nis broad-\ncast  to  all  miners,  each  miner  can  determine whether  it  is  a\npotential leader or not. For a miner nodei(i=1,2,...,N),\nit has a hash and a proofπthrough\nVRF\nsk\ni\n(\nseed\nk\n)\n→<hash,π >\nwheresk\ni\nis the secrete key of mineri, and the hash is within\n[0,2\nhashlen\n−1]. We  here assumep=(6/N),  where 6 is the\nexcepted  number  of  potential  leaders  that  has  been  proven\nreasonable  in  the  Algorand  system.  In  extreme  cases,  there\nis no  selected  potential leader, so  we can  design a minimum\nguarantee to ensure the existence of a potential miner, so as to\nensure that the honest leader in the previous round is always\nthe  potential  leader  in  the  next  round.  Based  on  the  above\nassumption, every miner node starts a loop as follows.\nStarting the loop fromz=0,z∈{0,1,...,w\ni\n}\nWhen\nhash\n2\nhashlen\n/∈\n[\nz\n∑\nr=0\nB(r;w\ni\n,p),\nz+1\n∑\nr=0\nB(r;w\ni\n,p)\n]\nz=z+1.\nWhen the loop is finished, the algorithm will return\n<hash,π,z>\nwherew\ni\nis the weight of the miner nodei,and\nB\n(\nr;w,p\n)\n=\n(\nw\nr\n)\np\nr\n(\n1−p\n)\nw−r\n,\nw\n∑\nr=0\nB\n(\nr;w,p\n)\n=1.\nThe  binomial distribution ensures  that  a  malicious  node will\nnot increase its advantage via sybil attacks since\nB\n(\nr\n1\n+r\n2\n;w\n1\n+w\n2\n,p\n)\n=B\n(\nr\n1\n;w\n1\n,p\n)\n+B\n(\nr\n2\n;w\n2\n,p\n)\n.\nFinally, this  algorithm will  return a  parameterz, which indi-\ncates how many times the miner nodeiis selected. Ifz>0,\nthe miner nodeiwill be selected as a potential leader.\nAssume  that  there  arelpotential  leaders{L\n1\nk\n,...,L\nl\nk\n}.\nOf  course,  the  fewer  is  the  potential  leaders,  and  the  fewer\ncommunications  will  be  required.  In  order  to  prevent  sybil\nattacks,  there  is  a  canonical  calculation  model  that  divides\nthe  users  in  each  round  equally,  based  on  the  number  of\ntokens in the wallet and the number of transactions initiated in\nthe previous round, so that each user node represents several\n“average user  nodes.” Assume  that  there  areNminer nodes\nin total,w\ni\nis the number of “average user nodes” that miner\niserves,iis  also  the  user  node  mineriserves,  and  thus,\nW=\n∑\nN\ni=1\nw\ni\n,whereWis the total weight of the system.\n3) Generating blocks by potential leaders. If a node believes\nitself to be a potential leader, it starts the process of building\nablock.\n4)  Broadcasting  blocks.  Potential  leaders{L\n1\nk\n,L\n2\nk\n,...,L\nl\nk\n}\nsend blocks being packed in to others.\n5)  Identifying  the  leader  node.  The  one  with  the  largest\nzamong  all  potential  leaders  is  identified  as  the  leader.\nAs such, the parameterzcan be viewed as the priority of the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "384IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nminer node. The leader’s block is selected for verification and\nconfirmed in the entail network, and a network-wide consensus\nwill be reached on the new block. If the miner with the largest\nzis  malicious, all  miners  will  reach  consensus  on  the  block\nfrom the miner with the second maximum priority and so on,\nor the honest miner will reach an agreement to treat this block\nas an empty block. After a specified time interval, the previous\nleader  of  this  round will  send  the  signal  of  starting  the  next\nround in this situation.\nG. Building Blocks\nAfter timet\n1\nsince the formation of the genesis transaction\ninD\nk\ni\n, miner nodes will stop the transaction approval forD\nk\ni\n,\nand the sub-DAG in each miner’s memory pool stops the new\ntransaction approval. Then, mineriwho is the leader of round\nk−1  sendsD\nk\ni\nand  a  signal  of  starting  consensus  at  this\npoint  to  all  remaining  miners.  After  other  miners  verify  that\nthis  signal  is  legitimate  such  as  time  interval  being  within  a\nspecified range, then they all send their own sub-DAG of the\ntransactions  to  all  remaining  miners.  Then, all  miners  verify\nthe received transactions inD\nk\nj\n(j=1,2,...,N). Meanwhile,\nsome potential miners are randomly selected to build a block.\nThe  potential miners  produce a  coinbase  transaction  “M”as\nthe  last  tip  unit  of  the  total  DAG,  linking  each  miner’s  tip\ntransactions  to  the  coinbase  transaction  via  a  hash  pointer\n(such  as  depicted  in  Fig.  3,  whereN=4),  i.e.,  all  tip\ntransactions  are  approved  by  a  coinbase  transaction.  The\ncoinbase  transaction  includes  hash  value  of  all  tips  of  the\nsub-DAGs generated in roundkand other related information,\nsuch as the publishment of transaction fee and reward of the\nminer  nodes.  In  this  manner,  the  total  transaction  DAGD\nk\nof  the  entire  network  in  roundkcan  be  established.  When\npotential  leaders  generate  blocks{B\n1\nk\n,B\n1\nk\n,...,B\nl\nk\n}and  send\nthem  to  all  miners  for  verification  based  on  priority,  once\nverified,B\nk\nwill be linked toB\nk−1\n.\nIII.  A\nNALYSIS OFSECURITYISSUES\nSecurity is a vital component for most decentralized cryp-\ntocurrencies. In this section, we discuss several classic attack\nscenarios, including double spending attacks, dust transaction\nattacks,  and  other  maliciousattacks.  We  also  discuss  the\nrelated issues of tip selection and economic incentives, which\nplay a key role for the economic stability and security.\nA. Double Spending Transactions\nTo avoid double spending, a transaction can only be finally\nconfirmed if it is packed into a block and appended onto the\nblockchain.\nIf two double spending transactions are located in different\nblocks, then it is relatively easy to determine which one should\nbe confirmed according to the block order. Based on the strict\nsetting of round interval, all miner nodes know that this round\nwill build a unique block whether it is valid or empty, then it\nis hard for malicious miner nodes to withhold blocks in case\nto  replace  the  honest  chain  as  all  honest  miner  nodes  will\nnot accept simultaneously two  blocks and  more. Meanwhile,\nall miner nodes will reach an agreement on a unique priority\nbased on the  network synchronization assumption as  well  as\nthe consensus on priority in the block header.\nOtherwise, if they are located in the same block, we adopt\nthe IoTA mechanism to discard double spending transactions.\nHowever, it is not difficult based on the setting that each user\nnode  address  can  only  be  added  to  one  miner’s  serving  set,\nso the double spending transactions will not be located in two\nsub-DAGs from  two  different miners.  In  this  case,  all  miner\nnodes can discard randomly one of the conflicted transactions\nwhen they find them in packing sub-DAGs. In addition, if the\nminer  node  did  not  find  the  malicious  transactions  and  the\nmalicious  transactions  will  be  located  in  the  same  block,\nit  is  relatively  simple  by  just  using  the  IoTA  mechanism  to\ndetermine  which  transaction  is  effective.  It  is  worth  noting\nthat  in  our  design,  the  global  DAG  in  each  block  can  be\nappropriately  sized  so  as  to  facilitate  the  determination  of\ndouble  spending  transactions.  Similarly,  if  double  spending\ntransactions are  generated in  memory pools,  then  one of  the\ntransactions can be randomly abolished, since the transaction\nin  memory  pools  is  not  confirmed.  Also,  all  transactions\nin  memory  pools  will  be  quickly  connected  to  the  global\ntransaction DAG.\nB. Dust Transactions\nAs  in  most  cryptocurrency systems,  large numbers of tiny\nbut bulky transactions flooding the network can cause conges-\ntion of the network, and attackers can conduct parasitic chain\nattacks  by  posting  tiny  transactions.  For  the  security  of  the\nnetwork and to avoid parasitic chain attacks, dust transactions\nmust  be  prevented  from  broadcasting  to  the  network,  and\nminer nodes receiving dust transactions must not approve them\nto a sub-DAG.\nIn  Bitcoin  practice,  if  the  transaction  fee  is  higher  than\n1/3  of  the  transaction  value,  it  might  be  considered  as  a\ndust  transaction.  Generally  speaking,  the  minimum  volume\nof  a  pay-to-public  key  hash  (P2PKH)  transaction  in  Bitcoin\nwith one input and one output totals 148+34=182 bytes,\nand  the  transaction  fee  is  determined by  the  minRelayTxFee\n(0.00001BTC/KB  by  default)  preconfigured  for  each  node,\nso the transaction fee is “182/1000∗minRelayTxFee.” So, the\ntransaction value should not be lower than 0.00000546 BTC.\nOtherwise, it will be identified as a dust transaction.\nInspired by Bitcoin, we explicitly consider dust transactions\nin  our  work  in  order  to  avoid  parasitic  chain  attacks  and\nother malicious behaviors. First, the minimum amount of the\ntransaction  can  be  estimated  depending  on  its  type.  In  case\nwhen its output is below a predefined threshold, the transaction\nwill  not  be  constructed.  Particularly,  if  this  output  happens\nto  occur  as  a  change,  dust  transactions  can  be  avoided  by\ndiscarding that part of the dusty output to act as a transaction\nfee.\nC. Malicious Attacks From Adversaries\nThere  might  be  malicious  attacks,  and  here,  we  discuss\nseveral potential scenarios.\nFirst, in case when the selected miner with the highest prior-\nity is malicious, we offer two possible strategies of malicious\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "QI et al.:  DAG-BLOCK: A NOVEL ARCHITECTURE FOR SCALING BLOCKCHAIN-ENABLED CRYPTOCURRENCIES385\nminers and two solutions to deal with those cases. One strategy\nis  to  send  the  same  malicious  block  to  all  honest  miners.\nIf  the  block  is  empty  or  if  the  block  contains  a  malicious\ntransaction, then the honest miner nodes will discard the block\nand reach an agreement on an empty block. In addition, as the\nDAG of transactions of all miners has been broadcast network\nwidely before the block is broadcast, the construction method\nof  the  total  DAG  is  basically  determined,  because  our  work\nis  designed  with  the  role  of  potential  leaders  that  send  the\nblocks  along  with  a  proof  of  priority  to  the  miners,  so  the\nhonest miners discard the block and choose the next block in\norder of  priority until the  honest block is  chosen. Therefore,\nthe method described above is valid and effective to determine\nthe malicious block. Also, the second potential strategy is  to\nsend honest blocks to some of the honest miners and malicious\nblocks  to  the  remaining  honest  miners.  In  this  case,  when\nthe  number  of  malicious  miner  nodes  does  not  exceed  1/3\nand  the  block  is  verified  and  broadcast  by  all  miner  nodes,\nthe  malicious  block  will  not  be  committed  and  all  honest\nminer nodes will select an empty block, and then, consensus\nis reached.\nSecond,  in  case  when  a  miner  node  submits  a  sub-DAG\ncontaining  a  malicious  transaction  or  containing  a  double\nspending transaction, an honest miner will not accept the entire\nsub-DAG as the miner node should have verified the malicious\ntransaction  before  submitting  the  sub-DAG  for  consensus.\nIf  the  miner  realized  that  its  sub-DAG  is  not  going  to  be\npacked into the block in this round, it will verify the sub-DAG\nagain, reconnect transactions in this sub-DAG, and wait to be\npackaged  into  the  next  block.  There  will  not  be  a  situation\nwhere an honest sub-DAG is not packed.\nMeanwhile, in addition to setting up incentive mechanisms,\nwe can use penalty mechanisms tomaintain the market ecosys-\ntem. Each miner node address is associated with a wallet that\nmust deposit a certain amount of digital currency. The behavior\nof the miner is monitored by the entire network, i.e., all miner\nnodes. If  a  miner  node or  user node  discovers the  malicious\nbehavior  from  a  miner  node,  it  can  record  the  evidence  and\npackage it into a transaction,then connect it to the sub-DAG it\nis responsible for, and submit this evidence onto the blockchain\ntogether  with  the  sub-DAG  composed  of  transactions.  After\nthe  consensus  process,  the  miner  will  be  punished  for  his\nmalicious  behavior  by  decreasing  the  corresponding  amount\nfrom  his  wallet,  distributing  it  to  the  users  who  discovered\nthe malicious behavior and electing a new miner responsible\nfor this part of the users. The malicious miner will no longer\nbe  selected  as  a  miner  node,  and  transformation  of  data  or\ntransaction verification will not be performed by the remaining\nminers.\nD. Selection of Tips\nWhen a user node submits a transaction, it will request the\nlatest sub-DAG from its corresponding miner node. In order to\nreduce the communication cost, the miner nodes can rank the\ntransactions to offer the user node recommendations and only\nsend  the  necessary  information  of  tips  or  other  transactions\nto user node instead of the complete information of the sub-\nDAG. According to  our designed  incentive mechanism, each\nFig. 9.Calculation  of cumulative  weights:  an illustrating  example.\ntransaction  has  an  approval  fee  related  to  its  size  and  the\namount  of  the  transaction  fee.  As  such,  one  natural  recom-\nmendation  algorithm  offered  to  user  nodes  is  based  on  the\nlist of approval fees in descending order, and thus, user nodes\nonly  need  to  know  the  order  of  approval fee  rather  than  the\ncomplete information of the DAG ledger.\nThe  second  algorithm  is  based  on  the  selection  algorithm\nof  tips  as  in  the  existing  DAG-based  ledger  (e.g.,  IoTA,\nByteball  [23],  Hashgraph  [24],  GHOST  [25],  PHANTOM\n[26]) to  avoid double spending. The sequence of timestamps\nmentioned  earlier  is  used  to  compute  the  hash  of  the  block\nbody. The  timestamps  are  based  on  local  clocks  in  a  decen-\ntralized  network  and  thus  are  not  theoretically  reasonable  in\ndetermining double spending transactions. Therefore, an algo-\nrithm is needed to sort and select the tip transactions.\nThird, a weighting mechanism is introduced to help identify\ndouble  spending.  The  value  of  weight  is  positively  related\nto  the  value  of  the  transaction.  However,  in  order  to  pre-\nvent  the  transaction  value  from  being  too  large,  we  use  the\nlogarithmic  function  to  calculate  the  weightsW,  i.e.,W=\nlg(value of  the transaction+1). This can also prevent trans-\nactions containing double spending with too high cumulative\nweight  to  increase  the  possibility  of  a  successful  double\npayment attack. The cumulative weight is calculated as Fig. 9.\nThe numbers in brackets denote the weight of the transac-\ntions. Before the transactionXwas submitted to the sub-DAG,\nthe cumulative weight of transactionDis\nW\nD\n=w\nD\n+W\nA\n+W\nC\n=1+3+5=9.\nAfterXwas submitted, the cumulative weight is\nW\nD\n=w\nD\n+W\nA\n+W\nC\n=1+4+7=12.\nWith  this  calculation,  an  attacker  cannot  massively  increase\nthe  cumulative  weight  of  a  double  spending  transaction  by\nexploiting  the  generation  of  a  small  number  of  transactions\nwith a larger value.\nAccording  to  this  weighting  mechanism,  we  now  present\nthe tip selection algorithm based on the Markov Chain Monte\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "386IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nCarlo (MCMC) to protect against parasitic chain attacks. The\nspecific implementation of the MCMC algorithm is as follows.\n1) TakingRas  a relatively large cumulative weight value,\nall  transactions  with  cumulative  weights  in[R,2R]will  be\ncalled the setA.\n2) ScatteringNwalkers randomly in each transaction of the\nsetA.\n3) Random walkers move toward the tips in the direction of\nthe DAG edge, calculate their arrival time at the tips, discard\nthe walkers that arrive the tips too quickly, and select the tip\nthat the walker reaches fastest as the approved transaction on\nthis basis.\n4) A walker  is most likely to  move toward the  transaction\nwith the largest cumulative weight when encountering multiple\nbifurcated  edges.   If   the   probability  of   moving  from   any\ntransaction x to transaction y is denoted asP\nxy\n,then\nP\nXY\n=\nexp\n(\n−α\n(\nW\nX\n−W\nY\n))\n∑\nZ:Z→X\nexp\n(\n−α(W\nX\n−W\nZ\n)\nwhereZis  the  other  subtransaction  ofX,andW\nX\nis  the\ncumulative weight value of the transactionX.\nIn the operation of the system, whether it is an ordinary user\nerror  or  a  malicious  attack  by  adversaries,  conflicts  between\ntransaction  are  inevitable,  even  if  we  limit  the  size  of  the\nDAG  within  blocks.  In  order  to  prevent  a  transaction  from\nbeing replaced by conflicting transactions, our system adopts\nan  algorithm  to  easily  discriminate  conflicting  transactions,\nthus preventing the system from double-payment attacks. The\nrule  of  discriminating  conflicting  transaction  algorithm  is:\nrunning the tip selection algorithm based on MCMC multiple\ntimes,  counting  the  number  of  times  when  two  conflicting\ntransactions are indirectly  approved by  the  selected  tips,  and\nselecting the transaction with the highest number of approvals\nas the legal transaction.\nFourth,  two  conflicting  transactions  are  not  allowed  to\nexist  in  the  same  block.  If  the  miner  node  is  honest,  it  will\ndiscard randomly one of the transactions in packing sub-DAG\nto  safeguard  the  security  of  the  system.  If  there  are  two\nconflicting  transactions  in  the  same  block  in  case  when  the\nminer node is malicious, all  honest miner nodes will discard\nthis  sub-DAG,  which  is  propagating by  the  malicious  miner\nnode to maintain the consistence of the consensus.\nE. Economic Incentives\nIn  addition  to  the  above  efforts,  designing  incentive  com-\npatible  economic  mechanisms  will  help  avoid  malicious  or\nstrategic behaviors and ensure miner and user nodes make the\nexpected honest actions.\nAs such, regarding economic incentives, there is a transac-\ntion fee submitted by the user node for each transaction, which\ncan be divided into three parts: one for the first node to approve\nthis  transaction  (so  as  to  prevent  lazy  nodes  from  directly\napproving a premature transactions), i.e., the approval fee; one\nfor the miner serving this user node, i.e., the transmission fee,\nand the third part to the miner who packaged the block at this\nstage, i.e., the block packing fee.\nIn  our  design,  the  transaction  fee  is  related  to  the  volume\nof  transaction  and  the  value  of  transaction.  As  the  natural\nprinciple of randomly selected leaders, the reward obtained by\neach miner is proportional to thenumber of user nodes that it\nis serving and the value of transactions initiated by those user\nnodes. According to the statistic rules, reasonable assumptions\ncan be made that the value of transactions received by every\nminer node follows a normal distribution, so that the reward of\nminer nodes is partially proportional to the mean of value of\ntransaction.  As  such,  theoretically,  transaction  fees  obtained\nby  miner  nodes  can  be  balanced.  In  addition,  miner  nodes\nneed a higher bandwidth to transfer a larger transaction, so it\nis reasonable that the transaction fees are proportional to the\nvolume of transactions. Finally, when a miner node has more\nuser nodes, it has more chance to deal with more transactions,\nwhich  is  conducive  to  the  scale  of  the  system.  To  sum  up,\naccording to  this method, our system  is  economically stable,\nand miner nodes will be motivated to scale the number of user\nnodes and maintain the benefit of user nodes, i.e., maintain the\nsystem stability.\nIV.  C\nOMPARISONWITHOTHERDAG-BASED\nARCHITECTURES\nDAG has been widely adopted as an underlying architecture\nin the existing distributed ledgers and cryptocurrencies, such as\nIoTA, Byteball, and Hashgraph. In this section, we will discuss\nthe major differences between our DAG-BLOCK design  and\nother  DAG-based  architectures,  taking  IoTA  as  an  example.\nTo  summarize, as  a novel architecture, DAG-BLOCK differs\nwith IoTA in three important dimensions, i.e., data structure,\nnetwork model, and consensus algorithm.\nFirst, for the data structure, DAG-BLOCK still maintains a\nchain-based linear  structure in  its  underlying blockchain and\nembeds the DAG-based transaction graph into blocks. This is\nparticularly different with  the  system-wide  network structure\nin  IoTA and other DAG-based architectures. This design can\nrestrict  the  size  of  transaction  DAG  within  each  block  and\ncan  help  solve  the  long-standing  issues  of  uncontrollable\nconfirmation time  of  tip  transactions caused  by  the  infinitely\nexpanding  of  DAG  networks  and  thus  has  the  potential  of\nenhancing the overall consistency and security.\nSecond,  for  the  network  model,  we  adopt  a  two-layer\nnetwork  model  and  there  are  two  roles  in  the  network,  i.e.,\nthe  miner  node  and  the  user  node.  The  miner  nodes  are\nresponsible for proposing and verifying transactions, reaching\nconsensus and recording all transactions, and this is the same\nas  the  IoTA  nodes.  However,  in  our  DAG-BLOCK  model,\na  miner  node  is  allowed  to  serve  a  certain  amount  of  user\nnodes, which need only submit transactions and choose tips.\nAs  such,  the  number  of  miner  nodes  can  be  far  less  than\nthat of user nodes, and the required communication overhead\ncan be reduced compared with IoTA, especially in large-scale\nnetworks. Meanwhile, we propose the open block mechanism\nto allow user nodes choose tips independently, which can both\nhelp reduce the workload of user nodes and also give them the\nchance to participate in the consensus process to improve the\ndecentralization level.\nThird,  for  the  consensus  algorithm,  we  propose  to  use\nrandom  leader  selection  in  our  consensus  algorithm,  where\na  leader  needs  to  be  elected  to  generate new  blocks  in  each\nround,  and  the  block  needs  all  miners’  verification  before\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "QI et al.:  DAG-BLOCK: A NOVEL ARCHITECTURE FOR SCALING BLOCKCHAIN-ENABLED CRYPTOCURRENCIES387\nappending into the blockchain. While in IoTA blockchain, all\nminers  can  append  transactions  to  DAG  and  verify  them  in\nlater stages.\nV.   C\nONCLUDINGREMARKS\nIn  this  article,  we  aim  at  designing a  novel DAG-BLOCK\narchitecture for blockchain-enabled cryptocurrency markets in\norder  to  improve  the  scalability.  Technically,  we  propose  to\nreplace the Merkel-tree-based transactions structure within the\nblock by  DAG  and also  propose to  use  open blocks,  so  that\nuser nodes can participate in verifying the transactions. On this\nbasis, we design a new market structure in which each miner\nserves only a group of users, so as to reduce miners’ workload\nand  thus  help  scale  to  more  users  and  improve the  speed  of\nprocessing transactions.\nIn our future work, we will extend our work in the following\naspects. First, we plan to construct an economically incentive\ncompatible  mechanism  to  justify  our  transaction  fee  design\nbased on game theoretic analysis. Second, we plan to formally\nprove and evaluate the consistency, security, and performance\nof the algorithms for our proposed algorithms. Third, we will\nrelease  the  synchronous  network  assumption  and  investigate\nour  architecture  in  an  asynchronous  network  model.  Fourth,\nwe plan to collect real-world data so as to empirically evaluate\nthe scalability of our proposed architecture.\nR\nEFERENCES\n[1]   S.  Nakamoto.  (2008).Bitcoin:  A  Peer-to-Peer  Electronic  Cash  Sys-\ntem.   Accessed:   Feb.   23,   2019.   [Online].   Available:   https://bitcoin.\norg/bitcoin.pdf\n[2]   S. King. (Nov. 2014).Ppcoin: Peer-to-Peer Crypto-Currency With Proof-\nof-Stake.  [Online].  Available:  https://peercoin.net/assets/paper/peercoin-\npaper.pdf\n[3]   R.  Zhang,  R.  Xue,  and  L.  Liu,  “Security  and  privacy  on  blockchain,”\nACM   Comput.   Surv.,   vol.   52,   no.   3,   pp. 1–34,   May   2020,   doi:\n10.1145/3316481.\n[4]   I.   Eyal,   A.   E.  Gencer,   and   E.  G.   Sirer,   “Bitcoin-NG:   A  scalable\nblockchain  protocol,”  inProc.13th  Usenix  Conf.  Netw.  Syst.  Design\nImplement.,  2016, pp. 45–59.\n[5]   L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Saxena,\n“A  secure  sharding  protocol   for  open  blockchains,”   inProc.  ACM\nSIGSAC  Conf.  Comput.  Commun.  Secur.,  Vienna,  Austria,  Oct.  2016,\npp. 17–30.\n[6]   E.  Kokoris-Kogias,  P.  Jovanovic,  L.  Gasser,  N.  Gailly,  E.  Syta,  and\nB.  Ford,  “OmniLedger:  A  secure,  scale-out,  decentralized  ledger  via\nsharding,”   inProc.   IEEE   Symp.   Secur.   Privacy   (SP),   May   2018,\npp. 583–598.\n[7]   J.   Wang   and   H.   Wang,   “Monoxide:   Scale   out   blockchains   with\nasynchronous  consensus  zones,”  inProc.  16th  USENIX  Symp.  Netw.\nSyst.   Design   Implement.,   2019,   pp.   95–112.   [Online].   Available:\nhttps://www.usenix.org/system/files/nsdi19-wang-jiaping.pdf\n[8]   A.  Manuskin,  M.  Mirkin,  and  I.  Eyal,  “Ostraka:  Secure  blockchain\nscaling  by  node  sharding,”  inProc.  IEEE  Eur.  Symp.  Secur.  Privacy\nWorkshops (EuroS&PW), Sep. 2020, pp. 397–406.\n[9]  The  ZILLIQA  Team.The  ZILLIQA  Technical  Whitepaper.  Accessed:\nNov.  13, 2021.  [Online].  Available:  https://docs.zilliqa.com/whitepaper.\npdf\n[10]Harmony.   Accessed:   Nov.   26,   2021.   [Online].   Available:   https://\nharmony.one\n[11]   V.  Buterin.  (2014).Ethereum:  A  Next-Generation  Smart  Contract  and\nDecentralized  Application  Platform.  Accessed:  Feb.  2,  2022.  [Online].\nAvailable:https://ethereum.org/669c9e2e2027310b6b3cdce6e1c52962/\nEthereum_Whitepaper_-_Buterin_2014.pdf\n[12]   J.  Yadav  and  R.  Shevkar,  “Performance-based  analysis  of  blockchain\nscalability   metric,”Tehniˇcki   Glasnik,   vol.   15,   no.   1,   pp. 133–142,\nMar. 2021.\n[13]   Y.   Gilad,   R.   Hemo,   S.   Micali,   G.   Vlachos,   and   N.   Zeldovich.\n(Apr.  2018).Algorand:  Scaling  Byzantine  Agreements  for  Cryptocur-\nrencies. Accessed: Sep. 11, 2021. [Online]. Available: https://eprint.iacr.\norg/2017/454.pdf\n[14]   A.  Kiayias,  A.  Russell,  B.  David,  and  R.  Oliynykov.Ouroboros:  A\nProvably Secure Proof-of-Stake Blockchain Protocol. Accessed: Feb. 15,\n2022. [Online]. Available:  https://eprint.iacr.org/2016/889.pdf\n[15]   K.  Cao,  F.  Lin,  C.  Qian,  and  K.  Li,  “A  high  efficiency  network  using\nDAG  and  consensus  in  blockchain,”  inProc.  IEEE  Int.  Conf.  Parallel\nDistrib. Process. Appl., Big Data Cloud Comput., Sustain. Comput. Com-\nmun.,  Social  Comput.  Netw.  (ISPA/BDCloud/SocialCom/SustainCom),\nDec. 2019, pp. 279–285.\n[16]   H.  Pervez,  M.  Muneeb,  M.  U.  Irfan,  and  I.  U.  Haq,  “A  comparative\nanalysis of DAG-based blockchain architectures,” inProc. 12th Int. Conf.\nOpen Source Syst. Technol.  (ICOSST), Dec. 2018, pp. 27–34.\n[17]   Y. Yuan and F. Wang.Blockchain Theories and Methods. Beijing, China:\nTsinghua Press, 2019.\n[18]   [Online].  Available:  https://www.iota.org/\n[19]   Y.  Sompolinsky,  Y.  Lewenberg,  and  A.  Zohar,  “SPECTRE:  A  fast\nand  scalable  cryptocurrency   protocol,”   Cryptol.  ePrint  Arch.,  Paper\n2016/1159,   2016.   Accessed:   Sep.   18,   2021.   [Online].   Available:\nhttps://eprint.iacr.org/2016/1159.pdf\n[20]   Y.   Lewenberg,   Y.   Sompolinsky   and   A.   Zohar.   (2015).Inclusive\nBlock  Chain  Protocols.  Accessed:  May  4,  2021.  [Online].  Available:\nhttp://fc15.ifca.ai/preproceedings/paper_101.pdf\n[21]   E.  Androulaki  and  C.  Cachin.Christopher  Ferris,  etc.  Hyperledger\nFabric:  A Distributed  Operating  System  for  Permissioned  Blockchains.\n[Online].  Available:  http://vukolic.com/fabric.pdf\n[22]   D. Ongaro and J. Ousterhout, “Insearch of an understandable consensus\nalgorithm  (extended  version),”  inProc.  USENIX  Annu.  Tech.  Conf.,\nPhiladelphia,  PA, USA, 2014, pp. 305–319.\n[23]   A.  Churyumov.Byteball:   A  Decentralized   System   for   Storage   and\nTransfer   of   Value.   Accessed:   Dec.   11,   2021.   [Online].   Available:\nhttps://obyte.org/Byteball.pdf\n[24]   L.  Baird.The  Swirlds  Hashgraph  Consensus  Algorithm:  Fair,  Fast,\nByzantine Fault Tolerance. Accessed: Dec. 11, 2021. [Online]. Available:\nhttps://www.swirlds.com/downloads/SWIRLDS-TR-2016-01.pdf\n[25]   Y. Sompolinsky and A. Zohar.Secure High-Rate Transaction Processing\nin Bitcoin (Full Version). Accessed: Sep. 21, 2021. [Online]. Available:\nhttps://eprint.iacr.org/2013/881.pdf\n[26]   Y.  Sompolinsky  and  A.  Zohar.PHANTOM:  A  Scalable  BlockDAG\nProtocol.   Accessed:   Dec.   26,   2021.   [Online].   Available:   https://\neprint.iacr.org/2018/104.pdf\nNaina Qireceived  the B.A. degree  in  mathematics\nand applied mathematics from Shandong University,\nShandong, China, in 2020. She is currently pursuing\nthe  M.S.  degree  in  probability  and  mathematical\nstatistics  with  the  School  of  Mathematics,  Renmin\nUniversity  of China,  Beijing,  China.\nHer  current  research  interests  include  blockchain\nand consensus algorithms.\nYo n g   Yu a nreceived   the  B.S.,  M.S.,  and  Ph.D.\ndegrees   in   computer   software   and   theory   from\nthe  Shandong  University  of  Science  and  Technol-\nogy,  Shandong,  China,  in  2001,  2004,  and  2008,\nrespectively.\nHe  is  currently  a  Professor  with  the  School  of\nMathematics,  Renmin  University  of China,  Beijing,\nChina, and also with the Engineering Research Cen-\nter of Finance Computation and Digital Engineering,\nMinistry  of  Education,Beijing.  He  has  authored\nover 150 articles published in academic journals and\nconferences. His current research interests include blockchain, cryptocurrency,\nand smart contracts.\nDr. Yuan is also an Associate Editor of the IEEE T\nRANSACTIONS ONCOM-\nPUTATIONALSOCIALSYSTEMSand  ACTA AUTOMATICASINICA. He is\nthe Chair of the IEEE Council on RFID Technical Committee on Blockchain,\nthe  Co-Chair  of  the  IEEE  SMC  Technical  Committee  on  Blockchain,  and\nthe Director  of the Chinese Association  of Automation Technical  Committee\nof  Blockchain.  He  is  the  Secretary  General  of  the  IEEE  SMC  Technical\nCommittee  on  Social  Computing  and  Social  Intelligence,  the  Vice  Chair  of\nthe IFAC Technical Committee on Economic, Business, and Financial Systems\n(TC 9.1), and the Chair of the ACM Beijing Chapter on Social and Economic\nComputing.  He  is  also  the  Secretary  General  of  the  Chinese  Association  of\nArtificial  Intelligence  Technical  Committee  on  Social  Computing  and  Social\nIntelligence,  and the Vice Director  and the Secretary  General  of the Chinese\nAcademy  of Management  Technical  Committee  on Parallel  Management.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "388IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 11, NO. 1, FEBRUARY 2024\nFei-Yue  Wang(Fellow,  IEEE)  received  the  Ph.D.\ndegree  in  computer  and  systems  engineering  from\nRensselaer  Polytechnic  Institute,  Troy,  NY,  USA,\nin 1990.\nHe joined The University of Arizona, Tucson, AZ,\nUSA,  in  1990,  and  became  a  Professor  and  the\nDirector of the Robotics and Automation Laboratory\nand  the  Program  in  Advanced  Research  for  Com-\nplex  Systems.  In  1999,  he  founded  the  Intelligent\nControl and Systems Engineering Center, Institute of\nAutomation,  Chinese  Academy  of  Sciences  (CAS),\nBeijing, China, under the support of the Outstanding Chinese Talents Program\nfrom the State Planning Council, and in 2002, was appointed  as the Director\nof  the  Key  Laboratory  of  Complex  Systems  and  Intelligence  Science,  CAS.\nIn 2011, he became the State Specially Appointed Expert and the Director of\nthe State Key Laboratory for Management and Control of Complex Systems.\nHe is currently a Professor with the State Key Laboratory for Management and\nControl  of  Complex  Systems,  Institute  of  Automation,  Chinese  Academy  of\nSciences, and also with the Institute of Systems Engineering,  Macau Univer-\nsity  of Science  and  Technology,  Macau,  China.  His  current  research  focuses\non  methods  and  applications  for  parallel  intelligence,  social  computing,  and\nknowledge  automation.\nProf.  Wang  is  a  fellow  of  INCOSE,  IFAC,  ASME,  and  AAAS.  In  2007,\nhe  received  the  National  Prize  in  Natural  Sciences  of  China  and  became  an\nOutstanding  Scientist  of  ACM  for  his  work  in  intelligent  control  and  social\ncomputing. He received the IEEE ITS Outstanding Application  and Research\nAwards in 2009 and 2011, respectively.  In 2014, he received  the IEEE SMC\nSociety Norbert Wiener Award. Since1997, he has been serving as the General\nor  Program  Chair  of  over  30  IEEE,  INFORMS,  IFAC,  ACM,  and  ASME\nconferences. He was the President of the IEEE ITS Society from 2005 to 2007;\nthe  Chinese  Association  for  Science  and  Technology,  USA,  in  2005;  the\nAmerican  Zhu  Kezhen  Education  Foundation  from  2007  to  2008;  the  Vice\nPresident  of  the  ACM  China  Council  from  2010  to  2011;  and  the  Vice\nPresident and the Secretary General of the Chinese Association of Automation\nfrom  2008  to  2018.  He  was  the  Founding  Editor-in-Chief  (EiC)  of  the\nInternational  Journal of Intelligent  Control and Systemsfrom 1995 to 2000,\nthe  IEEE  ITS  Magazine  from  2006  to  2007,  the  IEEE/CAA J\nOURNAL\nOF\nAUTOMATICASINICA  from  2014  to  2017,  and  theChina’s  Journal\nof  Command  and  Controlfrom  2015  to  2020.  He  was  the  EiC  of  the\nIEEE Intelligent  Systemsfrom  2009  to  2012,  the  IEEE T\nRANSACTIONS ON\nINTELLIGENTTRANSPORTATIONSYSTEMSfrom 2009 to 2016, and the EiC\nof the IEEE T\nRANSACTIONS ONCOMPUTATIONALSOCIALSYSTEMSsince\n2017,  and  the  Founding  EiC  ofChina’s  Journal  of  Intelligent  Science  and\nTechnologysince  2019.  Currently,  he is  the  President  of  CAA’s  Supervision\nCouncil, IEEE Council on RFID, and Vice President of IEEE Systems, Man,\nand Cybernetics  Society.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 06:24:03 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\A Novel Architecture for Scaling.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
          "Subject": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® Core 7.2.4 (AGPL version) ©2000-2022 iText Group NV",
          "CreationDate": "D:20240117120858+05'30'",
          "ModDate": "D:20240124162746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Computational Social Systems;2024;11;1;10.1109/TCSS.2022.3224764",
            "dc:title": "DAG-BLOCK: A Novel Architecture for Scaling Blockchain-Enabled Cryptocurrencies",
            "dc:subject": "Blockchainconsensusdirected acyclic graph (DAG)scalability",
            "dc:creator": "Naina QiYong YuanFei-Yue Wang",
            "prism:publicationname": "IEEE Transactions on Computational Social Systems",
            "prism:startingpage": "378",
            "prism:coverdisplaydate": "Feb. 2024",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/TCSS.2022.3224764",
            "prism:volume": "11",
            "prism:endingpage": "388",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 11
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "4134IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\nAn Efficient and Compacted DAG-Based\nBlockchain Protocol for Industrial\nInternet of Things\nLaizhong Cui, Shu Yang, Ziteng Chen,YiPan, Mingwei Xu, Member, IEEE, and Ke Xu\nAbstract—Industrial Internet of Things (IIoT) has been\nwidely used in many fields. Meanwhile, blockchain is con-\nsidered promising to address the issues of the IIoT. How-\never, the current blockchains have a limited throughput. In\nthis article, we devise an efficient and secure blockchain\nprotocol compacted directed acyclic graph (CoDAG) based\non a compacted directed acyclic graph, where blocks are\norganized in levels and width. New-generated blocks in the\nCoDAG will be placed appropriately and point to those in the\nprevious level, making it a well-connected channel. Trans-\nactions in the network will be confirmed in a deterministic\nperiod, and the CoDAG keeps a simple data structure at\nthe same time. We also illustrate the attack strategies by\nadversary, and it is proved that our protocols are resistant to\nthese attacks. Furthermore, we design a CoDAG-based IIoT\narchitecture to improve the efficiency of the IIoT system.\nExperimental results show that the CoDAG achieves 164×\nBitcoin’s throughput and 77×Ethererum’s throughput.\nIndex  Terms—Blockchain, compacted directed acyclic\ngraph (CoDAG), industrial Internet of Things (IIoT).\nI. INTRODUCTION\nR\nECENTLY, the industrial Internet of Things (IIoT)\nhas been considered a promising technology and has\nattracted lots of attention. With the development of network\ncommunication, the IIoT devices, including sensors, smart\nobjects, etc., will communicate and interact with others via the\nManuscript received May 31, 2019; revised July 11, 2019; accepted\nJuly 18, 2019. Date of publication July 25, 2019; date of current\nversion February 28, 2020. This work was supported in part by the\nNational Key R&D Program of China under Grant 2018YFB1800302\nand Grant 2018YFB0803405, in part by the National Natural Science\nFoundation of China under Grant No. 61772345, Grant 61625203, and\nGrant 61832013, in part by the China National Funds for Distinguished\nYoung Scientists under Grant 61825204, in part by Beijing Outstand-\ning Young Scientist Project, and in part by the Tencent “Rhinoceros\nBirds”—Scientific Research Foundation for Young Teachers of Shenzhen\nUniversity. Paper TII-19-2220.(Corresponding author: Shu Yang.)\nL. Cui, S. Yang, and Z. Chen are with the College of Computer Science\nand Software Engineering, Shenzhen University, Shenzhen 518060,\nChina (e-mail:,cuilz@szu.edu.cn; yang.shu@szu.edu.cn; 18102720\n54@email.szu.edu.cn).\nY. Pan is with the Department of Computer Science, Georgia State\nUniversity, Atlanta, GA 30302 USA (e-mail:,yipan@gsu.edu).\nM. Xu and K. Xu are with the Beijing National Research Center for\nInformation Science and Technology and the Department of Computer\nScience and Technology, Tsinghua University, Beijing 100084, China\n(e-mail:,xmw@cernet.edu.cn; xuke@tsinghua.edu.cn).\nColor versions of one or more of the figures in this article are available\nonline at http://ieeexplore.ieee.org.\nDigital Object Identifier 10.1109/TII.2019.2931157\nInternet, allowing IIoT users to control their devices remotely\nand share their resources efficiently. Nowadays, the IIoT has\nbeen utilized in many fields, including manufacturing, energy\ntrading, healthcare, vehicles, etc. [1]. However, there are some\nongoing challenges in the IIoT. First, security is a major\nproblem, where the IIoT system may be easily attacked, and\ndata may be tampered by malicious third parties. In [2], the\nauthors pointed out that the current IIoT system is vulnerable to\nresist the distributed-denial-of-service attack. Meanwhile, the\ntraditional IIoT system relies on centralized servers to maintain\nthe network, which is threatened by the weak connectivity and\ncracked security [3]. Second, people are concerned about the\nprivacy, since their data are exposed to network operators and\nother users. Third, the traditional IIoT architecture relies on\ncentralized servers to handle the data computation and storage,\nand it will hit a bottleneck as the number of IIoT users explodes.\nIn these years, blockchain has been regarded as a promising\nsolution to the issues of IIoT [4]–[6]. Blockchain is a decentral-\nized ledger for distributed parties in the network. Different from\nthe traditional system, blockchain provides consensus among\ndistributed participants without any centralized authority. Trans-\nactions in the network are organized in blocks, and they are\nimmutable and auditable. Distributed nodes share the ledger,\nmaking blockchain a reliable and trustworthy system in the\ndistributed environment. Nowadays, blockchain technology has\nbeen employed in the IIoT, and many blockchain-based IIoT\napplications have emerged [7]–[12]. Generally, the blockchain-\nbased IIoT system has lots of advantages, including the\nfollowing.\n1) Blockchain provides reliable services to guarantee the\nsecurity and robustness of the IIoT.\n2) Blockchain protects the sensitive data in the IIoT, since\nonly the user with a matched private key gets access to\nthe data.\n3) Users are incentivized to maintain the IIoT network, since\nblockchain rewards those who make contributions to the\nsystem.\nBitcoin [13] was the first blockchain protocol, where blocks in\nthe network are organized in a linear chain. The author proposed\nthe proof-of-work (PoW) mechanism (also calledNakamoto\nconsensus) for distributed nodes to achieve consensus. More\nspecifically, miners will compete to solve the cryptographical\npuzzles, and the winners are allowed to propose new blocks and\nget the corresponding rewards. Distributed miners in Bitcoin\n1551-3203 © 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4135\nshare the ledger, such that the transaction information cannot be\ntampered by any third party.\nIn a blockchain-based IIoT system, lots of IIoT devices,\ntransactions, and sensitive resources and data are emerging\nevery moment; thus, a faster transaction processing and\nconsensus speed among the IIoT devices should be provided.\nNevertheless, the current throughput of blockchain is quite\nlow. For example, Bitcoin only achieves seven transactions\nper second (tps), and Ethererum [14] only achieves 15 tps\n[15], and they cannot meet the transaction demand of the IIoT.\nTo improve the throughput of blockchain, different solutions\nwere proposed, including modification on the linear chain\nstructure (e.g., Bitcoin-NG [16] and GHOST [17]), consensus\nmechanism (e.g., Algorand [18]), etc. Among them, solutions\nbased on the directed acyclic graph (DAG) structure [19]–[23]\nallow multiple blocks to append the network concurrently;\nthus, they achieve the balance between asynchronization and\nconsensus speed. For the traditional DAG-based schemes\n(e.g., IOTA [19]), however, with more blocks appending the\nnetwork, new-generated transactions will not be confirmed in a\ndeterministic period, and its security will decline accordingly.\nAlthough researchers developed other DAG-based schemes\n(e.g., Byteball [20], Spectre [21], Phantom [22], and Conflux\n[23]), their data structures are complicated, which will cause\nadditional and excessive computation to maintain the ledger.\nMeanwhile, we point out that the current blockchain-based\nIIoT architecture is irrational and inefficient. In the current\nsystem, every IIoT device is acting as a miner and making\ncomputational contribution to the network. However, due to the\nlimited battery, bandwidth, storage, and computing power, the\nIIoT devices cannot provide enough computational services for\nthe blockchain maintenance. Besides, many resources of IIoT\ndevices are wasted in the computation process, which will lead\nto inefficiency of the IIoT system. Hence, a new architecture\nfor the IIoT should be developed to make the blockchain-based\nIIoT system more efficient.\nIn this article, we design an efficient and compacted DAG-\nbased blockchain protocol CoDAG. Unlike the previous DAG-\nbased solutions, we devise a compacted DAG structure with\nlevel and width. Blocks in the CoDAG are organized in levels,\nand each level has a fixed width, which means the maximum\nvalue of new-generated blocks in a round. Blocks in the cur-\nrent level will point to those in the previous level, such that\nthe CoDAG will develop into a well-connected channel. We\ndesign algorithms and protocols to place the new-generated\nblocks at a proper level, making sure that the CoDAG has\nthe consistency and liveness property of blockchain. Compared\nwith previous DAG-based schemes, transactions in the CoDAG\nwill be confirmed in a deterministic period that relies on the\npuzzle difficulty. Meanwhile, the CoDAG keeps a simple data\nstructure by modifying the existing DAG structure slightly\nwithout introducing any additional data structure. Moreover,\nwe demonstrate two basic attack strategies by adversaries and a\n“hybrid” attack strategy that combines the previous strategies,\nand it is proved that our CoDAG is resistant to them.\nFurthermore, we design a CoDAG-based IIoT architecture,\nwhere the IIoT devices are divided intominer,gateway, and\nnode, and the CoDAG is utilized as the backbone data structure\nand protocols to provide the fast consensus speed. For those\nIIoT devices that have greater computing power, they will act\nas miners to maintain the distributed ledger, and their rewards\nwill be the greatest. For the lightweight devices that have better\nbandwidth, they will act as gateways to maintain the encrypted\ncommunication channels and make transactions with others.\nAnd other nodes with limited computing power and bandwidth\nonly need to provide the transaction payments and receive the\ncorresponding computational results. In this architecture, we\nwill make full use of the resources in the IIoT, and the distributed\nIIoT devices can achieve fast consensus by using the CoDAG\nprotocols.\nTo evaluate its performance, we implement a CoDAG proto-\ntype, which is divided into data layer, chain layer, RPC/Console\nlayer, and decentralized application (Dapp) layer. Among them,\nthe chain layer is the most critical module, which is responsible\nfor maintaining the network communication, data structure,\nminer management, and consensus algorithms. We evaluate our\nimplementation in a real network environment, and the experi-\nmental results show that CoDAG scales in width and blocksize.\nWhen the blocksize is 2 MB and the width is 15, the throughput\nof the CoDAG is 1151 tps, which is 164×Bitcoin’s throughput\nand 77×Ethererum’s throughput, respectively. Meanwhile, we\nstudy the effect of different values of level formation time (the\nrequired duration when a level is full), and simulation results\ntell us that due to limited computing power and link delay,\nthe throughput of the CoDAG will stop growing if the level\nformation time is too small. Furthermore, we investigate the\nblock utilization (the proportion of valid blocks in the network),\nand it will converge to 90% with the development of the network.\nThe main contributions of this article are as follows:\n1) We devise an efficient and secure blockchain protocol\nCoDAG to meet the transaction demand of the IIoT.\n2) We design a compacted DAG structure with level and\nwidth and propose algorithms to maintain the network.\n3) We illustrate two basic attack strategies and a “hybrid”\nstrategy in CoDAG and prove that our CoDAG is resistant\nto them.\n4) We propose a CoDAG-based IIoT architecture, where the\nCoDAG is utilized as the backbone protocols and data\nstructure, and the IIoT devices are divided into different\nroles.\nThe rest of this article is organized as follows. Section II will\nintroduce related work of IIoT and blockchain. Section III will\npresent the data structure of the CoDAG and the CoDAG-based\nIIoT architecture. Then, the protocols of the CoDAG and\nwell-connected channel will be studied in Sections IV and V.\nSection VI will describe the CoDAG implementation framework\nin detail. Simulation results will be shown in Section VII.\nFinally, Section VIII will conclude this article.\nII. R\nELATEDWORK\nA.  Blockchain-Based IIoT Applications\nDue to the philosophy of decentralization, blockchain pro-\nvides secure and reliable services for the IIoT. In the blockchain-\nbased IIoT system, data are stored in the distributed ledger,\nand the data computation process does not rely on any\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "4136IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\ncentralized server. Besides, data privacy is guaranteed in the\nblockchain-based IIoT system, making sure that the sensitive\nindustrial data will not be stolen by competitors. Additionally,\nthe IIoT devices sharing their resources (e.g., data storage\nand computing) will be rewarded, which will encourage IIoT\nusers to contribute to the network. These years have witnessed\nthe emergence of many blockchain-based IIoT applications in\nacademia, and blockchain has been deployed in many industrial\nfields, including energy trading, smart factory, logistics, etc.\n[24]. In [8], [25], and [26], blockchain technology is applied in\nenergy trading and enhances the trading security and privacy. In\n[9], blockchain combines the healthcare, making the sensitive\nmedical data immutable and traceable. In [27], the authors\nproposed a decentralized IIoT architecture based on blockchain\nand introduced a whitelist mechanism for a smart factory. Liu\net al.[28] developed a blockchain-based anonymous reputation\nsystem and enhanced the retail marketing. And Huanget al.\n[29] devised a credit-based PoW mechanism and provided\na data authority management for the blockchain-based IIoT\nsystem.\nHowever, we note that the current blockchain-based IIoT sys-\ntem utilizes the traditional blockchain platforms (e.g., Bitcoin,\nsmart contracts, etc.), and they cannot provide fast consensus\nfor distributed nodes in the IIoT system. Besides, the current\nblockchain-based IIoT system is not efficient enough, since\nlots of computation resources are wasted. Therefore, in this\narticle, we will discuss the throughput limitation of traditional\nblockchains and design a new blockchain protocol CoDAG and\na new blockchain-based IIoT architecture.\nB.  Throughput of Current Blockchain\nIn a distributed environment, in order to achieve consensus\namong nodes, many protocols were proposed, which can be cat-\negorized intopermissioned protocol,permissionless protocol,\nandhybrid protocol. For permissioned protocols (e.g., PBFT\n[30], Paxos [31]), only a finite number of designated nodes\nwith permission are selected to maintain the ledger, and its\nconsensus speed will be very fast. Nowadays, permissioned\nprotocols are applied in Hyperledger fabric [32], which allows\nusers to develop their Dapp and achieve fast consensus in the\ndistributed system. However, in permissioned protocols, only\nthe designated parties are allowed to join the network, which\nwill lead to centralization. For permissionless protocols, the\nNakamotoconsensus [13] is thefirst blockchainprotocol applied\nin Bitcoin, and nodes can dynamically join or leave the network.\nThe Nakamoto consensus has two properties of blockchain [33],\n[34]: 1)consistency: distributed miners in the network have the\nconsistent view of the chain; and 2)liveness: a new-submitted\ntransaction will appear in the ledger of all miners. However, the\nthroughput of Bitcoin is only 7 tps, which cannot keep up with\nthe demand in the IIoT world.\nMany improved permissionless protocols were designed to\nimprove the throughput of blockchain, which can be categorized\ninto the following: 1)off-chain modelthat builds additional\nchains outside the main chain and reduces the participants in\nthe consensus system (e.g., lightning network [35] and pegged\nsidechain [36]); and 2)on-chain modelthat improves and\nmodifies the traditional linear chain structure (e.g., Bitcoin-NG\n[16], GHOST [17], and IOTA [19]). For the off-chain models,\nthe lightning network [35] improves the throughput of Bitcoin\nby building the micropayment channels between nodes. And\npegged sidechains [36] are allowed to communicate with the\nmain chain through a two-way peg with desired flexibility.\nSimilarly, other off-chain models rely on the trustworthy third\nparties, and they compromise decentralization. For the on-chain\nmodels, on the one hand, the linear-based solutions, including\nBitcoin-NG [16] and GHOST [17], are developed to improve the\nefficiency, fairness, and usability of Bitcoin. However, in [33],\nit is proved that the linear-based structure is constrained by the\nmaximum network delay in order to guarantee the security of\nblockchain.\nOn the other hand, the DAG-based solutions [19]–[23] enjoy a\ngood throughput performance. Unlike the linear-based models,\nDAG-based solutions allow multiple blocks to attach to the\ntail of the DAG structure simultaneously. Among them, IOTA\n[19] provides the fast consensus service for distributed nodes,\nwhere the new-generated blocks will confirm and point to two\ninvalidated blocks existed in the network. Meanwhile, there are\nno miners in IOTA; thus, the users can make transactions without\nany service charge. However, the transaction confirmation time\nand security of IOTA are not guaranteed as more blocks join the\nnetwork. Besides, the blocks in IOTA is not full ordered, such\nthat there may exist some conflicting transactions, which will\nnot be successfully validated due to the absence of liveness. To\nsolve the issues in IOTA, some improved DAG-based solutions\nwere developed. Byteball [20] maintains the chain by a portion\nof reputable witnesses elected by others and establishes a full\norder between blocks. However, it compromises decentraliza-\ntion, since the ledger is maintained by a finite number of\ndesignated nodes. In the academic area, the DAGlabs proposed\ntwo protocols called Spectre [21] and Phantom [22]. Spectre\n[21] adopts a voting mechanism that every block will submit its\nvote to a pair of previous blocks and try to determine the block\norder according to the majority of votes. Although Spectre has\na high throughput and fast transaction confirmation speed, it\nstill cannot be extended to support the full linear order over\nall blocks. To solve the order issue of Spectre, the DAGlabs\ndevised Phantom [22] to support the full order of blockchain\nmaintained by honest nodes. However, Phantom compromises\nthe transaction speed and confirmation time. Conflux [23]\nintroduces theparent edgeandreference edgeand maintains\nthepivot chainto keep the full order of blockchain, but its\nconfirmation time is still nondeterministic.\nMoreover, Pass and Shi designed the hybrid protocol [37]\nthat combines the permissioned and permissionless protocols\nand devised Thunderella [38] to support instant transactions.\nHowever, the performance of hybrid protocol is limited, since\nthe permissionless protocol is still employed as the backbone\nconsensus in the hybrid protocol.\nAs a summary, a comparison between different consensus\nprotocols is presented inTable I.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4137\nTABLE I\nC\nOMPARISONBETWEENDIFFERENTCONSENSUSPROTOCOLS\nFig. 1.Simple example for CoDAG.\nIII. BASICIDEAS OF THECODAG\nA.  Data Structure of the CoDAG\nIn this article, we devise a blockchain structure CoDAG,\nwhere the DAG structure is employed as the backbone data\nstructure. The advantage of the DAG structure is that it fits\nwell in asynchronous environment; thus, it can achieve high\nthroughput among distributed nodes. Different from previous\nDAG-based blockchain schemes, the CoDAG is more like a\nchannel within fixed width, and blocks are closely connected\nin adjacent levels. Therefore, as blocks join the network, the\nCoDAG will always develop in a compacted DAG shape.\nWe callG=(V, E)the graph, whereVis the set of blocks or\nnodes, andEis the set of edges between nodes. We denotel\nv\nas\nthe level of nodev, which means the value of longest path from\nthe genesis to it.w\nl\nis denoted as the width of levell, which is\nconstrained byK, that is,∀l,w\nl\n<K. The width also means the\nmaximum value of nodes that can concurrently join the network\nin a round. It can also be adjusted or self-adaptive by the block\ngeneration rate.\nIn the graph, nodes in current level will point to those in\nthe previous level. To measure how closely a node connects\nwith others, we defineconnectivityC\nv,w\nas the number of\npaths between nodevandw. Specifically, the connectivity from\nnodevto itself is 1, that is,C\nv,v\n=1. Besides, we define the\nconnectivity of nodevas the number of paths from genesis to it,\nwhich is denoted asC\nv\n.InFig. 1,C\n8\n=9, including nine paths:\n\u00038→4→1→0\u0005,\u00038→4→2→0\u0005,\u00038→4→3→0\u0005,\n\u00038→5→1→0\u0005,\u00038→5→2→0\u0005,\u00038→5→3→0\u0005,\n\u00038→6→1→0\u0005,\u00038→6→2→0\u0005,\u00038→6→3→0\u0005.\nTABLE II\nN\nOTATIONLIST\nIn the CoDAG, the leaf nodes of the graph aretips, and the\ntips with largest connectivity are denoted asnavigators.For\nexample, the navigators inFig. 1are nodes 13–15, since they\nshare the value of connectivity. Furthermore, to maintain the\nstructure of the CoDAG, we definereverse connectivityR\nv\nof\nnodevas the number of paths from navigators to it. InFig. 1,\nR\n8\n=9, including nine paths:\n\u000313→10→8\u0005,\u000313→11→8\u0005,\u000313→12→8\u0005,\n\u000314→10→8\u0005,\u000314→11→8\u0005,\u000314→12→8\u0005,\n\u000315→10→8\u0005,\u000315→11→8\u0005,\u000315→12→8\u0005.\nTo guarantee the security of the CoDAG, the honest nodes\nin the network need to be connected closely and enjoy a higher\nreverse connectivity for the current navigator. The notations of\nthe CoDAG are listed inTable II.\nB.  CoDAG-Based IIoT Architecture\nGenerally, the IIoT devices are limited by their battery,\ncomputing power, storage, communication bandwidth, etc. In\nthe IIoT network, due to the huge transaction number, the\noverwhelming transactions cannot be handled by IIoT devices,\nand lots of resources are wasted in the computation process,\nwhich will lead to inefficiency of the system. To make full use\nof the computation and other network resources, we design a\nframework shown inFig. 2, where the IIoT devices are divided\nintominer,gateway, andnode.\n1)Miner: A miner will maintain the ledger using our\nCoDAG protocols. Similar to Bitcoin, the miners in our\narchitecture will use their computing power to bundle\nthe transactions into blocks and append the blocks to\nour proposed DAG-based structure using the CoDAG\nprotocols. Miners will get the greatest reward, since their\ncontribution to the network is the most.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "4138IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\nFig. 2.CoDAG ledger framework.\n2)Gateway: A gateway can be a lightweight IIoT device\nwith enough bandwidth resources, including 5G base\nstations connecting other IIoT devices, etc. A gateway\nis responsible for downloading the part of the ledger,\nmaintaining the encrypted communication channels with\nother IIoT devices, and making transactions with other\ngateways.\n3)Node: A node will submit the payments and other data\nto the gateway and receive the corresponding results. If a\ndevice has enough computing power or bandwidth, it can\nbe a miner or gateway as well.\nIn this architecture, the CoDAG is utilized as the backbone\ndata structure and protocol, which can provide the fast consensus\nspeed to meet the transaction demand in the IIoT world. Due\nto the profound throughput of the CoDAG, the miners in our\nCoDAG-based IIoT architecture can achieve a fast transaction\nprocessing speed; thus, the transaction fee for each payment\nwill be relatively small, and the IIoT devices are more willing\nto make transactions in the network. Meanwhile, we make full\nuse of the resources of IIoT devices and deploy the lightweight\nnodes (e.g., the gateway) to help maintain the ledger, which will\nimprove the efficiency of our CoDAG-based IIoT system. In the\nfuture, to improve the efficiency further, we will introduce the\nhybrid consensus to the CoDAG, and the system will be divided\nintofast modeandslow mode. In the slow mode, miners will\nrun the PoW protocol and compete to join the membership of\nthe Byzantine agreement and enter the fast mode, and those who\nsuccessfully enter the fast mode will achieve the consensus and\nmaintain the ledger more rapidly and get their corresponding\nrewards.\nIV. P\nROTOCOLS OF THECODAG\nA.  Overview\nTo clarify the protocol of the CoDAG, a brief introduction of\nthe Nakamoto consensus will be given.\n1)  Nakamoto Consensus in a Nutshell:The Nakamoto con-\nsensus is applied in Bitcoin and provides the PoW mechanism\nfor distributed nodes to achieve consensus. Participants in the\nnetwork, calledminers, will try their best to solve a random\nmath puzzle. The miners who successfully solve the puzzle are\nallowed to bundle transactions into a block, and append the block\nto the end of the linear chain, and get the corresponding rewards.\nHowever, due to the propagation delay, forks will happen when\na block is mined by multiple miners simultaneously. When the\nforks exist, honest miners will append new blocks to the longest\nchain.\n2)  Protocol of the CoDAG:Similar to the Nakamoto consen-\nsus, in the CoDAG, transactions will be enveloped into blocks by\nminers who successfully solve the cryptographical puzzles. And\nthe miners who successfully mine a new block will get rewarded;\nthus, miners are incentivized to contribute to the network. Due\nto the network latency, forks may appear, where more thanK\nnodes join the same level. In this case, nodes with higher reverse\nconnectivity will have a higher priority compared with other\nnodes who have a lower reverse connectivity, and the topK\nnodes in levellwith higher reverse connectivity will be defined\nascandidates, and the candidate set is denoted asC\nl\n. A special\ncase is that several nodes with the same priority belong to the\nborderline candidates, and they will be considered as candidates\nand share the rewards.\nB.  Algorithms of the CoDAG\n1)  Block  Generation  Algorithm:To compute where a new\nblock should be placed in the CoDAG, we designGenerate()\nas the main function (see Algorithm 2) andConnectivity()(see\nAlgorithm 1) as the subfunction to compute the connectivity of a\nnode. The input ofGenerate()is the graphGand the new block\nx, and the output is the new graph withxand related edges.\nInagraphG=(V, E),Lrepresents the maximum level,\nand\u0003v, w\u0005denotes an edge pointing from nodevto nodew.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4139\nWhen a new-generated blockxappears and wants to join the net-\nwork,Generate()(see Algorithm 2) will call theConnectivity()\n(see Algorithm 1) to compute the connectivity of every node\ninG.InConnectivity(), we adopt the traversal method level\nby level iteratively from line 5 to line 9. The principal of\nConnectivity()is that, for every nodevin levell, if there are\ndirected edges connecting nodevand nodes in the last level,\nthe algorithm will add the connectivity of nodes in the last level\nto nodev. For example, inFig. 1, suppose we are computing\nthe connectivity of node 8 inl\n3\n, and there are nodes 4–6 inl\n2\n.\nWe note that the directed edges<8,4>connects nodes 4 and\n8; thus, the algorithm will add the connectivity of nodes 4–8,\nthat is,C\n8\n=C\n8\n+C\n4\n. Similarly,Connectivity()will execute\nC\n8\n=C\n8\n+C\n5\nandC\n8\n=C\n8\n+C\n6\ninl\n2\n, and we will get the\nconnectivityC\n8\nof node 8.Connectivity()will start from the\nfirst levell\n0\n, compute the connectivity of other nodes in the\nfollowing levels iteratively, and, finally, return the results to\nGenerate().\nInGenerate(), the nodexin levelLwill be placed according\nto the connectivity and point toKnodes that has the largest\nvalues of connectivity in levelL−1. Meanwhile, if levelL\nis full ofKnodes, the value ofLwill increase by 1. Finally,\nthe network informationG=(V, E)will be updated in lines 6\nand 7.\n2)  Candidate Selection Algorithm:To deal with forks in the\nCoDAG, we developSelect()(see Algorithm 3) to select the\ncandidates of a level according to their reverse connectivity.\nThe input of Algorithm 3 is the graphG=(V, E)and levell,\nand the output is the candidate set inl.\nFirst, from line 2 to line 5,Select()will callConnectivity()\nto compute the connectivity of each node and choose the\nnavigators that has the largest values of connectivity. Line 7\nto line 11 is the computation process of reverse connectivity.\nSimilarly, Algorithm 3 also adopts the traversal method level\nby level iteratively. Contrary to Algorithm 1, the traverse order\nofSelect()is from the outer levelL−1 to the inner level,\nsince the reverse connectivity is the value of paths pointing\nfrom the navigators. And the reserve connectivity of navigators\nin maximum levelLhas the same values of 1. InFig. 1,for\nexample, suppose we are computing the reverse connectivity\nof node 8 inl\n3\n. Since there are edges\u000310,8\u0005,\u000311,8\u0005,\u000312,8\u0005\nconnecting the nodes betweenl\n3\nandl\n4\n, the algorithm will\nadd the reverse connectivity of nodes 10–12 to node 8, that is,\nR\n8\n=R\n8\n+R\n10\n,R\n8\n=R\n8\n+R\n11\n, andR\n8\n=R\n8\n+R\n12\n. Finally,\nline 12 to line 19 is the candidate selection process. If there are no\nmore thanKnodes in levell, they will be selected as candidates\nof this level. Otherwise,Select()will sort and choose the topK\nnodes that have the highest values of reserve connectivity as the\ncandidates of levell.\nV. W\nELL-CONNECTEDCHANNEL OF THECODAG\nDifferent from traditional linear chain, the CoDAG employs\na compacted DAG-based structure that is more suitable in asyn-\nchronous environment, and it will develop into a well-connected\nchannel whose width can be adjusted flexibly. To attack the\nnetwork, adversaries will try to control the navigators, such\nthat the new-generated blocks will point to the adversarial\nnavigators. Therefore, we consider a situation where an attacker\nbuilds an adversarial channel with higher connectivity and\ncontrols the navigators. Similar to Bitcoin [13], we have the\nfollowing notations:\n1)p=proportion of honest computing power;\n2)q=proportion of adversarial computing power;\n3)q\nz\n=probability of an adversary catching up fromzlevels\nbehind.\nLemma 1:\nq\nz\n=\n{\n1,ifp≤q.\n(q/p)\nz\n,otherwise\n.(1)\nIf honest and adversarial nodes start to mine the nextw\nblocks simultaneously, the winning rate of honest party isp,\nand adversary party isq. Hence, the proof of Lemma 1 is the\nsame as [13].\nThen, we investigate the transaction confirmation time.\nLemma 2:If nodeviszlevels away from largest levelL,\nthe possibilityPof deprivation of its candidate identity is:\nP=1−\nz\n∑\nk=0\nλ\nk\ne\n−λ\nk!\n(\n1−\n(\nq\np\n)\nz−k\n)\n,whereλ=z\nq\np\n.\nProof:We suppose there are two nodes in levell, where node\nais produced by honest miners andbis produced by adversary\nminers, and supposeR\na\n>R\nb\nwhen the largest level of the\ngraphLsatisfiesL−l≤z.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "4140IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\nWe first prove that in any levelk>l, for the two honest nodes\nv\ni\nandv\nj\n, thenC\nv\ni\n,a\n=C\nv\nj\n,a\nandC\nv\ni\n,b\n=C\nv\nj\n,b\n;forthetwo\nadversary nodesw\ni\nandw\nj\n,C\nw\ni\n,a\n=C\nw\nj\n,a\nandC\nw\ni\n,b\n=C\nw\nj\n,b\n.\nWe prove it through induction. In levell+1, all honest nodes\nwill point toaand avoid pointing tob; thus, their connectivity\ntoais 1 and connectivity tobis 0; all adversary nodes will\npoint toband avoid pointing toa; thus, their connectivity to\nais 0, and connectivity tobis 1. For a levelk>l, suppose\nthe nodes in the level satisfy the assumption, and there are\nPhonest nodes andQadversary nodes, any honest nodev\nk\nsatisfiesC\nv\nk\n,a\n=XandC\nv\nk\n,b\n=Y, and any adversary node\nw\nk\nsatisfiesC\nw\nk\n,a\n=X\n\u0007\nandC\nw\nk\n,b\n=Y\n\u0007\n. Then, in levelk+1,\nfor any honest nodev\nk+1\n,C\nv\nk+1\n,a\n=X∗P+X\n\u0007\n∗(K−P)\nandC\nv\nk+1\n,b\n=Y∗P+Y\n\u0007\n∗(K−P); for any adversary node\nw\nk+1\n,C\nw\nk+1\n,a\n=X\n\u0007\n∗Q+X∗(K−Q)andC\nw\nk+1\n,b\n=Y\n\u0007\n∗\nQ+Y∗(K−Q).\nThen, we prove the above Lemma. For a levelk>l,R(k)=\n∑\n∀v\nk\nR\nv\nk\nis the total reverse connectivity of all honest nodes in\nlevelk, and\nˆ\nR(k)=\n∑\n∀v\nk\nR\nw\nk\nis the total reverse connectivity\nof all adversary nodes. Suppose\nˆ\nR(k)\nR(k)\n≥\u0002should be satisfied\nto make the adversary party catch up with the honest party. In\nlevelk+1, we will haveR(k)=R(k+1)∗P+\nˆ\nR(k+1)∗\n(K−Q)and\nˆ\nR(k)=\nˆ\nR(k+1)∗Q+R(k+1)∗(K−P)\nindicating that all honest nodes will point to honest nodes first,\nand all adversary nodes will point to adversary nodes first. Based\non the above equations, we can infer that\nˆ\nR(k+1)\nR(k+1)\n≥\n\u0002∗P+P−K\nQ+Q∗\u0002−\u0002∗K\n.\nBecausePandQfollow two independent Poisson distribu-\ntions, the expectation valueE(\nˆ\nR(k+1)\nR(k+1)\n)≥\n\u0002∗E(P)+E(P)−K\nE(Q)+E(Q)∗\u0002−\u0002∗K\n≥\n\u0002∗E(\nP\nQ\n)=\u0002∗\np\nq\n, whereE(\nP\nQ\n)is the ratio of the computing\npower of the honest party to the computing power of the\nadversary party.\u0002\nAn example.Suppose there is an adversary trying to conduct\na malicious behavior (e.g., double-spending attack [39], [40]).\nSimilar to Bitcoin, the attacker needs to append the blocks\nthat contains his own forged transaction records to the network\nand control the candidate identity of the CoDAG, such that the\nfollowing new-generated blocks will verify and point to those\nadversary candidates.\nWe will compute the possibility of the candidate identity\ndeprivation of nodevin different values ofqandz(shown in\nTable III).\nWe can see that given a fixed value ofq, when the value\nofzgrows, the possibility of the candidate identity deprivation\nwill decrease exponentially. Therefore, as the network develops,\nour CoDAG protocol is secure to resist the candidate identity\ndeprivation.\nWe point out that there are two attack strategies that may\nhappen in the CoDAG. The first is that the adversary will build\na completely separate new channel [seeFig. 3(a)]. In this case,\nthe adversary will point to adversarial nodes in the new channel\nrather than the honest node in the original channel, which is the\nsame as Bitcoin.\nThe second is that the adversaries will compete in the original\nchannel with honest nodes [seeFig. 3(b)]. For an adversary, it\nwill first point to adversarial nodes, and the remaining pointers\nFig. 3.Two attack strategies in the CoDAG. (a) Adversary builds an\nalternate channel. (b) Adversary competes in the original channel.\nTABLE III\nP\nOSSIBILITY OFCANDIDATEIDENTITYDEPRIVATION\nwill be given to honest nodes. The strategy for an honest node\nis just opposite.\nIn the second strategy, each node hasKvotes. For the honest\nnodes, they will first give their votes to honest nodes and then\nrandomly give their remaining votes to adversary nodes in\nprevious level. Contrary to honest party, the adversary nodes will\nfirst give their votes to adversary nodes and then randomly give\ntheir remaining votes to honest nodes. However, in Lemma 2,\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4141\nFig. 4.Implementation framework.\nit is proven that, if the honest party dominates the computing\npower, they will get most votes. Meanwhile, as more nodes\njoin the network and number of levels grows, honest votes will\nget accumulated, and the security of the CoDAG will increase\nfurther. Hence, the CoDAG is secure enough to resist these two\nattack strategies.\nWe note that for the same level, if there are 2·Knodes, then\nthe attack strategy belongs to the first one, since the adversary\nwill build an alternate channel whose width is alsoK.Andif\nthere are less than 2·Knodes, the attack strategy belongs to\nthe second one. Moreover, we point out that the adversary will\nconduct a “hybrid” attack strategy, where the first strategy is\nused in some levels, and the second strategy is used in other\nlevels. However, our CoDAG protocol is still resistant to the\n“hybrid” strategy, which can be proved based on the proofs of\ntwo basic strategies we mentioned, and the details are omitted\nin this article. Therefore, these two basic attack strategies can\ncover the “hybrid” strategy by adversary, and the security is\nguaranteed in our CoDAG protocols.\nVI. I\nMPLEMENTATION\nA.  Implementation Framework\nFig. 4demonstrates the framework of our implementation,\nwhere the data layer, chain layer, RPC/Console layer, and Dapp\nlayer are involved. Among them, chain layer is the core layer in\nthe CoDAG, which can be divided into the following.\n1)Network module:Synchronize the network information\nby peer-to-peer protocols.\n2)CoDAG  module:Maintain  the  data  structure  and\nalgorithms.\n3)Miner module:Manage the miners and puzzle difficulty.\n4)Consensus algorithm module:Maintain the consensus\namong nodes.\nB.  Implementation Details\nThe communication and synchronization process is shown\nin Algorithm 4. From line 2 to line 4, nodes will build the\nconnections with others byhandshake(peer)and choose the\nbest\npeersin good condition. In lines 6 and 7,peernodesmeans\nthe navigators inpeer\ninfo, anddagnodesmeans the navigators\ninpeer. From line 8 to line 9, if any difference is found in the\ncurrent level, CoDAG will merge the information ofdag\nnodes\nandpeer\nnodesand synchronize the block information in this\nlevel. Then, in lines 10 and 11,peer\nnodesanddagnodeswill\npoint to blocks in previous level. The loop from line 8 to line\n11 will not stop untilpeer\nnodesanddagnodesshare the block\ninformation at a certain level.\nThe process of inserting a block is given in Algorithm 5. Like\nBitcoin, transactions in the CoDAG are considered valid after\nbeing confirmed in the last constant levels. From line 2 to line\n5, for∀lwherel\nv\n−l<constant, the algorithm will validate\nnode and its containing transactions inpeer\nnodepool[l].If\nnode is valid, it will join thenode\npool. In line 6,nodepoolwill\nbe sorted by their connectivity, and the topKnodes with the\nlargest connectivity will become the navigators.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "4142IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\nAlgorithm 6 shows the process of updating the world state.\nWe defineworld\nstateas the states of participants in the net-\nwork, where their account balances and transaction records are\ninvolved. And we callstable\nlevelthe level where the algorithm\nstops visiting. We note that some jitters may happen at the\nbeginning stage, thus CoDAG will ignore the firststable_level\nlevels. From line 2 to line 9,∀lwherel\nv\n>stablelevel, existing\ntransactions inelected_node_poolwill be visited and added to\ntx_set. In line 6, the algorithm will sort the transactions intx_set\nby their amounts, making sure those transactions with a larger\namount can be bundled fast. Finally, CoDAG will execute the\ntx_setand update theworld_stateof the network.\nVII. E\nVALUATION\nA.  Experiment Setup\nTo evaluate CoDAG’s performance in a real environment,\ncomputing devices with different computing power are de-\nployed, including a server, 5 Mac Minis, and 4 Lenovo laptops,\nand they are connected in a LAN-based environment. In a\nLAN-based environment, the link delay is very small; thus, the\ninformation propagation delay of the CoDAG will be negligible.\nTo emulate a real-world network environment, we manually add\nsome link propagation delay to the network. More specifically,\nwe use theNetEm[41], which is a network emulation module\nto simulate the link delay in a LAN environment. In this article,\nthe average delay time is set to be 50 ms [42]. In this case, the\nlink latency will be added to the network; thus, we can evaluate\nour CoDAG prototype in a real network environment.\nAdditionally, we design a script to produce enough transac-\ntions with random amounts and addresses. In the CoDAG, every\nminer has a transaction pool to store the transactions that send\nto it. Initially, we let the trigger node run the script, and the\nnew-generated transactions will be stored in the matched miner\npools according to the transaction addresses and wait to be\nbundled by the corresponding miners. In this case, miners will\ntry their best to bundle transactions in their pools and append\nthe block to the network.\nIn our experiments, we will evaluate the CoDAG’s perfor-\nmance in different values of blocksize and width. The blocksize\nwill scale from 10 kB to 2 MB, and the width will vary from\n1 to 20. Meanwhile, we definelevel formation timeas the\nTABLE IV\nD\nEFAULTSIMULATIONPARAMETERS\nFig. 5.Network topology.\nFig. 6.Simulation equipment.\nrequired duration when a level is full ofKblocks. Assume\nthe level formation time of the system isT; then, the average\nproposal time of every single block will be\nT\nK\n. Therefore, the\nlevel formation time will directly influence the block proposal\ntime in the network and then influence the throughput of the\nCoDAG. In this article, we will study the relationship between\nthe throughput and different values of level formation time. We\nwill change the level formation time by altering the mining\ndifficulty of the system. The more mining difficulty is, the more\nlevel formation time it will be.\nBesides, we denote theblock utilizationas the proportion of\nvalid blocks in the network. In our prototype, if the width of a\nlevel exceedsK, some blocks will become invalid and wait to\nreappend to the network again. Hence, we use block utilization\nto measure the percentage of valid blocks of the system,\nand investigate the relationship between block utilization and\ndifferent values of blocksize and width. The default simulation\nparameters are listed inTable IV. The simulation topology and\nequipment are presented inFig. 5and6respectively.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4143\nFig. 7.Relationship between throughput and width.\nFig. 8.Relationship between throughput and blocksize.\nB.  Experiment Results\n1)  Throughput  in  Different  Blocksizes  and  Widths:Figs. 7\nand8present the CoDAG’s throughput in different blocksizes\nand widths. InFig. 7, we can observe that given a fixed blocksize,\nas the width grows, the throughput of CoDAG shows an in-\ncreasing trend. Meanwhile, given a fixed width, as the blocksize\ngrows, the throughput will rise accordingly. For example, when\nthe blocksize is fixed at 30 kB, the CoDAG with a width of\n20 can achieve 394 tps, which is larger than other widths.\nMoreover, when the width is fixed at 20, the CoDAG with a\nblocksize of 30 kB is 2.6 times as blocksize=10 kB and 1.9\ntimes as blocksize=20 kB, respectively. Besides, the CoDAG\nalways performs better than Bitcoin and Ethererum. InFig. 7,\nthe CoDAG can achieve 394 tps, which is 56×Bitcoin’s and\n26×Ethererum’s. Meanwhile, we also notice some throughput\nfluctuations as the width of the CoDAG grows. If blocksize\nis fixed at 30 kB, when the width increases from 13 to 14,\nthe throughput of the CoDAG presents a slight decline. The\nreasons are twofolds: 1) a larger width will bring more block\ninformation for distributed nodes to synchronize and lead to\nlonger propagation delay; and 2) there is some instability of the\ntransaction generation rate, and the amount of transactions may\nbe instable, and one of our future works is to improve it.\nFig. 8also observes the relationship between throughput in\ndifferent blocksizes and widths. We can see that the CoDAG with\nFig. 9.Throughput of the CoDAG in different level formation time when\nblocksize=20 kB.\nFig. 10.Throughput of the CoDAG in different level formation time\nwhen blocksize=30 kB.\nlarger values of width and blocksize outperforms the smaller\none. Especially, when the blocksize is 2 MB and the width is\n15, the CoDAG achieves the highest throughput of 1151 tps,\nwhich is 164×Bitcoin’s and 77×Ethereum’s. Moreover, we\nnotice that the throughput of the CoDAG soars as the blocksize\ngrows from 32 to 256 kB. However, when the blocksize reaches\na larger value, the throughput presents a slower growth. The\nreason is that, due to the propagation latency, a block with a\nlarger blocksize will contain excessive transactions that cannot\nbe handled in time. Additionally, limited computing power of\nminers is also one of the restrictions.\n2)  Throughput  in  Different  Level  Formation  Time:Figs. 9\nand10depict the throughput in different level formation time.\nGenerally, we can observe that the CoDAG with a longer level\nformation time performs worse than smaller ones. InFig. 9,\nwhen the blocksize is fixed at 20 kB, the CoDAG with 18 s\nperforms worse than 8 and 13 s. Moreover, we notice no\nobvious deviation between 8 and 13 s, which means when level\nformation time declines to a relatively small value, it will have\na limited effect on CoDAG’s throughput. In theory, less level\nformation time will lead to faster block generation rate, and the\nthroughput will rise accordingly. However, due to the capacity,\nexcessive transactions and blocks cannot be computed and ver-\nified by miners in time; thus, the throughput gap is not obvious.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "4144IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 16, NO. 6, JUNE 2020\nFig. 11.Block utilization of the CoDAG.\nWhen the blocksize is fixed at 30 kB, similar results can be\nobtained, as depicted inFig. 10.\n3)  Block Utilization:Fig. 11provides the block utilization in\ndifferent blocksizes and widths. Generally, the block utilization\nwill converge to 90% as width grows. This is because, if the\nwidth of the CoDAG is too small, the new-generated block will\nnot be aware that the target level has been filled withKblocks\nalready. In this case, the new block will exceed the maximum\nvalue of width and be regarded an invalid block; thus, the block\nutilization is low. As the width increases, the percentage of\ninvalid blocks will decrease.\nVIII. C\nONCLUSION\nIn this article, we devised an efficient and compacted DAG-\nbased blockchain protocol CoDAG. Unlike the previous DAG-\nbased solutions, blocks in the CoDAG were organized in a DAG\nstructure with a fixed width. We developed protocols and algo-\nrithms to maintain and secure the network, and transactions will\nbe confirmed in a deterministic period. We presented possible\nattack strategies in the CoDAG and proved that it can resist these\nattacks. We also designed a CoDAG-based IIoT architecture\nto achieve a better performance for the IIoT system. Finally,\nwe implemented a CoDAG prototype, and simulation results\nshowed that CoDAG outperforms the Bitcoin and Ethererum,\nwhich is suitable and efficient for the IIoT.\nIn the future, to improve the CoDAG further, some modi-\nfication schemes will be proposed, including 1) tuning-up the\nparameters (e.g., blocksize and width), and 2) combining with\nthe hybrid consensus protocols.\nR\nEFERENCES\n[1] L. Da Xu, W. He, and S. Li, “Internet of Things in industries: A survey,”\nIEEE Trans. Ind. Inform., vol. 10, no. 4, pp. 2233–2243, Nov. 2014.\n[2] Q. Yan, W. Huang, X. Luo, Q. Gong, and F. R. Yu, “A multi-level\nDDOS mitigation framework for the industrial Internet of Things,”IEEE\nCommun. Mag., vol. 56, no. 2, pp. 30–36, Feb. 2018.\n[3] X. Sun and N. Ansari, “Dynamic resource caching in the IoT application\nlayer for smart cities,”IEEE Internet Things J., vol. 5, no. 2, pp. 606–613,\nApr. 2018.\n[4] N. Teslya and I. Ryabchikov, “Blockchain-based platform architecture\nfor industrial IoT,” inProc. 21st Conf. Open Innov. Assoc., Nov. 2017,\npp. 321–329.\n[5] Y. Xu, J. Ren, G. Wang, C. Zhang, J. Yang, and Y. Zhang, “A blockchain-\nbased nonrepudiation network computing service scheme for industrial\nIoT,”IEEE Trans. Ind. Inform., vol. 15, no. 6, pp. 3632–3641, Jun. 2019.\n[6] K. Huanget al., “Building redactable consortium blockchain for industrial\nInternet-of-Things,”IEEE Trans. Ind. Inform., vol. 15, no. 6, pp. 3670–\n3679, Jun. 2019.\n[7] J. Kang, R. Yu, X. Huang, S. Maharjan, Y. Zhang, and E. Hossain,\n“Enabling localized peer-to-peer electricity trading among plug-in hybrid\nelectric vehicles using consortium blockchains,”IEEE Trans. Ind. Inform.,\nvol. 13, no. 6, pp. 3154–3164, Dec. 2017.\n[8] X. Wu, B. Duan, Y. Yan, and Y. Zhong, “M2M blockchain: The case of\ndemand side management of smart grid,” inProc. IEEE 23rd Int. Conf.\nParallel Distrib. Syst., Dec. 2017, pp. 810–813.\n[9] M. Mettler, “Blockchain technology in healthcare: The revolution starts\nhere,” inProc. IEEE 18th Int. Conf. e-Health Netw., Appl. Serv., Sep. 2016,\npp. 1–3.\n[10] H. Liu, Y. Zhang, and T. Yang, “Blockchain-enabled security in electric\nvehicles cloud and edge computing,”IEEE Netw., vol. 32, no. 3, pp. 78–83,\nMay/Jun. 2018.\n[11] Z. Su, Y. Wang, Q. Xu, M. Fei, Y. Tian, and N. Zhang, “A secure\ncharging scheme for electric vehicles with smart communities in energy\nblockchain,”IEEE Internet Things J., vol. 6, no. 3, pp. 4601–4613,\nJun. 2019.\n[12] W. Liang, M. Tang, J. Long, X. Peng, J. Xu, and K. Li, “A secure fabric\nblockchain-based data transmission technique for industrial internet-of-\nthings,”IEEE Trans. Ind. Inform., vol. 15, no. 6, pp. 3582–3592, Jun. 2019.\n[13] S. Nakamotoet al., “Bitcoin: A peer-to-peer electronic cash system,” 2008.\n[14] G. Woodet al., “Ethereum: A secure decentralised generalised transaction\nledger,”Ethereum Project Yellow Paper, vol. 151, pp. 1–32, 2014.\n[15] L. Bach, B. Mihaljevic, and M. Zagar, “Comparative analysis of\nblockchain consensus algorithms,” inProc. 41st Int. Conv. Inf. Commun.\nTechnol., Electron. Microelectron., 2018, pp. 1545–1550.\n[16] I. Eyal, A. E. Gencer, E. G. Sirer, and R. Van Renesse, “Bitcoin-NG: A\nscalable blockchain protocol,” inProc. 13th USENIX Symp. Netw. Syst.\nDes. Implementation, 2016, pp. 45–59.\n[17] Y. Sompolinsky and A. Zohar, “Secure high-rate transaction processing\nin bitcoin,” inProc. Int. Conf. Financial Cryptography Data Secur., 2015,\npp. 507–527.\n[18] Y. Gilad, R. Hemo, S. Micali, G. Vlachos, and N. Zeldovich, “Algorand:\nScaling byzantine agreements for cryptocurrencies,” inProc. 26th Symp.\nOper. Syst. Princ., 2017, pp. 51–68.\n[19] S. Popov, “The tangle,” 2016. [Online]. Available: https://iota.org/\nIOTA_Whitepaper.pdf\n[20] A. Churyumov, “Byteball: A decentralized system for storage and transfer\nof value,” 2016. [Online]. Available: https://byteball.org/Byteball.pdf\n[21] Y. Sompolinsky, Y. Lewenberg, and A. Zohar, “Spectre: Serialization of\nproof-of-work events: Confirming transactions via recursive elections,”\n2016. [Online]. Available: https://eprint.iacr.org/2016/1159.pdf\n[22] Y. Sompolinsky and A. Zohar, “Phantom: A scalable blockdag protocol,”\n2018. [Online]. Available: https://eprint.iacr.org/2018/104.pdf\n[23] C. Li, P. Li, W. Xu, F. Long, and A. C.-C. Yao, “Scaling Nakamoto con-\nsensus to thousands of transactions per second,” 2018,\narXiv:1805.03870.\n[24] M. S. Ali, M. Vecchio, M. Pincheira, K. Dolui, F. Antonelli, and\nM. H. Rehmani, “Applications of blockchains in the internet of things:\nA comprehensive survey,”IEEE Commun. Surv. Tut., vol. 21, no. 2,\npp. 1676–1717, 2nd Q 2019.\n[25] N. Z. Aitzhan and D. Svetinovic, “Security and privacy in decentralized\nenergy trading through multi-signatures, blockchain and anonymous mes-\nsaging streams,”IEEE Trans. Dependable Secure Comput., vol. 15, no. 5,\npp. 840–852, Sep./Oct. 2016.\n[26] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium\nblockchain for secure energy trading in industrial Internet of Things,”\nIEEE Trans. Ind. Inform., vol. 14, no. 8, pp. 3690–3700, Aug. 2017.\n[27] J. Wan, J. Li, M. Imran, and D. Li, “A blockchain-based solution for\nenhancing security and privacy in smart factory,”IEEE Trans. Ind. Inform.,\nvol. 15, no. 6, pp. 3652–3660, Jun. 2019.\n[28] D. Liu, A. Alahmadi, J. Ni, X. Lin, and X. Shen, “Anonymous reputation\nsystem for IIoT-enabled retail marketing atop POS blockchain,”IEEE\nTrans. Ind. Inform., vol. 15, no. 6, pp. 3527–3537, Jun. 2019.\n[29] J. Huang, L. Kong, G. Chen, M. Wu, X. Liu, and P. Zeng, “Towards\nsecure industrial IoT: Blockchain system with credit-based consensus\nmechanism,”IEEE Trans. Ind. Inform., vol. 15, no. 6, pp. 3680–3689,\nJun. 2019.\n[30] M. Castro and B. Liskov, “Practical byzantine fault tolerance and proactive\nrecovery,”ACM Trans. Comput. Syst., vol. 20, no. 4, pp. 398–461, 2002.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "CUIet al.: EFFICIENT AND COMPACTED DAG-BASED BLOCKCHAIN PROTOCOL FOR INDUSTRIAL INTERNET OF THINGS4145\n[31] L. Lamportet al., “Paxos made simple,”ACM Sigact News, vol. 32, no. 4,\npp. 18–25, 2001.\n[32] E. Androulakiet al., “Hyperledger fabric: A distributed operating system\nfor permissioned blockchains,” inProc. 13th EuroSys Conf., 2018, p. 30.\n[33] R. Pass, L. Seeman, and A. Shelat, “Analysis of the blockchain protocol\nin asynchronous networks,” inProc. Annu. Int. Conf. Theory Appl.\nCryptograph. Techn., 2017, pp. 643–673.\n[34] J. Garay, A. Kiayias, and N. Leonardos, “The bitcoin backbone protocol:\nAnalysis and applications,” inProc. Annu. Int. Conf. Theory Appl.\nCryptograph. Techn., 2015, pp. 281–310.\n[35] J. Poon and T. Dryja, “The bitcoin lightning network: Scalable off-chain\ninstant payments,” 2016.\n[36] A. Backet al., “Enabling blockchain innovations with pegged sidechains,”\n2014. [Online]. Available: https://blockstream.com/sidechains.pdf\n[37] R. Pass and E. Shi, “Hybrid consensus: Efficient consensus in the\npermissionless model,” inProc. 31st Int. Symp. Distrib. Comput., 2017,\npp. 39:1–39:16.\n[38] R. Pass and E. Shi, “Thunderella: Blockchains with optimistic instant\nconfirmation,” inProc. Proc. Annu. Int. Conf. Theory Appl. Cryptograph.\nTechn., 2018, pp. 3–33.\n[39] G. O. Karame, E. Androulaki, and S. Capkun, “Double-spending fast\npayments in bitcoin,” inProc. ACM Conf. Comput. Commun. Secur., 2012,\npp. 906–917.\n[40] M. Rosenfeld, “Analysis of hashrate-based double spending,” 2014,\narXiv:1402.2009.\n[41] S. Hemmingeret al., “Network emulation with NetEm,” inProc. Linux\nConf. AU, 2005, pp. 18–23.\n[42] L. T. Nguyen, R. Harris, and J. Jusak, “Analysis of networking and\napplication layer derived metrics for web quality of experience,” inProc.\nIEEE Consum. Commun. Netw. Conf., 2012, pp. 321–325.\nLaizhong Cuireceived the B.S. degree in com-\nputer science and technology from Jilin Uni-\nversity, Changchun, China, in 2007, and the\nPh.D. degree in computer science and technol-\nogy from Tsinghua University, Beijing, China, in\n2012.\nHe is currently an Associate Professor with\nthe College of Computer Science and Software\nEngineering, Shenzhen University, Shenzhen,\nChina. He led the projects of the National Key\nResearch and Development Program of China,\nNational Natural Science Foundation, and several projects of Guang-\ndong Province and Shenzhen City. His research interests include future\nInternet architecture, edge computing, big data, Internet of Things,\ncomputational intelligence, software-defined networks, and machine\nlearning.\nShu Yangreceived the B.Sc. degree from the\nBeijing University of Posts and Telecommunica-\ntions, Beijing, China, in 2009, and the Ph.D. de-\ngree from Tsinghua University, Beijing, in 2014,\nboth in computer science and technology.\nHis  research  interests  include  network\narchitecture and high-performance routers.\nZiteng Chenreceived the B.Sc. degree in com-\nmunication engineering in 2018 from Shen-\nzhen University, Shenzhen, China, where he is\ncurrently working toward the M.Sc. degree in\ncomputer science and technology.\nHis research interests include software-\ndefined networks and blockchain.\nYi Panreceived the B.E. and M.E. degrees\nin computer engineering from Tsinghua Univer-\nsity, Beijing, China, in 1982 and 1984, respec-\ntively, and the Ph.D. degree in computer science\nfrom the University of Pittsburgh, Pittsburgh, PA,\nUSA, in 1991.\nHe is currently a Regents’ Professor and\nChair of Computer Science with Georgia State\nUniversity, Atlanta, GA, USA. He has served\nas an Associate Dean and Chair of Biology\nDepartment from 2013 to 2017 and the Chair\nof Computer Science from 2006 to 2013. His profile has been featured\nas a distinguished alumnus in both Tsinghua Alumni Newsletter and\nUniversity of Pittsburgh CS Alumni Newsletter. He has authored or coau-\nthored more than 250 journal papers with more than 90 papers published\nin various IEEE journals. In addition, he has authored or coauthored\n194 papers in refereed conferences. He has also coauthored/coedited\n44 books. His work has been cited more than 10 000 times in Google\nScholar. His current H-index is 54. He has served as an Editor-in-Chief\nor editorial board member for 20 journals including seven IEEE Transac-\ntions. He has organized many international conferences and delivered\nkeynote speeches at more than 60 international conferences around the\nworld. His research interests include parallel and cloud computing, big\ndata, and bioinformatics.\nDr. Pan is the recipient of many awards including an IEEE Trans-\nactions Best Paper Award, IEEE Conference Best Paper Awards, and\nseveral other conference and journal Best Paper Awards, four IBM\nFaculty Awards, two Japan Society for the Promotion of Science Senior\nInvitation Fellowships, the IEEE Outstanding Leadership Award, the\nIEEE International Conference on BioInformatics and BioEngineering\n(BIBE) Outstanding Achievement Award, the National Science Founda-\ntion (NSF) Research Opportunity Award, and the Air Force Office of\nScientific Research (AFOSR) Summer Faculty Research Fellowship.\nMingwei Xu(M’08) received the B.Sc. and Ph.D.\ndegrees in computer science and technology\nfrom Tsinghua University, Beijing, China.\nHe is currently a Full Professor with the De-\npartment of Computer Science, Tsinghua Uni-\nversity. His research interests include computer\nnetwork architecture and high-speed router\narchitecture.\nKe Xureceived the B.Sc., M.Sc., and Ph.D. de-\ngrees in computer science and technology from\nTsinghua University, Beijing, China, in 1996,\n1998, and 2001 respectively.\nHe is with the Department of Computer\nScience and Technology, Tsinghua University,\nBeijing. He is also with the Beijing National\nResearch Center for Information Science and\nTechnology, Beijing.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:20:08 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\An Efficient and Compacted DAG-Based.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
          "Subject": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
          "Producer": "Acrobat Distiller 10.1.10 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20200227141227+05'30'",
          "ModDate": "D:20200305222333-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Transactions on Industrial Informatics;2020;16;6;10.1109/TII.2019.2931157",
            "dc:subject": "Blockchaincompacted directed acyclic graph (CoDAG)industrial Internet of Things (IIoT)",
            "dc:title": "An Efficient and Compacted DAG-Based Blockchain Protocol for Industrial Internet of Things",
            "dc:creator": "Laizhong CuiShu YangZiteng ChenYi PanMingwei XuKe Xu",
            "prism:publicationname": "IEEE Transactions on Industrial Informatics",
            "prism:startingpage": "4134",
            "prism:coverdisplaydate": "June 2020",
            "prism:issueidentifier": "6",
            "prism:volume": "16",
            "prism:doi": "10.1109/TII.2019.2931157",
            "prism:endingpage": "4145"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "\u0001\u0002\u0003\u0001\u0004\u0005\u0006\u0007\b\u0001\n\u0001\u0002\u0003\u0004\u0005\u0006\u0007\nCitation:Lee, J.; Kim, W. DAG-Based\nBlockchain Sharding for Secure\nFederated Learning with Non-IID\nData.Sensors2022,22, 8263.  https://\ndoi.org/10.3390/s22218263\nAcademic Editor: Naveen\nChilamkurti\nReceived: 26 September 2022\nAccepted: 24 October 2022\nPublished: 28 October 2022\nPublisher’s Note:MDPI stays neutral\nwith regard to jurisdictional claims in\npublished maps and institutional affil-\niations.\nCopyright:©  2022  by  the  authors.\nLicensee   MDPI,   Basel,   Switzerland.\nThis  article  is  an  open  access  article\ndistributed    under   the    terms   and\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nsensors\nArticle\nDAG-Based Blockchain Sharding for Secure Federated\nLearning with Non-IID Data\nJungjae Lee and Wooseong Kim *\nComputer Engineering Department, Gachon University, Seongnam 1342, Korea; wjd1wo30821@gachon.ac.kr\n*Correspondence: wooseong@gachon.ac.kr\nAbstract:\nFederated learning is a type of privacy-preserving, collaborative machine learning. Instead\nof sharing raw data, the federated learning process cooperatively exchanges the model parameters\nand aggregates them in a decentralized manner through multiple users. In this study, we designed\nand implemented a hierarchical blockchain system using a public blockchain for a federated learning\nprocess without a trusted curator. This prevents model-poisoning attacks and provides secure updates\nof a global model. We conducted a comprehensive empirical study to characterize the performance\nof federated learning in our testbed and identify potential performance bottlenecks, thereby gaining\na better understanding of the system.\nKeywords:blockchain; federated learning; smart contract; model-poisoning attack\n1. Introduction\nMachine learning has evolved over the last few decades, and deep learning based on\nmultilayered deep neural networks (DNNs) has received an enormous amount of interest\nin various areas of research [1–3]. In particular, deep learning using convolutional neural\nnetworks (CNNs) has demonstrated a notable performance in terms of object detection and\nclassification used in computer vision.\nDespite the remarkable performance achieved by deep learning, concerns related\nto data privacy have increased, particularly in the medical field, which requires private\nand sensitive patient information for machine learning.  For this purpose, general data\nprotection regulations (EU GDPR) [4] were recently released.\nTo achieve privacy protection, Google proposed federated learning, which enabled\ncollaborative learning without the sharing of private data samples [5,6]. Instead, learners\nexchange weights or gradient parameters of their own local model for updating. In practical\nterms, a trusted central worker as a curator aggregates models of multiple learners and\nreturns an aggregated model as a joint representative model.\nFor the curator, blockchain is a popular consideration as a method to securely protect\nthe joint model from poisoning attacks [7].  Federated learning is vulnerable to model-\npoisoning attacks [8–10], which are more significant than data poisoning. Malicious nodes\ncan easily distort the model parameters and degrade the agent’s intelligence. Therefore,\nseveral works have been proposed for robust aggregation. Blanchard et al. [11] proposed\nthe Krum algorithm, which updates the global model by a majority group with a minimum\nsum of Euclidean distances among local models of members.  Similarly, Yin et al.  [12]\nproposed the median and trimmed mean algorithms, which remove extreme local gradient\nvalues to ensure the robustness of the distributed gradient descent algorithms. Recently,\na clustering approach to remove malicious local gradients has been introduced [13,14].\nLi et al. [15] introduced a central server framework to detect and remove malicious model\nupdates using a powerful detection model.  However, aforementioned approaches that\nrely on the central sever for the aggregation are vulnerable to additional security threats.\nChe et al. [16]proposed a committee framework for the Byzantine robust update that\nguarantees convergence.\nSensors2022,22, 8263. https://doi.org/10.3390/s22218263https://www.mdpi.com/journal/sensors",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82632 of 23\nRecent successes in cryptocurrencies, such as Bitcoin [17], Ethereum [18], Ripple [19],\nand Stellar [20], have proven that the blockchain consensus algorithms (e.g., proof of work)\ncan prevent Sybil attacks with invalid and malicious transactions. Therefore, the blockchain\ncan be used for a serverless FL framework. Based on its consensus algorithm, the model\nparameters have been updated and distributed to users after a cross-verification [21,22].\nSeveral previous studies have explored a collaboration between blockchain and fed-\nerated learning.  The block rate and interval of the blockchain are critical for updating\nthe model through federated learning.  Kim et al.  [23] introduced a seminal study on\nblockchain-based federated learning (BlockFL) in terms of the architecture and analy-\nsis of the end-to-end latency.  Pokhrel et al.  [21] conducted a delay analysis of BlockFL\nin wireless and mobile vehicular networks using a mathematical model.  Lu et al.  [24]\nproposed asynchronous federated learning for selecting a subset of heterogeneous ve-\nhicles of a global model considering their computing power and communication delay.\nThey  reduced  the  learning  delay  for  the  combinatorial  optimization  problem  using  a\ndeep reinforcement learning (DRL) algorithm. Additionally, they improved the commu-\nnication efficiency and latency of the blockchain for federated learning in mobile edge\nnetworks [25,26].Desai et al. [27]implemented and experimented with blockchain-based\nfederated learning on the hyperledger fabric.  Moreover, model-poisoning attacks have\nbeen explored in several studies. Weng et al. [28] proposed an incentive mechanism using\nthe blockchain for federated learning, which prevents misbehavior of the participants.\nAdditionally,Qu et al. [29]analyzed a blockchain that can protect a global model from a\npoisoning attack, which results in the blockchain growing sufficiently fast in terms of the\npoisoning resistance.\nHowever, reaching a consensus for an aggregated model is a challenge if federated\nlearning has non-independent and identically distributed (non-IID) datasets across different\nusers. This causes a skewness of the model parameters, eventually decreases the accuracy,\nand disturbs the convergence. Several studies have been conducted to solve the non-IID\ndata problem in federated learning,  considering solutions such as data sharing,  node\nclustering, and algorithmic approaches [30].  Some studies have considered the use of\nthe blockchain to address this problem. Using the blockchain and DRL for finding top-K\nclustered clients for the blockchain update, Wang et al. [31] solved the divergence problem\nthat occurs from the non-IID characteristic of distributed datasets. Li et al. [32] proposed\ncommittee-based cross-verification for global model updates, which is effective against\nnon-IID datasets and poisoning attacks.\nAlthough several studies have discussed the challenge of non-IID datasets and model\npoisoning, the proposed solutions have limitations in that users have feasible test data for\nverifying and obtaining a consensus regarding the global model. However, users with parts\nof a dataset used for training have a high possibility of having the same data for testing.\nTo solve the non-IID and model-poisoning problems, we propose two-level blockchains\nfor local model aggregation with distributed verification in directed acyclic graph (DAG)-\nbased blockchain shards and global model aggregation by shard committees in the main\nblockchain. The major contributions of this study are highlighted below:\n•This is the first blockchain study on model protection from a poisoning attack during\nfederated learning with non-IID train and test datasets.\n•A novel secure update mechanism of the global model is proposed from the asyn-\nchronously operating distributed DAG shards.\n•This is an empirical study conducted on a real testbed for investigating the feasi-\nbility of the proposed system using a convolutional neural network (CNN) and the\nMNIST dataset.\nIn our testbed, we evaluated the local model update driven by our novel tip selection\nalgorithm in the DAG shards as well as global model aggregation based on the proposed\nvoting system.  The tip selection algorithm leads the model to select a tip based on the\nsimilarity and multiplicity of the tip’s model in the tangle of model transactions. Experi-\nmental results show robust learning performance even with 50% malicious nodes, such as",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82633 of 23\n85.24%, 81.53%, and 77.16% detection accuracy for model-poisoning, data-poisoning and\nlabel-swapping attacks, respectively.\nThe remainder of this paper is organized as follows.  We briefly review federated\nlearning and blockchain combinations in Sections 2 and 3, respectively. We then describe\nour proposed system in Section 4 and present the experimental results in Section 5. Finally,\nwe present some concluding remarks regarding this study in Section 6.\n2. Federated Learning\n2.1. Federated Model Averaging\nFederated learning enables users to update a joint global model using their own\nprivate data iteratively. For this purpose, a curator selects a subset of connected workers\nand provides them with the latest global model for local training. Subsequently, the curator\ncollects and aggregates the local models updated by the workers for a new global model.\nFederated learning can be formulated as the following joint optimization problem.\nEach node,i∈ N, owns a set of local data samples,D\ni\n, and trains a model to solve a\nregression problem using such samples in a distributed manner. Using a sampled= (x,y),\nthe training objective is to minimize a loss function such as the mean square error (MSE),\nwherel(ω;d) = (x\n>\nd\nω−y\nd\n)\n2\n.  For all nodesN, the joint optimization problem can be\nwritten as follows:\nmin\nω\nf(ω),\n1\n|D|\n∑\ni∈N\nD\ni\nF\ni\n(ω),(1)\nwhere the loss functionF\ni\n(ω),\n1\nD\ni\n∑\nd∈D\ni\nl(ω;d)andD=∪\nN\ni=1\nD\ni\n.\nTo solve the above distributed optimization problem, the global model can be updated\nasω\n(t+1)\n←ω\n(t)\n−η∇f(ω\n(t)\n)using gradients of nodes based on a stochastic gradient\ndescent (SGD) as follows:\n∇f(ω\n(t)\n) =\n∑\ni∈N\nD\ni\n|D|\n∇F\ni\n(ω\n(t)\n)(2)\nInstead of training with every sample and communicating with its gradient, each node\ncan update the local model based on the mini-batch and send its ownω\n(t+1)\ni\nto the curator\ninfrequently. For this, the global model is updated simply by federated averaging (FedAvg)\nat each epoch,tofD\ni\nsamples, as follow [33]:\nω\n(t+1)\n←\n∑\ni∈N\nD\ni\n|D|\nω\n(t)\ni\n(3)\n2.2. Asynchronous Federated Learning\nBecause  the  local  training  delay  varies  according  to  the  capability  of  the  worker\ndevices,  the  central  curator  needs  to  select  a  set  of  workers  for  aggregation  to  avoid\nexcessive update delays from the stragglers [24]. Alternatively, several studies [34–36] have\nexplored asynchronous federated learning instead of conventional synchronous learning.\nCong et al. [34] proposedFedAsynchto average new weight parameters,ω, adaptively\nby a mixing parameterα∈(0, 1), which is determined through the decreasing staleness\nfunctionf\ns\nand constant variableτ,ω\n(t+1)\n= (1−α)ω\n(t)\n+αω\n(t)\ni\n, whereα=f\ns\n(t−τ). Ac-\ncordingly, the old model parameters are slightly added using the smallerα.Chen et al. [36]\ninvestigated online aggregation, where the curator and workers exchange and update\nthe models asynchronously.  Similarly, they adopted a decaying local update with aβ\ncoefficient that induces a balance between the old and new local gradients. Chai et al. [35]\nproposedFedAT, which aggregates a global model with a local model of a cluster composed\nof homogeneous devices.\nThese previous studies proved mathematically that asynchronous updates can achieve\na learning convergence with a decaying coefficient for the weight average of the models.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82634 of 23\nAdditionally,  the experimental results showed that a feasible level of accuracy can be\nachieved even with non-IID data for local training.\n2.3. Training with Non-IID Data\nFederated learning based on a stochastic gradient follows IID sampling to avoid biased\nestimates of the gradient for the global model. However, it is unrealistic to obtain local IID\nsamples for all distributed worker devices. AlthoughFedAvgis known to operate even with\nnon-IID data, it degrades the accuracy by 11% for MNIST compared to an IID case [37]. The\ndegree of weight divergence owing to the use of non-IID data is significant based on the\ndata skewness of a node in comparison to the actual distribution for the whole population.\nThe convergence ofFedAvgon non-IID data was analyzed in [38].   The required\naggregation rounds for a particular accuracy are the number of steps required for the losse,\ni.e.,T\ne\noverElocal iterations,\nT\ne\nE\n∝(1+\n1\n|N|\n)EG\n2\n(4)\nwhere the required number of aggregation rounds is proportional to the inverse of|N|,E,\nand the upper bound of the gradient normG\n2\n, i.e.,O(\nEG\n2\n|N|\n). In other words, a large number\nof nodes and limited local iterations contribute to improving the accuracy of a global model,\nwhereas heavy local iterations, such as10\n3\n, cause a weight divergence and decrease the\naccuracy.  Even with IID data, the weight divergence is likely significant if local models\nhave different initial parameters [37].\nIn a survey conducted onFedAvgwith non-IID data [30], data sharing, fine-tuning\nalgorithms with personalized models, and client clustering approaches were discussed.\nHere, we focused on a clustering approach that creates node groups for federated learning\naccording to their distribution of attributes.  These attributes can be mutually exclusive\nacross clients or partially overlap.\n3. Blockchain for Federated Learning\n3.1. Blockchain Overview\nBlockchain is a tamper-proof ledger operating in decentralized and anonymous peer-\nto-peer (P2P) networks. Individuals and organizations use the blockchain to record their\ntransactions without requiring permission to access it. For this purpose, the transactions\nare verified across participants before they are written in chained blocks. The Nakamoto\nconsensus algorithm, i.e., proof of work (PoW) for verification, is the most famous algorithm\nfor Bitcoin, and although it works effectively for protection from Sybil attacks and data\nmanipulation, it is expensive because of the required hash power and long block interval.\nMany other PoX algorithms have emerged, including proof of stake (PoS) (e.g., Peer-\ncoin [39],  Blackcoin [40],  and follow-the-Satoshi procedure [41,42]).   To accelerate this\nagreement, a delegated proof of stake (DPoS) was proposed [43]. Additionally, proof of\nburn [44], proof of validation [45], proof of elapsed time, and proof of capacity (e.g., storage\nspace) [46,47] have been proposed.\n3.2. Blockchain Scalability\nDistributed blockchain systems suffer from intrinsic scalability problems because\nthey synchronize a single chain globally without forking [48–51].  For instance, Bitcoin\ncan process only seven transactions per second (TPS) compared to legacy systems such\nas VISA, which can tolerate 2000 TPS. There have been several approaches to scaling up\nthe blockchain.\nFirst, off-chain techniques such as a Raiden network [52] and plasma [53] are used to\noffload transactions in the main chain. Additionally, L2 protocols are needed to verify the\nstate information between the local and global main chains periodically or aperiodically,\nwhich causes an update latency between them [54].  Second, multiple on-chains, called\nblockchain shards, process transactions in parallel using multiple committees [48]. Several",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82635 of 23\nsharding-based blockchains have been proposed, including RScoin [55], omniLedger [56],\nand RapidChain [50].\nInstead of a legacy chain structure, a directed acyclic graph (DAG) has recently been\nconsidered to overcome the scalability problem [57].  Some cryptocurrencies based on\nthe DAG blockchain have already been developed, including NXT [41], IOTA [58], and\ndagCoin [59].  The DAG structure is advantageous for processing multiple transactions\nindependently, where participants select tips to add their own transactions and verify pre-\nvious transactions along random walk paths. Such a tip selection algorithm enables nodes\nto find a reliable path that has been evaluated much earlier by following the transactions.\nThis tangle can create multiple reliable chains within the DAG, as indicated by a higher\ncumulative weight.  For DAG growth, the tip selection range should be configured that\nprevents the DAG structure from becoming wider as the same tips are selected heavily.\nIn this study, we consider a DAG-based blockchain for federated learning that allows nodes\nto share local models securely and update them asynchronously in a distributed environment.\n3.3. Blockchain for Federated Learning\nSeminal studies on the combination of blockchain and federated learning have mostly\ninvestigated the effects of block creation and consensus delay on federated learning pro-\ncedures [21,23,25,26]. Subsequently, studies on asynchronous and distributed updates in\nfederated learning have been based on blockchain [24,60].\nIn federated learning, it is critical to prevent model poisoning by anonymous adver-\nsarial nodes. Consensus algorithms of the blockchain, such as PoW [29] and PoS [61], can\nefficiently protect the global model from poisoning attacks by malicious nodes.  Several\nstudies [25,62] have considered private and permissioned blockchains, in which trusted\nnodes manage the learning procedure.  Otherwise,  reliable nodes can be recruited for\nthe consensus procedure based on their reputations [63] or incentive systems [28].  For\nexample, in [32], reliable committee members are elected for cross-verification of the global\nmodel using incentives for honest behavior.  However, the private blockchain limits its\nusability, and alternative approaches require additional systems, such as cryptocurrency\nand reputation scores.\n4. DAG-Based Sharding for Secure Federated Learning\nIn this section, we present DAG-based sharding for federated learning under poison\nattacks, such as model poisoning, data poisoning, and label flipping.  In a distributed\nlearning environment, the expected challenges are enumerated as follows:\n•Each node has a non-IID dataset for training and testing with a different distribution\nprobability.\n•The computing capability of a node varies according to the device type.\n•Open accessibility allows Sybil-based poisoning attacks on local or global models.\nPrevious  studies  on  algorithmic  or  systematic  approaches  used  to  solve  non-IID\ndatasets and asynchronous update problems assume that each device has IID test sets for\nconducting an evaluation on an aggregated model. However, it is unrealistic for nodes to\nhave a sufficient number of samples to estimate the loss of the global model. Therefore, a\nconsensus based on the majority is a possible way to update the global model [32].\nUnfortunately, a simple voting solution cannot prevent model poisoning with targeted\nattacks because nodes cannot recognize the target attack if the targeted part of the model is\nirrelevant to their own data set. For instance, nodes who only have image data 2 and 3 of\nMNIST will vote for a poisoned model with 90% accuracy for data 2 and 3 rather than the\nnormal model with 85% accuracy. However, the chosen model probably has lower accuracy\nfor other image data, which can happen even in untargeted attacks on the model.\nTherefore, we propose a two-step verification procedure for the validation of aggre-\ngated models using hierarchical blockchains that consist of the main public blockchains,\nsuch as Bitcoin and Ethereum, and local shards based on DAGs. Details of the proposed\nsystem are described in the following subsections. Related symbols are described inTable 1.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82636 of 23\nTable 1.The list of symbols that are used to describe the proposed system.\nNotationDescription\nNSet of client nodes in a federated learning network.\niA client node that conducts local training in the network.i∈N\nD\ni\nSet of local data samples that each nodeiowns.\nηLearning rate.\nwThe weight of model.\nζ\nj,k\nThe cumulative reference score (CRS) of the transaction.\nSSet of shards in the network.\nS\nk\nA shard where the index isk.\nM\ns\nt\nThe local model for the maximum reference score\nwithin a specific range in each shard.\nG\nt\nρ\nA global model.\nρThe integer value starting from 0 to|S|as the order of the shard\nmodels uploaded to the main blockchain.\nVVoting function: nodes belonging to the committee\nselect one model based on the accuracy of the two models.\nrGlobal round\nBThe local batch size\nEThe number of local epochs\nTXA transaction in the DAG blockchain.\n4.1. Hierarchical Blockchain Architecture for Federated Learning\nThe hierarchical blockchains for secure federated learning are illustrated in Figure 1a,\nwhere multiple DAG-based local shards are autonomously established by the participants\nfor local model aggregations. Additionally, a public blockchain is used for global model\naggregation by all users.\n(a)(b)\nFigure 1.System architecture and flow. (a) System architecture for federated learning with hierarchi-\ncal blockchains; (b) System flow of hierarchical blockchains.\nAs illustrated in Figure 1b, model verifications and updates are iteratively achieved\nthrough a closed loop between the main blockchain and its shards. In a local shard chain,\nthe local model is updated asynchronously according to the computing capability of each\nnode. The local model of the shard is periodically uploaded for global aggregation on the\nmain chain. For example, nodes of shard #1 create model transactions and combine them\nlocally everynepochs in the DAG and upload a final local model to the main blockchain\nafter reachingmepochs.  Subsequently, one of the chain nodes in the main blockchain\nsequentially aggregates the local models.  Although the number of epochs for the local\nmodel update can vary, the total number of local iterationsEin Equation (4) for global\naggregation is comparable for all shards.\n4.2. DAG-Based Shard Formation\nFor local training with non-IID data, data-oriented blockchain shards are established\nautonomously by nodes according to their data distribution.  For instance, nodeijoins",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82637 of 23\nshardswith the smallest cross-entropy−\n∑\nx\np\ni\n(x)log\n2\np\ns\n(x)\n, wherep\ni\n(x)andp\ns\n(x)are\nthe probability distributions of nodeiand shardsfor datax. However, owing to privacy\nconcerns, the sample distribution is typically unknown to other nodes.\nInstead, each worker selects a shard based on the local model accuracy evaluated by its\nown data, i.e., a shard with the highest accuracy model. As the training and aggregation are\nrepeated, the best shard for a node can be changed. Because a local shard is a permissionless\nDAG chain, the nodes can join and leave the shards liberally according to their own accuracy.\nInitially, each node trains a local model duringnepochs and broadcasts it to the nearby\nnodes. Once the nodes receive other node models by flooding, they form|S|shards using\nthe following the K-means clustering algorithm, which determines setsS\nk\niteratively to\nminimize the sum of the weight difference.\narg min\nS\n|S|\n∑\nk=1\n1\n|S\nk\n|\n∑\nω\ni\n,ω\nj\n∈S\nk\n∥\n∥\nω\ni\n−ω\nj\n∥\n∥\n2\n(5)\nThe genesis model of shard #iis the closest to the centroid from K-means clustering\nas follows:\narg min\nω\ni\n∥\n∥\n∥\n∥\n∥\n∥\nω\ni\n−\n1\n|\nS\nk\n|\n∑\nω\nj\n∈S\nk\nω\nj\n∥\n∥\n∥\n∥\n∥\n∥\n2\n(6)\nThe Algorithm 1 describes the shard formation process in detail. In lines 1–11, each\nnode creates a model using its own dataset. Lines 12–17 indicate the initial process for client\nnodes to create a shard. First, each client node exchanges models and their corresponding\nnode information with each other.  Each node then creates shards cooperatively based\non the clustering algorithm in Equations (5) and (6).  In lines 19 and 20, the client node\ncontinuously switches shards based on the accuracy during the learning process.\nAlgorithm 1Shard initiation algorithm.\nInput:|N|≥|S|\n1:procedureENGAGE SHARD(r,|S|)\n2:ifr= 0then\n3:Initializew\n0\n4:foreach client nodei∈Ndo\n5:B ←SplitD\ni\nby batches of sizeB\n6:forlocal epoche=1, 2,···,Edo\n7:forbatchb∈Bdo\n8:ω\n(t+1)\ni\n←ω\n(t)\ni\n−η∇f(ω\n(t)\ni\n)\n9:end for\n10:end for\n11:end for\n12:whileeach client nodeiparticipate in shardS\nk\ndo\n13:Broadcastω\ni\ninto federated learning network\n14:Receiveωfrom other nodes\n15:S\nk\n←K-means clustering(ω,|S|)\n16:nodeiparticipate in a shardS\nk\n17:end while\n18:else\n19:Select highest accuracyM\nt\nm\n20:nodeiswitches into a shardS\nm\n21:end if\n22:end procedure",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82638 of 23\n4.3. Local Model Aggregation\nFor the local model aggregation in a DAG-based shard, the tip selection algorithm\nadopts a two-phase procedure:  (i) selecting candidate tips at least more than|M|=2\nbased on model accuracy and similarity, and (ii) performing a check of the aggregation\nhistory for multiplicity using a random-walk exploration.\nmin\nm\n1−α\n|M|+1\nF\ni\n(\n ̃\nω) +α\n∑\nm∈M\n(\n1−\nω\nm\n·ω\ni\n‖ω\nm\n‖\n2\n‖ω\ni\n‖\n2\n)\n(7)\nwhere\n ̃\nω=\n∑\nm∈M\nω\nm\n+ω\ni\nandF\ni\n(\n ̃\nω)is the loss estimated by the test samples,  as in\nEquation (1), in whichmis a transaction that contains a local model.\nThe right-hand term of this equation is the cosine similarity of the NN weight parame-\nters. Additionally,α∈(0, 1)is the weight value for multiple objectives. Each node selects\ntips with a higher accuracy for its own test data and similarity. Owing to the limitations of\nan accuracy evaluation with the skewed test samples, the model similarity information is\nuseful for preventing a model divergence and targeted attacks on the model parameters.\nSince each node commits a single transaction during the average epoch timeE[T\nep\n],\nthe search space for the tips is limited by the number of nodes in a shard. Otherwise, a deep\nsearch space imposes a higher overhead on evaluating the level of accuracy and similarity.\nTo approximate the number of shared nodes, a node can estimate the mean of the arrival\nrate of the transactions,λ, and configure the search space asλE[T\nep\n].\nOwing to the heterogeneity of the computing power, a different number of transactions\nfrom each device may occur during the same epochs. This causes the local aggregation to\nbe biased toward a model of powerful devices. Additionally, malicious users can generate\nmeaningless models to destroy the local model.  Accordingly, to check the aggregation\nhistory, our tip selection algorithm walks randomly based on the Markov chain Monte\nCarlo selection algorithm (MCMC) [64], and the transition probability from transactionsj\nandkcan be derived through a monotonically increasing function.\nP\nj,k\n=log((ζ\nj\n−ζ\nk\n)−σ)(8)\nwhereσis a positive constant for normalization, andζ\nj,k\nis the cumulative reference score\n(CRS) of a transaction. The CRS is the cumulative value of the reference score (RS), which\nindicates how many transactions refer to aggregation. Figure 2 illustrates an example of a\ntransaction tangle in a DAG shard, where the first number in each transaction is the CRS\nand the second number is the RS. Additionally, N# denotes the identifier of the transaction\nnode. Random walking from a candidate tip allows a node to find a reliable aggregation\npath for the local model (highlighted by yellow edges).\nSupposing that a poisoned model colored in red appears in TX2, some of the nodes\nwill likely choose TX2 as a tip owing to a lack of information, i.e., TX3 is colored yellow.\nSubsequently, the poisoned model can be propagated to the following models even though\nthe degree of distortion can be diminished.  For example, the colored TX6 and TX7 mix\nthe contaminated TX3 with another fine model in the figure. Unfortunately, because the\nfollowing transactions prefer to select the contaminated model owing to the similarity, such\ndistortion from the wrong model combination continues. Supposing that TX3 and TX10 are\nissued by the same node, TX10 is likely to select TX6 and TX7 over the others because of\ntheir high cosine similarity. Therefore, the multiplicity of the transactions as a degree of\nmodel duplication must be considered along the random walk path. A higher multiplicity\npath eventually reduces the model diversity and final accuracy.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 82639 of 23\nFigure 2.Example of tip selection:  the white transaction,  a normal model;  the red transaction,\na poisoned model; the other color transaction, a model contaminated by aggregating a poisoned\ntransaction.\nThe Algorithm 2 describes the local model aggregation algorithm in detail. Lines 2–6\nconfigure the genesis model with the global model generated in the previous round. Recall\nthat a node selects tips for local aggregation in two steps: lines 13–19 represent the first step\nin calculating the transaction score within the search spaceλE[T\nep\n]based on Equation (7).\nIn lines 20 and 21 as the second phase, the two transactions with the lowest multiplicity\nvalues are selected. In this study, we considered two tips for local aggregation. MULTI() is\na function that derives the number of transactions of the same node along a random path\nusing the MCMC selection algorithm for a given tip.\nAlgorithm 2Local model aggregation algorithm.\nInput:nodei∈Nhas participated inS\nk\n1:procedureLOCAL AGGREGATION(r)\n2:ifr= 0then\n3:Initializew\n0\n4:else\n5:w←weight of global model from previous round\n6:end if\n7:B ←SplitD\ni\nby batches of sizeB\n8:forlocal epoche=1, 2,···,Edo\n9:forbatchb∈Bdo\n10:ω\n(t+1)\ni\n←ω\n(t)\ni\n−η∇f(ω\n(t)\ni\n)\n11:end for\n12:end for\n13:form∈M(λE[T\nep\n])do\n14:R\nm\n←min\nm\n1−α\n|M|+1\nF\ni\n(\n ̃\nω) +α\n∑\nm∈M\n(\n1−\nω\nm\n·ω\ni\n‖ω\nm\n‖\n2\n‖ω\ni\n‖\n2\n)\n15:C\nm\n←∞\n16:ifR\nm\n>E[R]then\n17:C\nm\n←MULTI(m)\n18:end if\n19:ω\nn\n,ω\nm\n←minC\nm\n,C\nn\n,m,n∈ M\n20:end for\n21:ω\n(t+1)\n←\n∑\ni∈W\nD\ni\n|D|\nω\n(t)\ni\nwhereWis{ω\nm\n,ω\nn\n,ω\ni\n}\n22:end procedure",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826310 of 23\nFor local updates, a node trains its own model, adds it to one of the DAG shards, and\nbroadcasts the DAG chain over the network.  In contrast to a conventional chain-based\nshard that suffers from a serialization delay owing to concurrent transactions, a DAG-based\nshard allows heterogeneous devices to record their own models asynchronously and update\nindependently. This asynchronous local update leads to the avoidance of aggregation delay\nfrom stragglers.\n4.4. Global Model Aggregation\nAt the end of a round, the local model with the highest RS is recommended as a\nfinal  model  for  global  aggregation  since  the  best  local  model  probably  receives  more\nselections from others.  Here, the corresponding transaction should have CRS around\n[(1−\n1\n|M|\n)CRS\nmax\n,CRS\nmax\n]to guarantee enough local aggregation within the shard.  To\nreport the final model to the main blockchain, the transaction owner as a leader of the shard\ncreates a new transaction for their own model and broadcasts it to the main blockchain\nthrough the chain nodes for global aggregation, as illustrated in Figure 1a.\nA special chain node, which plays the role of global model management, aggregates\nlocal models recorded in the main blockchain; otherwise, each node aggregates the models\nof all shards individually. Furthermore, the global model can be recorded using a special\nchain node in the main blockchain for other users.\nHowever, it is critical that malicious nodes upload a poisoned local model in the main\nblockchain because the chain node cannot validate the uploaded local models.  For this,\nwe adopted a voting system based on the DAG shard in which the leader of each shard\nconfirms the voting members who contribute to the final model.  In practical terms, the\nleader attaches the DAG path information (i.e., the sequence of local transaction numbers)\nof the final model to the global transaction. The leader registers the voting members using a\nsmart contract with their public keys, which can authorize voting from the members using\ntheir signatures.\nFigure  3  describes  the  aggregation  procedure  in  the  main  blockchain  when  five\nshards(#1∼#5) exist in the federated learning network, where the shard local models\nare uploaded asynchronously during the round. Thereafter, the global modelG\nt\ni\nfor round\ntis updated sequentially whenever the local models arrive. The voting members evalu-\nate the global model using their own dataset to find the most accurate model across all\ndatasets. Additionally, we compare the old and new local models before global aggregation\nbecause the selected local model might be contaminated after the last round, as illustrated\nin Figure 2.\nIn the example of the figure, local models are uploaded in order of shards #3, #1, #5,\n#2, and #4, andρindicates the sequence index. First, the committee members of a shard\nsvote between the newM\nt\ns\nand oldM\nt−1\ns\nthat were uploaded in the previous round\nonce the local modelM\nt\ns\nappears on the main blockchain.  For instance, when the local\nmodelM\nt\n3\nis uploaded from the shard #3, the committee members vote betweenM\nt\n3\nand\nM\nt−1\n3\n.  Accordingly, the first new global modelG\nt\n0\nisM\nt\n3\nifM\nt\n3\nwins during the voting\nprocess. Next,M\nt\n1\ncomes from the shard #1, and then voting is conducted again between\nG\nt\n0\n+M\nt−1\n1\nandG\nt\n0\n+M\nt\n1\n, where the weight of each model is multiplied by 5/2 in order\nto match the weight ratio for the two models. Additionally, the voting members are all of\nshard committees #1 and #3.  If the voting result isG\nt\n0\n+M\nt−1\n1\n,G\nt\n1\nbecomesG\nt\n0\n+M\nt−1\n1\n.\nSimilarly, the following aggregations for the local models of the shards #5, #2, and #4 are\nconducted. Finally, this aggregation procedure yields a new global modelG\nt\n4\natρ=4 from\nthe oldG\nt−1\n4\n, which will be a basis model for training in the next round.\nThe generalized equation for the above global aggregation is as follows:\nG\nρ\n=\nρ+1\n|S|\n[\nV\n(\n|S|\nρ+1\n(\nG\nρ−1\n+\nM\nt−1\ns\n|S|\n)\n,\n|S|\nρ+1\n(\nG\nρ−1\n+\nM\nt\ns\n|S|\n)\n)]\n,(9)",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826311 of 23\nwhereVindicates a voting function, i.e., nodes belonging to the committee select one model\nbased on the accuracy of the two models.ρis an integer value starting from 0 to|S|in\norder of the shard models uploaded to the main blockchain.  Accordingly, a totalG\n|S|−1\nglobal model will be created.\nAlgorithm 3 describes the global model aggregation procedure. The FORM COMMIT-\nTEE function for generating a committee starts from the final local model and searches for\ntransactions through the tip selection algorithm. Figure 2 shows an example in which the\ncommittee is generated using the FORM COMMITTEE function. If TX9 is selected as the\nfinal model, the highlighted edges indicate a reliable aggregation path for the final model.\nThus, the committee members can be (N10, N3, N4, N9, N6). These committee members\nvote for the global models through the procedure in lines 22–29, until the local models are\nuploaded from all shards. After the new global model is created, it is updated through line\n30 to ensure the training stability; additionally,β∈(0, 1)is a ratio parameter between the\nold and new global models.\nAlgorithm 3Global model aggregation algorithm.\n1:procedureFORM COMMITTEE(startTX)\n2:nodes= []\n3:whiletruedo\n4:ifnextTX= genesisTXthen\n5:returnnodes\n6:else ifstartTXthen\n7:select twoTX\n8:else\n9:Select the nextTXthat has higher CRS between twoTXs.\n10:end if\n11:nodes←node(TX)\n12:end while\n13:end procedure\n14:procedureGENERATE GLOBAL MODEL\n15:ρ=0\n16:fors∈Sdo\n17:M\nt\ns\n←TXwith the highest RS among the[(1−\n1\n|M|\n)CRS\nmax\n, CRS\nmax\n]ins\n18:C\ns\n←FORM COMMITTEE(M\nt\ns\n)\n19:M\nt−1\ns\n←Get model from main blockchain\n20:ifρ=0then\n21:G\nt\n0\n=V[M\nt−1\ns\n,M\nt\ns\n]by∪\nS\nk\nC\nk\n22:else\n23:result =V\n(\n|S|\nρ+1\n(\nG\nρ−1\n+\nM\nt−1\ns\n|S|\n)\n,\n|S|\nρ+1\n(\nG\nρ−1\n+\nM\nt\ns\n|S|\n)\n)\nby∪\nS\nk\nC\nk\n24:G\nt\nρ\n=\nρ+1\n|S|\nresult\n25:end if\n26:ρ+ =1\n27:end for\n28:G\n(t+1)\n= (1−β)G\n(t−1)\n+βG\n(t)\n29:end procedure",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826312 of 23\nFigure 3.Example of global model aggregation.\n5. Experiment\n5.1. Experimental Setup\nWe implemented our proposed system using the Ethereum blockchain and conducted\nan experiment with 50 client nodes for federated learning. Five DAG-based shards were\nrealized, and a special chain node was developed to execute a smart contract for the voting\nprocedure. Solidity script codes were used for the smart contract.\nThe federated learning model was a LeNet5 [65] model of a convolutional neural\nnetwork (CNN) having three convolutional layers, two max pooling layers, and one fully\nconnected layer with an output layer. We used the Adam optimizer and the cross-entropy\nloss function. The learning rate was set at 0.0001. The batch size of each epoch was 64, and\neach round had five epochs. Owing to the heterogeneity of the devices, each node invoked\nan average of four model transactions during a round.\nFor the experiment, the MNIST dataset was used, which is an image dataset of hand-\nwritten numbers from 0 to 9. It consists of 60,000 training and 10,000 test datasets. For the\nfederated learning study with a non-IID dataset, the dataset was configured as mutually\nexclusive across the clients. Each node had only two types of data among a possible 10 and\nrandomly selected 10∼90% of the image data of each class. For instance, a node had no\ndata for other classes 2 to 9 if it chose 0 and 1. The test dataset was configured in the same\nmanner as the training dataset.  In other words, a node on each shard had two separate\ndata classes; therefore, all data classes of the MNIST were covered across the five shards.\nAttack Scenarios\nThe following three attack scenarios were considered for performance evaluation:\n•Model-poisoning attack:  The purpose of a model-poisoning attack is to upload an\narbitrarily altered model to deviate the global model from a target model.  In our\nexperiments, a malicious node generated additive Gaussian noise withN(0,  2). As\nmany noise vectors as the number of model parameters were extracted and added\nto them.\n•Data-poisoning attack: A data-poisoning attack is a type of interference in learning\nusing poisoned data and is known to be less effective than a model-poisoning attack.\nTo evaluate the vulnerability of our system against a data-poisoning attack, the MNIST\ntraining data were manipulated by randomly generated additive noise with a Gaussian\ndistributionN(10,  5). We generated a random 28×28 noise image and added it to\neach MNIST training image.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826313 of 23\n•Label-swapping attack: A label-swapping attack, similar to a data-poisoning attack, is\nan efficient attack without directly damaging the model or training data. It proceeds\nsimply by swapping the input labels for the corresponding data.  For example, an\nattacker trains a model using 2 and 3 data, which are tagged by the swapped labels ‘3’\nand ‘2’, respectively.\n5.2. Shard Layer Review\nWe conducted two experiments to review the shard layer. First, we assessed the efficacy\nof similarity according to varyingα. Next, we investigated the effectiveness of multiplicity.\n5.2.1. Performance According to Similarity Parameterα\nTo  investigate  the  influence  of  similarity  on  the  learning,  we  experimented  with\nthe local model aggregation by varyingαin Equation (7).  Here, 50% of the malicious\nnodes conducted a model-poisoning attack during federated learning.  Figure 4a shows\nthe accuracy of the global model with differentαweights for the cosine similarity. First,\nfederated learning failed to converge withα=0,  which implies that it is difficult to\ndistinguish between a poisoned model and a normal model without similarity. Because\neach worker only has data for two labels, the validation of the model is limited. Accordingly,\nmalicious nodes can fine-tune the model weight to reduce the accuracy of a specific label\nor overfit the model using the data of a specific label. Meanwhile, the learning converged\nstably withα= 0.1, 0.3, and 0.5.  Additionally,α= 0.3 achieved the highest accuracy of\n76.84%, whereas accuracies of 73.75% and 71.85% were achieved withα= 0.1 and 0.5,\nrespectively.\n(a)(b)\nFigure 4.\nPerformance subject to the various parametersαof similarity. (a) Global model accuracy;\n(b) Ratio of reference score of malicious nodes to total reference score per round.\nFigure 4b shows the ratio of the RS of malicious nodes to the total RS of all nodes. As\nthe ratio is high, the nodes have more probability to select poisoned models. The RS ratio\nforα= 0.0 is comparable with the other cases, i.e.,α= 0.1 and 0.5. In the case ofα= 0.5 and\nα= 0.1, the average ratio of the RS of malicious nodes is 0.052% and 0.068%, respectively.\nHowever, the RS ratio withα= 0.3 is notably low compared to that of the others, which\ncan lead the nodes to select normal transactions with a higher probability. Furthermore,\nthe RS of the malicious nodes decreases as the training is repeated. As the nodes train the\nsame global model using the given datasets repeatedly, the model change is limited, and\nthe similarity increases along with the progress of the learning. Accordingly, the nodes can\neasily filter out the poisoned model through the similarity, which rapidly decreases the RS\nof the malicious nodes.\nAs illustrated in Figure 4a, less consideration of the accuracy withα= 0.7 increases\nthe RS ratio and harms the global model with poisoned transactions, similar toα= 0.0. If\na normal node selects a poisoned model, the weight of the normal node model becomes",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826314 of 23\nsimilar to that of the poisoned model. With a higher weight for the cosine similarity than the\naccuracy, nodes intend to continuously select a poisoned model if they previously selected\na transaction of a malicious node owing to an immature global model or overwhelming\nmalicious nodes.\nFrom the above results, we assume that a sweet spot exists between the accuracy and\nsimilarity, such as atα= 0.3, which will be used for subsequent experiments.\n5.2.2. Multiplicity Effect on Performance\nTo take advantage of the diversity of the data and models and avoid falling into a\ntrap of similarity with malicious models, we propose using the multiplicity concept based\non the structural characteristics of the DAG blockchain. Figure 5 demonstrates the effect\nof multiplicity in the same environment as the previous experiment.  The tip selection\nalgorithm using the accuracy and cosine similarity (i.e., the green line) converges to an\naccuracy of 76.84%. Meanwhile, the algorithm with an additional multiplicity converges to\nan accuracy of 85.24%. Additionally, the RS of a malicious node is lower when multiplicity\nis applied, as illustrated in Figure 5b. The multiplicity probably leads to the selection of\nmalicious transactions for diversity even in higher rounds, which show some fluctuations\nin Figure 5b. However, it rarely affects a mature global model. Therefore, in the following\nexperiments, we consider three aspects for the tip selection algorithm: the accuracy, cosine\nsimilarity, and multiplicity.\n(a)(b)\nFigure 5.Effect of multiplicity on performance.  (a) Global model accuracy; (b) Ratio of reference\nscore of malicious nodes to total reference score per round.\n5.3. Main Blockchain Layer Review\nThree experiments were conducted to investigate the main blockchain layer. First, we\ninvestigated its performance according to the proportion of the local model to the global\nmodel. Second, we compared different methods of model aggregation and voting. Third,\nthe learning stability according to the average parameterβwas compared.\n5.3.1. Performance Depending on the Local Model Proportion to the Global Model\nWe investigated the global model accuracy based on the combination of local models\nduring the asynchronous update procedure.\nIn this experiment, only five nodes were used without malicious nodes to minimize\nincidental effects on the test results.  Data sets were assigned to the nodes in the same\nmanner as before.\nFigure 6 illustrates the convergence in accuracy according to the different numbers of\nlocal models aggregated in the global modelG\nm\n, wheremindicates the number of local\nmodels used for aggregation. Essentially, the modelG\n|S|−1\n=G\n4\nwith|S|=5 shards is a\nregular model that evenly aggregates all local models from each shard. Meanwhile,G\nm>4",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826315 of 23\nis an average global model that has an additionalm−4 local models randomly chosen\nfrom among the five local models.\nThe base global modelG\n4\nachieves a higher accuracy of 84.64% compared to the\nothers; additionally,G\n5\nhas the lowest accuracy of 39.29%, followed byG\n6\n,G\n7\n, andG\n8\n.\nMore information from the additional models leads to bias for particular classes in the\nglobal model and eventually decreases the level of accuracy, i.e., more iterations in a certain\nshard do not improve the accuracy of the global model\nFigure 7 presents the confusion matrix of global modelG\n5\nwith an additive model from\nshards 1 to 5. For instance, Figure 7a illustrates a case in which the local model of shard\n#1 for data 0 and 1 is added toG\n4\n. Also, Figure 7b–e show confusion matrices of a global\nmodel combining a local model of each shard from #2 to #5 respectively.  True positives\nand false positives for labels 0 and 1 are high as shown in the red box of each confusion\nmatrix because the accuracy of other labels decreases as it contains more information about\nlabels 0 and 1.  Consequently, the non-IID data set leads the agents to train a model for\nclassification more about their own data.\nFigure 6.The accuracy of the global model depends on the proportion of local models to global models.\nFigure 7.Confusion matrix of theG\n4\nglobal model added by a local model of each shard: (a) shard\n#1 with data 0–1, (b) shard #2 with data 2–3, (c) shard #3 with data 4–5, (d) shard #4 with data 6–7,\n(e) shard #5 with data 8–9.\n5.3.2. Compare the Various Voting Systems\nThrough this experiment, we demonstrated the effectiveness of the proposed voting\nsystem under a model-poisoning attack with 50% malicious nodes. Figure 8 displays the\naccuracy according to the voting method. Without voting, intentionally uploaded models\nof the malicious nodes as an attack can be aggregated in the global model, which imposes\na serious effect on the entire learning procedure. Such a poisoned global model not only\nreduces the level of accuracy, it also degrades the ability to filter out other poisoned models\nin the local chain as the model similarity becomes meaningless.  Therefore, the voting",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 15
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826316 of 23\nprocess is essential in circumstances in which a model attack from malicious nodes occurs\nin the network.\nFigure 8.Global model accuracy under different voting methods.\nThere are two aggregation-voting procedures: (i) a synchronous update for voting and\n(ii) a pseudo-synchronous update for voting. The first demands a synchronous aggregation\nof all local models from the shards. Thereafter, committee members vote between the old\nG\nt−1\nmodel and the new global modelG\nt\n.  For example, if there are five shards in the\nnetwork, the global model of the previous round isG\nt−1\n=\nM\nt−1\n1\n+M\nt−1\n2\n+M\nt−1\n3\n+M\nt−1\n4\n+M\nt−1\n5\n5\n,\nand the global model of the current round isG\nt\n=\nM\nt\n1\n+M\nt\n2\n+M\nt\n3\n+M\nt\n4\n+M\nt\n5\n5\n. The synchronous\napproach has no significant change in accuracy from round 11, which converges at approxi-\nmately 77.3% because the new global model is comparable with the old global model.\nThe pseudo-synchronous update for voting (described in Section 4.4) achieves an\naccuracy of up to 85.85% and a convergence of approximately 85.24%. In contrast to the\nsynchronous case, which discards a new global model even with a single poisoned local\nmodel, the pseudo-synchronous approach can filter out the poisoned local model while\ncombining other pure local models for the new global model.\n5.3.3. Global Model Update Speedβ\nOur global model was progressively averaged usingω\n(t+1)\n= (1−β)ω\n(t−1)\n+βω\n(t)\nfor a gradual update, whereβis a ratio parameter between the old and new global models.\nFigure 9 plots the accuracy by varyingβunder 50% malicious nodes for a model-poisoning\nattack. The accuracy ofβ= 1.0 reaches a maximum of 85.26%, whereas otherβvalues of 0.5,\n0.7, and 0.3 achieve accuracy rates of 85.24%, 85.15%, and 79.41%, respectively. However,\nβ= 1.0 considering only a new global model shows unstable learning. In particular, the\naccuracy decreases, particularly in global rounds 5, 7, 10, 11, 16, 18, and 20, because some of\nthe local models used for global model aggregation were indirectly poisoned. Particularly\nin the initial rounds, normal nodes have difficulty distinguishing between poisoned and\nnormal models because of the model variance, which exacerbates the stability in terms\nof accuracy.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 16
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826317 of 23\nFigure 9.The accuracy of a global model depends on the adjustment ofβ.\nWith a smallβ= 0.3, the previous global model was reflected more than the new global\nmodel, which made the learning extremely slow. We therefore used an update speed of\nα= 0.5for the following experiments because stable learning with an accuracy comparable\ntoβ= 1.0—the accuracy gap between them is only 0.02—is achieved.\n5.4. Performance for the Various Attack Scenarios\nThe following experiments demonstrate the feasibility of our system under various at-\ntacks. Unlike the previous model poisoning, these two data-poisoning and label-swapping\nattacks affect the model indirectly.\nFor comparison, the conventionalFedAvgwas implemented with 20 epochs of training\nper round, which is equivalent to our training iterations.  Additionally, we benchmark\nseveral Byzantine- tolerant algorithms such asMedian,TrimmedMean[12], andKrum[11]\nin model-poisoning attack scenarios.\n5.4.1. Model-Poisoning Attacks\nFigure 10a shows the accuracy of the performance with varying ratios of malicious\nnodes attempting a model-poisoning attack.   The final accuracy of each case,  i.e.,  0%,\n10%, 30%, and 50% malicious nodes, is 85.67%, 85.5%, 85.07%, and 85.24%, respectively.\nThe accuracy of the convergence is comparable regardless of the ratio of malicious nodes.\nInstead, the learning speed differs according to the proportion of malicious nodes. A small\nportion of malicious nodes, i.e., 0% and 10%, learned faster than the 30% and 50% cases.\nMoreover, the accuracy is 24.47% in round 1 with no malicious nodes, i.e., 0%, compared to\nother cases such as 10%, 30%, and 50% malicious nodes. There are two key reasons for the\nslow learning with a large number of malicious nodes. First, the number of honest nodes\ndecreases in each shard. The second is that the partially poisoned global model, which is\ngiven as a root transaction at every round, delays updates in each shard. To summarize,\nthe malicious nodes do not significantly affect the accuracy of our system but cause latency\nin the model updated for the target.\nFigure 10b depicts that a malicious node does not effectively attack the learning of a\nnormal node. The RS of the malicious nodes is almost consistent with the varying ratios of\nmalicious nodes, less than 0.05% for all cases. The case with 10% malicious nodes has an\nRS sum of almost 0%, while the case with 30% malicious nodes has an RS sum of 0.013% in\nround 1. For a 50% ratio of malicious nodes, the influence of malicious nodes is insignificant,\nwith 0.05% RS.\nFigure 10c shows the comparison of Byzantine-tolerant algorithms together with the\nconventionalFedAvgwith respect to accuracy performance. All experimental parameters\nare configured to be exactly the same as those in Figure 10a.  Without malicious nodes,",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 17
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826318 of 23\ntheFedAvgaccuracy  is  about  79%,  while  the  highest  average  accuracy  is  only  about\n10%.  Moreover the training fails to converge to the global model with 50% malicious\nnodes. The final accuracy ofMedian,TrimmedMean, andKrumis 62.4%, 65.83%, and 55.4%,\nrespectively, without attacks. Unlike theFedAvgusing the model weights of all client nodes,\nthose Byzantine-tolerant algorithms use only a fraction of the model weights of client nodes,\nwhich makes learning more unstable on non-IID datasets. Thus, all three algorithms have\nlower accuracy thanFedAvg. Additionally, all three algorithms are not trained with 50%\nmalicious nodes because simple clustering algorithms or statistical approaches cannot\neffectively distinguish the local models that have been biased by the non-IID datasets and\npoisoned by attackers.\n(a)(b)\n(c)\nFigure 10.\nEvaluation of our system with a model-poisoning attack. (a) Performance of the proposed\nsystem; (b) RSR with varying ratio of attackers; (c) Performance comparison ofFedAvg,Median\nTrimmedMeanandKnum.\n5.4.2. Data-Poisoning Attacks\nFigure 11a shows the accuracy of our system with various malicious nodes attempting\ndata-poisoning attacks.  In contrast to the model-poisoning attack having 85% accuracy\nregardless of the portions of malicious nodes, the accuracy converges to 81.53%, 83.03%,\nand 84.41% when the ratio of malicious nodes is 50%, 30% and 10%, respectively.  Our\nsystem has limitations in detecting a model ruined by poisoned data compared to directly\nfiltering a poisoned model.\nThe RSR of the malicious nodes in Figure 11b indicate similar outcomes. The RSR is\n0.01%, 0.04%, and 0.09% for 10%, 30%, and 50% malicious nodes, respectively. In Figure 11b,\nthe RSR decreases sharply in rounds 1 and 2, and the interference of malicious nodes is\nsufficiently reduced to allow the learning to converge as the learning progresses.\nFigure 11c shows the accuracy of a conventionalFedAvgunder the same data poi-\nsoning. Unlike the model-poisoning attack, where the accuracy could not converge, the",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 18
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826319 of 23\ndata-poisoning attack converged to 74.37% when the number of malicious nodes was 10%.\nThe accuracy converged to 73.99% and 71.42% with 30% and 50% malicious nodes, respec-\ntively. Consequently, our system outperformed the conventionalFedAvgby an average\nof 9.72%.\nTo explore more interference from data poisoning, we conducted an additional experi-\nment with a reduction in the number of epochs of each round from 20 to 5, as indicated in\nFigure 11d. With 10% malicious nodes, the accuracy converges to 73.95%, which is similar\nto that of 20 epochs and implies that a small number of malicious nodes do not significantly\naffect the federated learning. However, the accuracy degrades to 61.28% and 58.49% for\nmore than 30% and 50% malicious nodes, respectively. From these results, we can assume\nthat the accuracy can be improved if the nodes have a sufficient number of training epochs.\nIn the case of a data-poisoning attack in which the weights of the model are not directly\nmanipulated, a sufficient number of training epochs can enhance the resistance to an attack.\n(a)(b)\n(c)(d)\nFigure 11.Evaluation of our system under data-poisoning attacks. (a) Performance of the proposed\nsystem; (b) RSR with varying ratio of attackers; (c) Performance of legacyFedAvg; (d) Performance\nof less-trainedFedAvgmodel.\n5.4.3. Label-Swapping Attacks\nThe label-swapping attack influences learning more than the data-poisoning attack\nby indirectly damaging the weights of the model. Figure 12a illustrates the accuracy with\nvarying ratios of malicious nodes that conduct label-swapping attacks.  When there are\n10% malicious nodes, the accuracy in the last round is approximately 83.41% and decreases\nsharply to 79.08% with 30% malicious nodes. Under 50% malicious nodes, the accuracy is\napproximately 77.16% in the last round.\nUnlike previous experiments, there is a gap in the level of accuracy in the last round\naccording to the ratio of malicious nodes. Additionally, the RSR of malicious nodes increases\nand continuously fluctuates significantly, as indicated in Figure 12b, which implies that the",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 19
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826320 of 23\nattacks continuously affect the entire learning procedure. Unlike data-poisoning attacks,\nlabel-swapping attacks use training data without noise, similar to normal nodes, which\nmakes it difficult to distinguish poisoned models using the cosine similarity. Therefore, the\nmodels of malicious nodes are continuously selected, as indicated in the figure.\nNevertheless, our system achieves a notable accuracy with a two-step verification that\nselects the current and previous local models through voting. Although the malicious node\nmodel is directly reflected in the local model, it is possible to prevent the global model from\nbeing severely damaged.\nFigure 12c displays the performance of the conventionalFedAvg, where the accuracy\nconverges to 66.5% for 10% attackers and 40.75% and 9.8% for 30% and 50% malicious\nnodes, respectively. The accuracy decreases significantly according to the ratio of malicious\nnodes. The adverse effect on the learning is lower than that of the model-poisoning attack\nbut higher than that of the data-poisoning attack.\n(a)(b)\n(c)\nFigure 12.Evaluation of our system with label-swapping attacks. (a) Performance of the proposed\nsystem; (b) RSR with varying ratios of attackers; (c) Performance of legacyFedAvg.\n6. Conclusions\nIn this article, we present a hierarchical blockchain system for robust federated learning\nunder various attacks by the malicious nodes, which consists of a main blockchain layer\nfor pseudo-asynchronous global model aggregation and a DAG-based shard layer for\nlocal model aggregation.  We propose a novel tip selection algorithm with local model\nsimilarity and a multiplicity concept that prevents effectively falling into traps of similarity\nattacks by malicious nodes. Additionally, the proposed global voting algorithm achieves a\nconsistent improvement in the model accuracy under various attacks and an extremely non-\nIID data distribution. We implement our framework and experiment with several attack\nmodels.  Our system outperforms non-IIDFedAvglearning with better accuracy, 60, 10\nand 60% in the model-poisoning, data-poisoning and label-swapping attacks, respectively.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 20
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826321 of 23\nAdditionally, some Byzantine-tolerant algorithms proposed for the model-poisoning attack\nshow limited throughput as they suffer when distinguishing and aggregating local models\ndue to the non-IID distribution of the dataset.\n7. Future Works\nIn this study, we find optimal parameters for similarity, accuracy and update speed\nby exploring experiment sets for given blockchain structures and datasets. However, they\nneed to be configured automatically during the learning procedure; therefore, in the future,\nwe will apply a deep reinforcement learning algorithm for parameter tuning. Additionally,\nwe will investigate the feasibility of our framework for more complicated CNN models\nfor rich image data processing and recurrent network models for time series data. In our\nsystem, the model aggregation causes heavy communications and storage overuse for the\nblockchain. Accordingly, further studies on scalability enhancement need to be conducted.\nAuthor Contributions:W.K. conceived and designed the main idea and wrote the paper; J.L. devel-\noped algorithm and performed the experiments. All authors have read and agreed to the published\nversion of the manuscript.\nFunding:This research was supported by Basic Science Research Program through the National\nResearch Foundation of Korea (NRF) funded by the Ministry of Science and ICT (2022R1F1A1074767).\nConflicts of Interest:The authors declare no conflict of interest.\nReferences\n1.\nLiu, W.; Wang, Z.; Liu, X.; Zeng, N.; Liu, Y.; Alsaadi, F.E. A survey of deep neural network architectures and their applications.\nNeurocomputing2017,234, 11–26. [CrossRef]\n2.Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.; Chen, S.C.; Iyengar, S.  A survey on deep learning:\nAlgorithms, techniques, and applications.ACM Comput. Surv. (CSUR)2018,51, 1–36. [CrossRef]\n3.Alom, M.Z.; Taha, T.M.; Yakopcic, C.; Westberg, S.; Sidike, P.; Nasrin, M.S.; Hasan, M.; Van Essen, B.C.; Awwal, A.A.; Asari, V.K.\nA state-of-the-art survey on deep learning theory and architectures.Electronics2019,8, 292. [CrossRef]\n4.Regulation, G.D.P. General data protection regulation (GDPR).Intersoft Consult.2018,1, 1–9.\n5.\nKoneˇcn\n`\ny, J.;  McMahan, H.B.;  Yu, F.X.;  Richtárik, P.;  Suresh, A.T.;  Bacon, D.   Federated learning:  Strategies for improving\ncommunication efficiency.arXiv2016, arXiv:1610.05492.\n6.Koneˇcn\n`\ny, J.; McMahan, H.B.; Ramage, D.; Richtárik, P.  Federated optimization:  Distributed machine learning for on-device\nintelligence.arXiv2016, arXiv:1610.02527.\n7.Nguyen, D.C.; Ding, M.; Pham, Q.V.; Pathirana, P.N.; Le, L.B.; Seneviratne, A.; Li, J.; Niyato, D.; Poor, H.V. Federated learning\nmeets blockchain in edge computing: Opportunities and challenges.IEEE Internet Things J.2021,8, 12806-12825. [CrossRef]\n8.Bhagoji, A.N.; Chakraborty, S.; Mittal, P.; Calo, S.  Model poisoning attacks in federated learning.  In Proceedings of the 32nd\nInternational Conference on Neural Information Processing Systems, Montreal, QC, Canada, 3–8 December 2018; pp. 1–23.\n9.Fang, M.; Cao, X.; Jia, J.; Gong, N. Local Model Poisoning Attacks to{Byzantine-Robust}Federated Learning.  In Proceedings of\nthe 29th USENIX Security Symposium (USENIX Security 20), Online, 7–11 August 2020; pp. 1605–1622.\n10.Lyu, L.; Yu, H.; Yang, Q. Threats to federated learning: A survey.arXiv2020, arXiv:2003.02133.\n11.\nBlanchard, P.; El Mhamdi, E.M.; Guerraoui, R.; Stainer, J. Machine learning with adversaries: Byzantine tolerant gradient descent.\nAdv. Neural Inf. Process. Syst.2017,30.\n12.\nYin, D.; Chen, Y.; Kannan, R.; Bartlett, P. Byzantine-robust distributed learning: Towards optimal statistical rates.  In Proceedings\nof the International Conference on Machine Learning, PMLR, Stockholm, Sweden, 10–15 July 2018; pp. 5650–5659.\n13.Sattler, F.; Müller, K.R.; Wiegand, T.; Samek, W. On the byzantine robustness of clustered federated learning.  In Proceedings of\nthe ICASSP 2020—2020 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), Barcelona, Spain,\n4–8 May 2020; pp. 8861–8865.\n14.Yadav, K.; Gupta, B. Clustering Algorithm to Detect Adversaries in Federated Learning.arXiv2021, arXiv:2102.10799.\n15.\nLi, S.; Cheng, Y.; Wang, W.; Liu, Y.; Chen, T.  Learning to detect malicious clients for robust federated learning.arXiv2020,\narXiv:2002.00211.\n16.Che, C.; Li, X.; Chen, C.; He, X.; Zheng, Z.  A decentralized federated learning framework via committee mechanism with\nconvergence guarantee.IEEE Trans. Parallel Distrib. Syst.2022,33, 4783–4800. [CrossRef]\n17.Nakamoto, S. Bitcoin: A peer-to-peer electronic cash system.Decentralized Bus. Rev.2008, 21260.\n18.Wood, G. Ethereum: A secure decentralised generalised transaction ledger.Ethereum Proj. Yellow Pap.2014,151, 1–32.\n19.\nSchwartz, D.;Youngs, N.; Britto, A. Ripple. 2014. Available online: https://ripple.com/files/ripple-consensus-whitepaper.pdf\n(accessed on 25 September 2022).\n20.Mazieres, D. The stellar consensus protocol: A federated model for internet-level consensus.Stellar Dev. Found.2015,32, 1–45.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 21
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826322 of 23\n21.Pokhrel, S.R.; Choi, J. Federated learning with blockchain for autonomous vehicles: Analysis and design challenges.IEEE Trans.\nCommun.2020,68, 4734–4746. [CrossRef]\n22.\nBao, X.; Su, C.; Xiong, Y.; Huang, W.; Hu, Y. Flchain: A blockchain for auditable federated learning with trust and incentive.  In\nProceedings of the 2019 5th International Conference on Big Data Computing and Communications (BIGCOM), Qingdao, China,\n9–11 August 2019; pp. 151–159.\n23.Kim, H.;  Park, J.;  Bennis, M.;  Kim, S.L.   On-device federated learning via blockchain and its latency analysis.arXiv2018,\narXiv:1808.03949.\n24.\nLu, Y.; Huang, X.; Zhang, K.; Maharjan, S.; Zhang, Y. Blockchain empowered asynchronous federated learning for secure data\nsharing in internet of vehicles.IEEE Trans. Veh. Technol.2020,69, 4298–4311. [CrossRef]\n25.\nLu, Y.; Huang, X.; Zhang, K.; Maharjan, S.; Zhang, Y. Communication-efficient federated learning and permissioned blockchain\nfor digital twin edge networks.IEEE Internet Things J.2020,8, 2276–2288. [CrossRef]\n26.\nLu, Y.; Huang, X.; Zhang, K.; Maharjan, S.; Zhang, Y.  Low-latency federated learning and blockchain for edge association in\ndigital twin empowered 6G networks.IEEE Trans. Ind. Inf.2020,17, 5098–5107. [CrossRef]\n27.\nDesai, H.B.; Ozdayi, M.S.; Kantarcioglu, M.  Blockfla: Accountable federated learning via hybrid blockchain architecture.  In\nProceedings of the Eleventh ACM Conference on Data and Application Security and Privacy, Virtual Event, 26–28 April  2021;\npp. 101–112.\n28.\nWeng, J.; Weng, J.; Zhang, J.; Li, M.; Zhang, Y.; Luo, W.  Deepchain:  Auditable and privacy-preserving deep learning with\nblockchain-based incentive.IEEE Trans. Dependable Secur. Comput.2019,18, 2438–2455. [CrossRef]\n29.\nQu, Y.; Gao, L.; Luan, T.H.; Xiang, Y.; Yu, S.; Li, B.; Zheng, G. Decentralized privacy using blockchain-enabled federated learning\nin fog computing.IEEE Internet Things J.2020,7, 5171–5183. [CrossRef]\n30.Zhu, H.; Xu, J.; Liu, S.; Jin, Y. Federated learning on non-IID data: A survey.Neurocomputing2021,465, 371–390. [CrossRef]\n31.Wang, H.; Kaplan, Z.; Niu, D.; Li, B. Optimizing federated learning on non-iid data with reinforcement learning.  In Proceedings\nof the IEEE INFOCOM 2020-IEEE Conference on Computer Communications, Toronto, ON, Canada, 6–9 July 2020; pp. 1698–1707.\n32.Li, Y.; Chen, C.; Liu, N.; Huang, H.; Zheng, Z.; Yan, Q. A blockchain-based decentralized federated learning framework with\ncommittee consensus.IEEE Netw.2020,35, 234–241. [CrossRef]\n33.McMahan, B.; Moore, E.; Ramage, D.; Hampson, S.; Arcas, B.A.  Communication-efficient learning of deep networks from\ndecentralized data.  In Proceedings of the Artificial Intelligence and Statistics (AISTATS 2017), Fort Lauderdale, FL, USA, 20–22\nApril 2017; pp. 1273–1282.\n34.Xie, C.; Koyejo, S.; Gupta, I. Asynchronous federated optimization.arXiv2019, arXiv:1903.03934.\n35.Chai,  Z.;  Chen,  Y.;  Zhao,  L.;  Cheng,  Y.;  Rangwala,  H.   Fedat:  A communication-efficient federated learning method with\nasynchronous tiers under non-iid data.ArXivorg2020,60, 1–16.\n36.Chen, Y.; Ning, Y.; Slawski, M.; Rangwala, H. Asynchronous online federated learning for edge devices with non-iid data.  In\nProceedings of the 2020 IEEE International Conference on Big Data (Big Data), Atlanta, GA, USA, 10–13 December 2020; pp. 15–24.\n37.Zhao, Y.; Li, M.; Lai, L.; Suda, N.; Civin, D.; Chandra, V. Federated learning with non-iid data.arXiv2018, arXiv:1806.00582.\n38.Li, X.; Huang, K.; Yang, W.; Wang, S.; Zhang, Z. On the convergence of fedavg on non-iid data.arXiv2019, arXiv:1907.02189.\n39.King,   S.;   Nadal,   S.2017.Available  online:https://peercoin.net/assets/paper/peercoin-paper.pdf  (accessed  on\n25 September 2022).\n40.Vasin, P.  BlackCoin’s Proof-of-Stake Protocol v2.  2016.  Available online:  https://blackcoin.org/blackcoin-pos-protocol-v2\n-whitepaper.pdf (accessed on 25 September 2022).\n41.Nxt Wiki. 2016.  Available online: https://nxtplatform.org/ (accessed on 25 September 2022).\n42.Bentov, I.; Gabizon, A.; Mizrahi, A.  Cryptocurrencies without proof of work.  In Proceedings of the International Conference\non Financial Cryptography and Data Security, Christ Church, Barbados, 22–26 February 2016; Springer:  Berlin/Heidelberg,\nGermany, 2016; pp. 142–157.\n43.BitShare.  2016.  Available online:  https://bitshares.org/technology/delegated-proof-of-stake-consensus/ (accessed on 25\nSeptember 2022).\n44.\nP4Titan.   2014.Slimcoin:  A  Peer-to-Peer  Crypto-currency  with  Proof-of-Burn.   Available  online:  https://slimcoin.info/\nwhitepaperSLM.pdf (accessed on 25 September 2022).\n45.Tendermint. 2018.  Available online: https://tendermint.com/ (accessed on 25 September 2022).",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 22
      }
    }
  },
  {
    "pageContent": "Sensors2022,22, 826323 of 23\n46.Park, S.; Pietrzak, K.; Alwen, J.; Fuchsbauer, G.; Gazi, P.Spacecoin: A Cryptocurrency Based on Proofs of Space; Technical Report, IACR\nCryptology ePrint Archive 2015; 2015. Available online: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&\ncd=&ved=2ahUKEwiKx7u_h4L7AhWjmVYBHWoVDK0QFnoECA4QAQ&url=https%3A%2F%2Fwww.allcryptowhitepapers.\ncom%2Fwp-content%2Fuploads%2F2018%2F05%2FSpacecoin.pdf&usg=AOvVaw3X70G1HG_AxQq6hcXs3iMG (accessed on 25\nSeptember 2022).\n47.BurstCoin. 2018. Available online: https://burstcoin.info/ (accessed on 25 September 2022).\n48.\nLuu, L.; Narayanan, V.; Zheng, C.; Baweja, K.; Gilbert, S.; Saxena, P.  A secure sharding protocol for open blockchains.   In\nProceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, Vienna, Austria, 24–28 October\n2016; pp. 17–30.\n49.\nVukoli ́c, M.  The quest for scalable blockchain fabric: Proof-of-work vs.  BFT replication.  In Proceedings of the International\nWorkshop on Open Problems in Network Security, Zurich, Switzerland, 29 October 2015; Springer: Berlin/Heidelberg, Germany,\n2015, pp. 112–125.\n50.Zamani, M.; Movahedi, M.; Raykova, M. RapidChain: Scaling blockchain via full sharding.  In Proceedings of the 2018 ACM\nSIGSAC Conference on Computer and Communications Security, Toronto, ON, Canada, 15–19 October  2018; pp. 931–948.\n51.Eyal, I.; Gencer, A.E.; Sirer, E.G.; Van Renesse, R. Bitcoin-NG: A Scalable Blockchain Protocol.  In Proceedings of the NSDI, Santa\nClara, CA, USA, 16–18 March 2016; pp. 45–59.\n52.Raiden Network. 2018.  Available online: https://raiden.network/ (accessed on 25 September 2022).\n53.Plasma. 2017.  Available online: https://plasma.io/ (accessed on 25 September 2022).\n54.\nHerrera-Joancomartí, J.; Pérez-Solà, C. Privacy in bitcoin transactions: New challenges from blockchain scalability solutions.  In\nProceedings of the Modeling Decisions for Artificial Intelligence, Sant Julià de Lòria, Andorra, 19–21 September 2016; Springer:\nBerlin/Heidelberg, Germany, 2016; pp. 26–44.\n55.Danezis, G.; Meiklejohn, S. Centrally banked cryptocurrencies.arXiv2015, arXiv:1505.06895.\n56.Kokoris-Kogias, E.; Jovanovic, P.; Gasser, L.; Gailly, N.; Syta, E.; Ford, B. Omniledger: A secure, scale-out, decentralized ledger via\nsharding.  In Proceedings of the 2018 IEEE Symposium on Security and Privacy (SP), San Francisco, CA, USA, 21–23 May 2018;\npp. 583–598.\n57.Pervez, H.; Muneeb, M.; Irfan, M.U.; Haq, I.U. A comparative analysis of DAG-based blockchain architectures.  In Proceedings of\nthe 2018 12th International Conference on Open Source Systems and Technologies (ICOSST), Lahore, Pakistan. 19–21 December\n2018; pp. 27–34.\n58.Conti, M.; Kumar, G.; Nerurkar, P.; Saha, R.; Vigneri, L.  A survey on security challenges and solutions in the IOTA.J. Netw.\nComput. Appl.2022,203, 103383. [CrossRef]\n59.dagCoin.  2022.  Available online: https://dagcoin.org/ (accessed on 25 September 2022).\n60.Feng, L.; Zhao, Y.; Guo, S.; Qiu, X.; Li, W.; Yu, P. BAFL: A Blockchain-Based Asynchronous Federated Learning Framework.IEEE\nTrans. Comput.2022,71, 1092–1103. [CrossRef]\n61.Shayan, M.; Fung, C.; Yoon, C.J.; Beschastnikh, I. Biscotti: A blockchain system for private and secure federated learning.IEEE\nTrans. Parallel Distrib. Syst.2020,32, 1513–1525. [CrossRef]\n62.Wang, X.; Wang, Y. Asynchronous Hierarchical Federated Learning.arXiv2022, arXiv:2206.00054.\n63.Kang, J.; Xiong, Z.; Niyato, D.; Zou, Y.; Zhang, Y.; Guizani, M.  Reliable federated learning for mobile networks.IEEE Wirel.\nCommun.2020,27, 72–80. [CrossRef]\n64.Ferraro, P.; King, C.; Shorten, R. On the stability of unverified transactions in a DAG-based distributed ledger.IEEE Trans. Autom.\nControl2019,65, 3772–3783. [CrossRef]\n65.LeCun, Y.;  Bottou, L.;  Bengio, Y.;  Haffner, P.   Gradient-based learning applied to document recognition.Proc. IEEE1998,\n86, 2278–2324. [CrossRef]",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data..pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "DAG-Based Blockchain Sharding for Secure Federated Learning with Non-IID Data",
          "Author": "",
          "Subject": "Federated learning is a type of privacy-preserving, collaborative machine learning. Instead of sharing raw data, the federated learning process cooperatively exchanges the model parameters and aggregates them in a decentralized manner through multiple users. In this study, we designed and implemented a hierarchical blockchain system using a public blockchain for a federated learning process without a trusted curator. This prevents model-poisoning attacks and provides secure updates of a global model. We conducted a comprehensive empirical study to characterize the performance of federated learning in our testbed and identify potential performance bottlenecks, thereby gaining a better understanding of the system.",
          "Keywords": "blockchain; federated learning; smart contract; model-poisoning attack",
          "Creator": "LaTeX with hyperref",
          "Producer": "pdfTeX-1.40.21",
          "CreationDate": "D:20221028171056+08'00'",
          "ModDate": "D:20221028111545+02'00'"
        },
        "metadata": null,
        "totalPages": 23
      },
      "loc": {
        "pageNumber": 23
      }
    }
  },
  {
    "pageContent": "Ostraka: Secure Blockchain Scaling by Node Sharding\nAlex Manuskin\nTechnion, IC3\namanusk@pm.me\nMichael Mirkin\nTechnion, IC3\nmichael.mirkin@gmail.com\nIttay Eyal\nTechnion, IC3\nittay@technion.ac.il\nAbstract—Cryptocurrencies,  implemented  with  blockchain\nprotocols, promise to become a global payment system if they\ncan  overcome  performance  limitations.  Rapidly  advancing\narchitectures  improve  on  latency  and  throughput,  but  most\nrequire  all  participating  servers  to  process  all  transactions.\nSeveral recent works propose toshardthe system, such that\neach machine would only process a subset of the transactions.\nHowever,  we  identify  a  denial-of-service  attack  that  is\nexposed by these solutions – an attacker can generate trans-\nactions  that  would  overload  a  single  shard,  thus  delaying\nprocessing  in  the  entire  system.  Moreover,  we  show  that\nin  common  scenarios,  these  protocols  require  most  node\noperators  to  process  almost  all  blockchain  transactions.\nWe present Ostraka, a blockchain node architecture that\nshards  (parallelizes)  the  nodes  themselves.  We  prove  that\nreplacing  a  unified  node  with  an  Ostraka  node  does  not\naffect  the  security  of  the  underlying  consensus  mechanism.\nWe evaluate analytically and experimentally block prop-\nagation  and  processing  in  various  settings.  Ostraka  allows\nnodes  in  the  network  to  scale,  without  costly  coordination.\nIn  our  experiments,  Ostraka  nodes  transaction  processing\nrate  grows  linearly  with  the  addition  of  resources.\nIndex Terms—Distributed systems, Blockchain, Network se-\ncurity\n1.  Introduction\nPayment  systems  are  typically  controlled  by  trusted\nentities – central banks control supply by printing money,\nbanks   transact   among   each   other   with   a   central   na-\ntional  [34]  or  international  [33]  mechanism,  and  credit\ncard  companies  [36]  authorize  their  clients’  transactions.\nThis  centralization  of  power  implies  limitations  of  the\nusers’ freedom [31], less resilience, and high fees [5].\nSince their introduction with Bitcoin [29], cryptocur-\nrencies  brought  the  promise  of  adecentralizedglobal\npayment  system  outside  the  control  of  a  single  entity.\nSuch  a  system  is  potentially  useful  for  payment  among\nindividuals,  but  also  among  banks,  machines  (IoT),  and\nmicro-payments for social network interactions.\nSo far, blockchains systems – the decentralized mech-\nanism  on  which  cryptocurrencies  operate  –  could  not\nreach  rates  desired  for  global  payment  systems.  Early\nsystem  implementations  suffered  from  a  consensus  bot-\ntleneck,  limiting  them  to  less  than  a  dozen  transactions\nper  second  [37]  and  they  cannot  scale  by  tuning  their\nparameters [15].\nMore  recent  protocols  [1],  [6],  [13],  [20],  [22],  [24],\n[25],  [32],  [38]  overcome  the  consensus  bottleneck,  but\nthey  are  limited  by  the  processing  capacity  of  the  nodes\ncomprising the system. We provide background in§2.\nEach node is required to store and process each block\nbroadcasted on the network. As the number of transactions\ngrows,  and  the  longer  the  blockchain  exists,  it  becomes\nincreasingly  difficult  for  nodes  to  keep  up.  Existing  de-\nsigns,  where  each  node  is  operated  on  a  single  machine\nare not equipped to scale with the rising demand.\nSeveral recent solutions [2], [26], [28], [39] propose to\nshardthe blockchain, splitting it into multiple interleaved\nsubchains.  Each  subchain  is  maintained  by  a  distinct  set\nof  nodes,  and  so  each  node  does  not  have  to  process  all\ntransactions in the system but only those in its subchain.\nThis allows the system to process transactions at a higher\nrate while reducing the load on the individual node.\nThose solutions targetdemocratic environments, where\nthere  are  many  participants  with  similar  resources.  In\nsuch environments, increasing the number of participants\nallows  to  increase  the  number  of  subchains  and  thus\nsystem  capacity.  However,  we  show  that  when  resource\ndistribution  is  not  democratic,  as  is  the  case  in  most\npopular cryptocurrencies, the security and performance of\nthose  systems  deteriorate.  We  show  how  they  could  be\nvulnerable  to  attacks,  and  why  they  do  not  necessarily\nprovide the benefits of lowering the burden on the single\nnode. We discuss these solutions and related work in§3.\nIn this work, we presentOstraka, a novel architecture\nthat allows for linear scaling of blockchainnodescapacity\nto  meet  network  requirements.  Ostraka  enables  scaling\nwithout  forfeiting  security  assumptions.  Rather  than  par-\ntitioning the system’s state into separately-managed clus-\nters,  in  Ostraka  we  scale  the  nodes  themselves,  splitting\neach  node  across  multipleNode-Shards  (NSs),  allowing\nvertical scaling of each node. The challenge is creating a\npartitioning scheme that achieves several goals. Data must\nbe accessible inO(1)while keeping the system secure and\npreventing an adversary from slowing down the validation\nprocess  across  the  network.  We  describe  the  architecture\nin§4.\nThe implication is that nodes require more resources,\nso fewer entities will run such nodes (e.g hundreds instead\nof thousands currently in Bitcoin [14] and Ethereum [19]).\nWe  argue,  however,  that  the  same  is  true  for  subchain\nbased  proposals,  where  only  an  optimisticdemocratic\nsetup  would  lead  to  better  decentralization.  In  more  re-\nalistic  setups,  with  similar  properties  to  those  in  active\nsystems today, they would also imply a smaller number of\nfull  participants.  Importantly,  the  decrease  in  node  count\ndoes  not  mean  that  the  system  becomes  closed:  Anyone\ncan  still  join  the  system  and  participate  in  the  protocol.\narXiv:1907.03331v2  [cs.DC]  16 Sep 2020",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "Meanwhile,  as  with  current  cryptocurrencies,  end-users\nwho send and receive payments can still use their mobile\ndevices by querying a few nodes.\nOstraka  is  a  node  architecture  and  is  thus  indepen-\ndent  of  the  underlying  consensus  protocol.  We  achieve\nimproved throughput by applying a novel block validation\nalgorithm,  that  allows  even  distribution  of  all  aspects\nof  block  validations  across  multiple  machines  (§4).  We\ndemonstrate  how  we  achieve  these  properties,  without\nformfitting existing security guarantees.\nWe prove that the security guarantees of the protocol\nare  the  same  as  those  of  a  theoretical  high-performance\nunified(standard)  node  (§5).  In  contrast  to  existing  so-\nlutions  [29],  [35],  Ostraka  does  not  regard  transaction\norder  within  each  block.  This  avoids  expensive  locking\nmechanisms requiring elaborate communication. We prove\nthe  correctness  of  this  crucial  enabler  of  distributed  ex-\necution  and  show  that  the  Ostraka  distributed  node  is\noperationally  indistinguishable  from  a  unified-node,  de-\nspite  order  changes  and  processing  parallelization.  Next,\nwe  show  that  an  attacker  can  only  perform  a  denial-of-\nservice  (DoS)  attack  against  a  small  number  of  Ostraka\nnodes with high probability.\nWe  evaluate  Ostraka’s  block  propagation  in  a  variety\nof  configurations  and  network  conditions.  We  show  that\nan Ostraka node’s processing rate grows nearly optimally\nwith the number ofNSs. We provide theoretical analysis\nfor  the  node  performance  as  a  function  of  inter-  and\nintra-node  bandwidth.  We  measure  the  performance  of\nOstraka in transaction processing with as many as 64NSs,\nachieving  a  rate  of  nearly  400ktransactions  per  second.\nWe  demonstrate  the  effect  of  Ostraka  on  a  full  system\nthrough simulation of Bitcoin-NG [20], achieving an order\nof magnitude improvement. Evaluation details are in§6.\nIn summary, our main contributions are:\n•Analysis   of   previous   scaling   solutions   in   non-\ndemocratic environments;\n•Ostraka – a novel blockchain scaling architecture;\n•Proof that Ostraka does not reduce security compared\nto a unified node architecture;\n•Theoretical   performance   analysis   showing   linear\nscaling – up to network limits;\n•Node implementation performance matching theory;\n•A full system simulation.\n2.  Preliminaries:  The  UTXO  Model\nOstraka  utilizes  the  UTXO  model  [4],  [9],  [30]  that\nwas  introduced  in  Bitcoin  and  is  used  in  many  systems.\nWe describe here the elements relevant to this work.\nTransaction.Each  transaction  comprises  two  lists  –\ninputs  and  outputs.  The  outputs  are  the  new  records\nindicating   ownership   of   amounts.   Each   transaction   is\nuniquely  identified  by  a  hash  of  its  contents,TxHash.\nAn  input  of  a  transaction  references  an  output  itspends\nby  theTxHashof  the  transaction  containing  the  output\nand  its  index  in  its  output  list.  To  spend  an  output,  a\nspending  condition  must  be  satisfied,  usually  providing\na cryptographic signature.\nNode data structures.To operate a blockchain system,\neach of the nodes maintains three data structures: a set of\ntransactions that were not yet placed in the blockchain –\nthemempool;  the  blockchain  itself,  a  series  of  blocks\ncontaining transactions; and the current system state – the\nUTXO set.\nUsers  create  transactions  and  broadcast  them,  and\nthe  nodes  store  them  in  their  mempools.  Once  aminer\nconstructs a block from transactions in its mempool, she\npublishes the block to its peers. When the node receives a\nnew block, it removes all outputs spent by transactions in\nthe block from the UTXO set and adds the newly created\noutputs. The state of the UTXO set is thus the state of the\nblockchain following each block.\nSecurity  inProof-of-WorkBlockchains.In  aPoW\nblockchain, block propagation time directly affects system\nsecurity. Nakamoto consensus states that the most up-to-\ndate  state  of  the  blockchain  is  the  chain  with  the  most\nwork (the longest chain). If block propagation is slow, it\ntakes  time  until  other  miners  become  aware  of  the  new\nblock.  So  two  (or  more)  miners  might  generate  blocks\nwith the same predecessor. This split is called afork.\nTo  prevent  forks,  block  propagation  time  must  be\nmuch shorter than the interval between blocks. However,\nif  nodes  do  not  validate  blocks  before  propagating  them\nfurther,  the  system  could  be  susceptible  to  DoS  attacks,\nby  flooding  the  system  with  invalid  blocks.  Reducing\nblock  processing  time  is  therefore  critical  to  blockchain\nsecurity [15], [17], [21].\n3.  Sub-chain  Analysis  and  Related  Work\nWe overview current approaches to scaling blockchain\nperformance, starting with novel security and performance\nanalysis of proposals to split the system into subchains.\n3.1.  Concurrent  subchains  (Sharding)\nWith this approach, the system is divided into serveral\nsubchains.  Each  subchain  is  maintained  by  a  commit-\ntee  running  a  Byzantine  Fault  Tolerant  (BFT)  protocol,\ntolerant  of  an  adversary  of  up  to  1/3  of  the  network.\nElastico [28] was one of the first proposals of this scheme.\nOmniLedger  [26]  uses  subchains  and  builds  on  top  of\nByzCoin [25]. RapidChain [39] closely follows the ideas\npresented  in  Elastico  and  OmniLedger  but  proposes  dif-\nferent solutions to committee election and cross-subchain\ntransactions, not dependent on the user. Both OmniLedger\nand RapidChain use the UTXO model to distribute trans-\nactions across subchains. Chainspace [2] suggests a sim-\nilar solution for a smart contracts system [37].\nDoS  vulnerability.These  systems  can  be  vulnerable\nto  DoS  attacks.  Transactions  are  assigned  to  subchains\naccording  to  theirTxHash.  An  attacker  can  overwhelm\na  single  subchain  with  many  transactions  much  more\ncheaply than saturating the entire system. Other subchains\nare  also  throttled  due  to  transactions  that  originate  from\nmultiple subchains.\nWe evaluate the effectiveness of this attack. Consider\na  system  ofnsubchains  and  transactions  with  a  single\noutput  andkinputs.  The  probability  of  a  transaction  to\neither have its output or one of its inputs in the subchain\nundergoing  the  attack  is  the  complement  of  the  proba-\nbility  that  the  output  and  all  inputs  not  in  the  attacked\nsubchain,1−\n(\nn−1\nn\n)\nk+1\n. Note that this is a lower bound:\nThe  number  of  transactions  not  able  to  execute  is  even\nhigher  when  considering  transaction  dependant  on  pend-\ning transactions. Fig. 1 illustrates this result. It shows, for\nexample, that even with 2-3 inputs, in a 2-subchain system",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": " 0\n 0.2\n 0.4\n 0.6\n 0.8\n 1\n 0 1 2 3 4 5 6\nRatio of affected Txs\nNumber of Inputs per Transactions\n2 Shards\n4 Shards\n8 Shards\n16 Shards\nFigure  1.  Ratio  of  effected  transactions  by  attacking  a  single  sub-\nchain\n 0\n 0.002\n 0.004\n 0.006\n 0.008\n 0.01\n 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34\nRatio of mining power\nNumber of shards\n300 Nodes per shard\n600 Nodes per shard\nFigure  2.  Ratio  of  mining  power  requiring  participation  in  all\nsubchains\nabout90%of transactions are affected, but even with 16\nsubchains about20%of the transactions are affected.\nPerformance.Sub-chain  systems  use  various  mecha-\nnisms  for  cross-subchain  transactions.  OmniLedger  [26]\nuses 2-phase commit; it requires the client to obtain proofs\nof  spending  from  each  subchain  where  she  wants  input\nto  be  spent.  RapidChain  [39]  relies  on  the  leader  of  the\noutputsubchain to create new outputs, mirroring outputs\nspent oninputsubchains. In both approaches, since most\ntransactions affect multiple subchains, the additional over-\nhead  is  considerable.  The  architecture  of  Ostraka  avoids\nthis limitation.\nNode load.Ostraka nodes distribute the data internally,\nsuch  that  every  node  maintains  the  entire  state.  This  is\nseemingly a difference from subchain systems where each\nnode only maintains a subset of the state. However, as we\nshow  below,  this  difference  only  holds  in  what  we  call\ndemocratic  environments,  where  there  are  many  miners\n(stakeholders  for  PoS)  with  similar  mining  power  [26],\n[28],  [39].  In  non-democratic  environments,  where  the\nnumber of miners is small, subchain systems also require\nnodes to store the entire state. Prominent systems relying\neither onPoWorPoSare typically non-democratic [16],\n[21],  and  recent  findings  [27]  shows  that  indeed  true\ndecentralization  is  not  possible  in  any  Sybil  protection\nmechanism used today. As of today, in Bitcoin, for exam-\nple,  about  85%  of  the  mining  power  is  controlled  by  10\nmining entities [10].\nRecall  that  subchain  systems  rely  on  BFT  protocols\nto  maintain  each  of  the  subchains.  The  underlying  BFT\nprotocol  assumes  a  bound  on  the  number  of  Byzantine\nnodes,  where  a  node  is  a  unit  of  mining  power.  Even  if\nthe bound holds for the entire system (e.g., less than a third\nof  the  mining  power  belongs  to  malicious  principals),  in\norder to guarantee the bound, there should be sufficiently\nmany nodes in each subchain [26]. With a 25% adversary,\neach subchain should have at least 600 nodes [26]. Stud-\nies [21] show thatPoWsystems are as decentralized as 20\nnodes operating in a quorum, a far cry from the hundreds\nrequired for good security. Since the number of principals\nis not necessarily this large, participants instead split their\nmining power such that every mining power unit allows its\nowner one virtual node orsharein the system. To prevent\nan attacker from targeting a specific subchain, each share\nis assigned to a subchain uniformly at random.\nWe estimate the minimal miner size for which a miner\nwill have shares in most of the subchains. Denote bySthe\nnumber of nodes per subchain and bynthe number of sub-\nchains. Letrbe the target ratio of subchains that should\nbe  occupied  in  expectation  and  denote  the  miner  size  to\nachieve the target byα. The number of shares belonging\nto  the  miner isαnS.  The  expected number  of  subchains\noccupied  by  the  miner  is  thereforen\n(\n1−\n(\nn−1\nn\n)\nαnS\n)\n.\nThis  expression  should  equal  the  target  number  of  sub-\nchains,rn, and solving forαwe getα=\nlog(1−r)\nSnlog(1−1/n)\n.\nTo obtain concrete numbers, we takeSto be either 300\nor  600  as  required  by  Kogias  et  al.  [26]  and  vary  the\nnumber  of  subchains,n,  from  1  to  32.  We  target  an\nexpected90%of  the  subchains  and  obtain  the  results\nshown  in  Fig.  2.  Indeed,  even  with  only  300  nodes  per\nsubchain  and  32  subchains,  a  miner  would  participate\nin90%of the subchains in expectation if its size is larger\nthan0.8%\nThe  implication  is  that  in  non-democratic  scenarios,\nwhich are common in active blockchains, the miners must\nparticipate in all subchains, requiring them to process the\nentire chain, therefore not achieving the goal of reducing\nstress on the single node.\n3.2.  Node  scaling  proposals\nDickerson et al. [18], implement concurrent execution\nin  smart  contracts  in  a  virtual  machine  model  as  used\nin  Ethereum  [37].  They  add  a  concurrent  schedule  to\neach  block,  enabling  consistent  parallel  execution  across\ndifferent  nodes.  However,  the  nature  of  the  VM  model\nlimits  the  level  of  their  measured  speed  up  to  2x.  Read-\nafter-Write dependencies of instructions in the VM model\nenforce  a  sequential  execution  to  avoid  an  inconsistent\nstate.  Ostraka  does  not  suffer  from  these  limitations;  we\nobserved  an  improvement  of  two  orders  of  magnitude,\nlimited  only  by  the  network  and  the  capacity  of  our\nexperimental testbed.\n4.  Architecture\nWe proceed to describe the structure and operation of\nOstraka. An Ostraka node operates similarly to a unified\nnode. The key difference is that in Ostraka the mempool,\nUTXO set, and blockchain storage are distributed among\nseveral machines, callednode-shards(NSs).\nWe describe the system components (§4.1), explain the\ntechniques used to make it efficient and secure (§4.2), and\noverview system operation (§4.3).\n4.1.  System  Components\nIn Ostraka acoordinatorkeeps track of the blockchain\nand  orchestrates  communication  within  the  node  (intra-\nnode)  and  with  other  nodes  (inter-node).  We  refer  to  the\nNSs of the same node assibling NSs. The coordinator can\noperate as a separate machine or as a process on one of the\nNSs.  In  Ostraka  work  distribution  is  local  on  each  node",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "and does not mandate the same number ofNSs per node.\nTransactions  are  distributed  amongNSs  as  atomic  units.\nTransaction outputs are stored in theUTXO-shardof the\nNSthey  are  assigned  to.  Note  we  assume  complete  trust\namong theNSs and the coordinator within a node.\nCoordinator.The  coordinator  orchestrates  the  node\noperation.  When  the  node  is  first  initialized,  allNSs\nconnect  to  the  coordinator.  The  coordinator  coordinates\ncommunication between siblingNSs and with other nodes.\nThe  coordinator  tracks  the  state  of  the  blockchain.  It\nstores the header of each block and determines the main\nchain  (e.g.,  with  mostPoWin  Bitcoin  and  Ethereum).\nIt  instructs  theNSs  of  which  blocks  to  request,  process,\nand  validate.  In  the  case  of  areorg(rollback  of  state,\nwhich  is  possible  in  some  blockchains),  the  coordinator\ncommands theNSs to roll back their state to the block of\nthe divergence and start following the new chain.\nNode-Shards.EachNSis  assigned  a  localShardID.\nTheShardIDdetermines which transactions theNSis re-\nsponsible for. Once allNSs are connected, the coordinator\nsends  eachNStheShardID,  IP  address,  and  port  of  all\nsiblingNSs. Next,NSs connect to form a clique. Via the\nShardID, each transaction is mapped to theNSresponsible\nfor storing it and its outputs.\nEachNSstores  transactions  in  ablock-shard–  a\nportion of a block that contains only transactions assigned\nto  itsShardID.  It  similarly  stores  UTXOs  in  aUTXO-\nshard, and pending transactions in itsmempool shard.\n4.2.  System  Design\nWe proceed to describe the details of the components’\ninteraction.  The  design  sets  to  achieve  several  goals  that\nseem  contradictory.  First,  transaction  lookup  should  be\nanO(1)operation so block validation is quick. Transac-\ntion toNSassignment should allow for efficient commu-\nnication betweenNSs. Nevertheless, an adversary should\nnot  be  able  to  overload  any  singleNS.  Ostraka  achieves\nall these goals as follows.\nTransaction inputs reference previous transaction out-\nputs  byTxHashand  theindexof  the  output  in  the\ntransaction. EachTxHashis unique to a transaction (we\nuse  SHA-256).  Therefore,TxHashis  the  natural  index\nfor transactions.\nAny-order  execution.In  unified  blockchain  clients,\nstorage  and  processing  are  all  performed  on  a  single\nmachine  (e.g.,  [29],  [37]),  transactions  in  a  block  are\nordered  as  a  list.  A  transaction  can  only  spend  outputs\ncreated in a previous block or earlier in the same block’s\nlist. We call this common approach, thetopological-order\nalgorithm.  Using  a  topological  order  in  Ostraka  would\nhave  implied  unnecessary  dependencies,  requiring  costly\ncoordination  amongNSs.  Instead,  Ostraka  treats  each\nblock  as  an  unordered  set  of  transactions.  Dependencies\nof  a  transaction  are  satisfied  if  the  referenced  output  is\nin an earlier block or anywhere in the current block. We\njustify  the  correctness  of  unordered  block  validation  in\nSection§5.\nAdding salt.When considering how to distribute trans-\nactions  equally  amongNSs,  one  option  to  simply  take\ntheTxHashof  each  transaction,  and  map  it  to  a  shard\nusing  a  deterministic  function  (e.g.  taking  the  MSBs  of\nthe  hash).  This  method  relies  on  the  natural  distribution\nof  the  SHA-256  value  of  each  transaction.  However,\nCoord A\nShard\nA,0\nShard\nA,1\nShard\nB,0\nShard\nB,1\nCoord B\nFigure 3. Two connected Ostraka nodes, with intra-node connections\nthis would allow an attacker to cheaply form transactions\nthat  would  all  be  assigned  to  the  sameNSon  all  nodes.\nThe  processing  speed  of  all  nodes  would  then  be1/`\n(for`NSs),  achieving  DoS.  We  further  analyzed  DoS\nsusceptibility in Section 5.2.\nTo prevent such attacks, each node generates a random\nsalt  upon  initialization.  We  use  the  salt  and  apply  it\nto  each  transactions  with  an  additional  hash  as  follows:\nNewTxHash=SHA-256(TxHash||salt).  By  applying\na deterministic function to theNewTxHash, we distinctly\nmap a transaction to aNS, Outputs in the UTXO set are\nstored with the originalTxHash, while theNewTxHash\nis used internally to distribute transaction betweenNSs.\nThe  coordinator  publishes  the  chosen  salt  to  itsNSs\nand remote nodes. Thus, peers know theNewTxHashfor\nthe  specific  salt  of  the  peer,  and  only  sends  transactions\nrelevant to the requestingNS’sShardID. This way network\nbandwidth  is  distributed  among  theNSs  and  eachNS\nreceives  only  transactions  it  requires.  DirectNStoNS\ncommunication between nodes avoids bottlenecks.\nNote.Routing all transactions through the coordinator\nwould  allow  us  to  keep  the  salts  secret,  making  DoS\nattacks harder. But as expected, our experiments show that\nwith this design the coordinator becomes a bottleneck.\n4.3.  Operation\nWe  proceed  to  describe  networking  and  Ostraka’s\ndistributed block validation.\nEstablishing connections.Nodes connect to each other\naccording  to  the  system’s  topology  rules  (e.g.,  several\nrandom  peers  in  Bitcoin).  When  the  rules  indicate  that\nnodeAshould connect with nodeB, the two coordinators\nconnect, and allNSs of nodeAconnect to allNSs of node\nB. An example is presented in Fig 3\nBlock  validation.When a node receives a new block,\nit  sends  an  INVENTORYmessage  to  its  peers,  informing\nthem that a new block has been produced. The receiving\ncoordinator informs itsNSs of the new block hash and the\npeer who has it. EachNSrequests the relevant transactions\nfrom all theNSs of the peer. It sends the peerNSs its local\nShardIDand the block hash it is interested in. EachNSof\nthe sending node iterates over the transactions associated\nwith the block hash and calculates theNewTxHashusing\nthe salt. The sendingNSsends the requester only relevant\ntransactions.\nBlock  validation  comprises  block  header  validation,\nwhere most operations are performed inO(1), and trans-\naction  validation,  where  operations  areO(n)(nis  the\nnumber  of  transactions  in  the  block).  Block  header  val-\nidation  is  performed  by  the  coordinator.  It  checks  for\nduplicates,PoW, correct reference hash, etc.\nThe  exception  is  Merkle  root  validation.  The  coor-\ndinator  performs  Merkle  root  validation  which  is  linear",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "inn. First,NSs calculate the hashes of their transactions,\nthe  leaves  of  the  Merkle  tree,  and  send  them  to  the\ncoordinator.  On  a  node  with`NSs  and  a  block  withn\ntransactions, eachNSis performingn/`hash operations.\nThe coordinator lexicographically sorts the transactions by\nhash and then calculates the remainingnhashes to build\nthe  root.  This  process  could  in  principle  be  delegated  to\nNSs by replacing the Merkle tree with an accumulator [7],\n[8], but their group operations result in performance that\nis significantly worse than the Merkle tree calculation.\nNSs perform their part of block validation concurrently\nwith  the  coordinator.  The  coordinator  awaits  approval\nfrom  allNSs  before  adding  the  current  block  to  the\nchain.  If  at  any  point  one  of  theNSs  comes  across  an\nillegal transaction, it sends a BADBLOCKmessage to the\ncoordinator, who then discards the block.\nFig. 4 summarizes the steps of block propagation and\nvalidation. To validate a transaction, aNSmust first obtain\nall  the  required  information.  ANSonly  has  its  share  of\nUTXOs  in  the  UTXO  set.  It  constructs  a  list  of  missing\noutputs  to  request  from  each  siblingNSby  using  the\nTxHash,  the  salt,  and  theShardID.  Requests  to  each\nNSare sent in a batch. Upon request, eachNSsends the\ntransaction output to the requester.\nOnce  an  output  has  been  requested,  it  is  marked  as\nspent.  Multiple  requests  for  the  same  output  indicate  a\ndouble-spend attempt, and will thus trigger a BADBLOCK\nmessage to the coordinator. Once it receives all transaction\noutputs,  theNSproceeds  to  validate  the  scripts.  These\nchecks include:\n•Equal   sum:   For   each   transaction,   the   aggregate\namount of inputs is at least as high as the outputs.\n•No  double  spends:  Each  input  references  an  output\nthat was produced but not spent.\n•Authorization:  Each  input  complies  with  the  spend-\ning condition of the output it consumes.\nOther operations.Other inter-node operations are eas-\nily implemented in Ostraka. Peers can request transaction\ndirectly fromNSs, and block headers from the coordinator.\nOne  special  case  is  that  of  a  reorg.  A  reorg  happens\nwhen  a  node  needs  to  switch  the  chain  it  follows.  The\ncoordinator andNSs must roll back to a state of a previous\nblock, then update it to the longest chain.\nA reorg is performed as follows: First, the coordinator\nsends  the  hashes  of  blocks  to  roll  back,  as  well  as  the\nhashes  of  the  new  blocks.  EachNSfetches  the  spent\noutputs records of the rolled-back block from the database.\nEachNSadds  the  spent  outputs  of  each  transaction  in\nthe  block  to  the  UTXO-shard.  Next,  it  removes  all  out-\nputs  created  by  transactions  in  the  blocks-shard  from\nthe  UTXO-shard.  No  communication  is  required  among\ntheNSs  during  the  rollback,  and  it  can  thus  be  quickly\nresolved.\n5.  Security\nOstraka can be used in conjunction with many consen-\nsus  protocols  (e.g.,  [20],  [24],  [25],  [32],  [38]).  We  thus\nneed  to  prove  that  a  system  using  Ostraka  is  at  least  as\nsecure as a system using a unified node.\nWe start by showing that Ostraka behaves as a unified\nnode  (§5.1).  Beyond  functionality,  blockchain  protocols\nrely  on  propagation  time  to  maintain  security.  Therefore\nA:CoordA:Shard0A:Shard1B:CoordB:Shard0B:Shard1\nInv\nInv\nInv\nGetData(Block)\nTransactions\nGetData(Block)\nTransactions\nTX Hashes\nTX Hashes\nTX Outputs request\nTX Outputs\nBlockDone\nBlockDone\nFigure 4. Ostraka block transmission and validation messages.\nwe also show that Ostraka’s design does not enable attacks\non  node  processing  time.  We  show  how  individual-node\nshuffling prevents an adversary from affecting macro sys-\ntem performance (§5.2).\n5.1.  Functional  Indistinguishability\nBlockchain  systems  typically  [20],  [25],  [29],  [37]\nform blocks that are ordered such that each transaction fol-\nlows transactions it depends on. We call this atopological-\norder System.\nIn  contrast,  Ostraka  is  agnostic  the  internal  order.\nWe  call  such  a  system  anunordered  system.  Of  course,\ntopologically  ordered  blocks  may  be  invalid  in  a  system\nthat  expects  lexicographically  ordered  blocks,  and  vice\nversa. The Ostraka algorithm would except a block created\nby Bitcoin miners, but not every out-of-order block, would\nbe  accepted  in  Bitcoin  without  changes  to  the  validation\nrules.  We  thus  need  to  show  that  anysetof  transactions\ncan be processed as a legal block in a topological system\nif  and  only  if  they  can  be  processed  as  a  legal  block\nin  the  unordered  system.  We  leave  it  for  future  work  to\nexplore  if  Ostraka  can  be  integrated  with  Bitcoin  as  it\nexists  today.  As  the  resulting  Merkle  root  depends  on\ntransaction  ordering,  this  might  not  be  possible  without\na hard fork.\nWe  show  that  an  unordered  system  is  functionally\nindistinguishable from a Topological-order system.\nFrom topological to unordered systems.Most stages\nof block validation (cf.§4.3) like signature andPoWver-\nification are agnostic to transaction order. Two exceptions\nare the Merkle tree calculation and transaction dependency\nchecks.\nMerkle  tree  calculation  depends  on  the  transaction\norder, but the choice of the order does not matter as long\nas  all  nodes  calculate  it  consistently.  For  this  purpose,\nOstraka orders transactions lexicographically, according to\ntheirTxHash.\nIt  remains  to  show  that  anysetof  transactions  can\nbe  processed  as  a  legal  block  in  a  topological  system  if\nand only if they can be processed as a legal block in the\nunordered system.\nTo  formally  state  this  claim  we  first  specify  the  two\nblock-validation  algorithms.  Both  take  a  UTXO  set  and\na set of transactions and return either the updated UTXO\nset or⊥if the transactions cannot form a legal block.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "Algorithm  1:TopologicalA\nT\nInput   :Set of transactionsT,UTXO_set\nOutput:NewUTXO_setor⊥\n1(t\n1\n,t\n2\n,...,t\nk\n)←Tsorted in topological order\n2foreachTX←t\n1\n,t\n2\n,...,t\nk\ndo\n3foreachRefOut in TXdo\n4ifRefOut6∈UTXO_setthen\n5return⊥\n6else\n7UTXO_set←UTXO_set\\{RefOut}\n8foreachTXout in TXdo\n9UTXO_set←UTXO_set∪{TXout}\n10Validate TX\n11returnUTXO_set\nThe  topological-order  system  algorithm  denotedA\nT\n,\nis   shown   in   Algorithm   1.   The   algorithm   receives\naUTXO_setand the set of transactionsT. The algorithm\nfirst sortsTtopologically and then processes the transac-\ntions  in  order.  It  is  important  to  note  that  the  setTcan\nalways be ordered topologically: cycles between transac-\ntions cannot form since the references are by transaction\nhash.  Assuming  SHA-256  can  be  modeled  as  a  random\noracle,  Harris  [23]  shows  that  for  a  space  of2\nκ\n,  the\nexpected  number  of  steps  to  find  a  cycle  is\n1\n4\n√\n2π2\nκ\n,\ntherefore an adversary cannot find such a cycle except with\nnegligible  probability  in  the  hash  output  size.  Therefore\nthe sorting algorithm is well defined.\nThe algorithm returns⊥if at some point it encounters\na  transaction  whose  input  is  in  not  in  theUTXO_set.\nFor each transaction, the operationValitates TX(line 10),\ncovers all additional transaction validation steps after the\nreferenced outputs were found, e.g., script validation, cor-\nrect sum etc. IfValidate TXfails, it returns⊥.\nThe   unordered   system   algorithm   denotedA\nU\n,   is\nshown  in  Algorithm  2.  Unlike  AlgorithmA\nT\n,  inA\nU\ntransactions are not ordered. All outputs are first added to\ntheUTXO_set,  then  the  algorithm  processes  the  trans-\nactions sequentially in an arbitrary order. Other than that,\nthe operation is similar toA\nT\n.\nAlgorithm  2:Unordered (A\nU\n)\nInput   :Set of transactionsT,UTXO_set\nOutput:NewUTXO_setor⊥\n1foreachTX∈Tdo\n2foreachTXout in TXdo\n3UTXO_set←UTXO_set∪{TXout}\n4foreachTX∈Tdo\n5foreachRefOut by TXdo\n6ifRefOut6∈UTXO_setthen\n7return⊥\n8else\n9UTXO_set←UTXO_set\\{RefOut}\n10Validate TX\n11returnUTXO_set\nWe show that AlgorithmsA\nT\nandA\nU\nare functionally\nindistinguishable.\nLemma 1.Given the sameUTXO_setand set of trans-\nactionsT,A\nT\nandA\nU\nreturn the same value.\nWe  prove  the  lemma  by  showing  thatA\nT\nreturns⊥\nif and only ifA\nU\nreturns⊥:\nProof.We prove in both directions.\nA\nT\n→ A\nU\n.We  first  show  that  ifA\nT\nrejects  an  input\ntuple(T,UTXO_set)thenA\nU\nalso rejects this input.\nIfA\nT\nreturns⊥, there exists some transactionTX\ni\n∈\nT, at indexi, and an input inTX\ni\n, referencing an UTXO\nRefOut6∈UTXO_set,  produced  by  an  outputTXout.\nThis can be a result of three cases, and we show thatA\nU\nrejects as well.\n1)  The  UTXO  is  not  in  theUTXO_setand  is  not  pro-\nduced  by  any  transaction  precedingTX\ni\n:  There  can  be\nno  transaction  succeedingTX\ni\nwhich  producesTX\nout\nas  it  contradicts  the  topological  order,  thus,  there  is  not\nanytransaction  producing  outputTX\noutinT.  Upon\nprocessingTX\ni\n,A\nU\nreturn⊥(Algorithm 2 line 7).\n2)  The UTXO is not in theUTXO_setand is produced\nby  some  transactionTX\nk\n,  precedingTX\ni\nbut  consumed\nby  some  transactionTX\nj\n,  succeedingTX\nk\nbut  preceding\nTX\ni\n: InA\nU\n,TX\noutis added to theUTXO_setin line 3,\nA\nU\nprocesses  eitherTX\nj\norTX\ni\nfirst.  Without  loss  of\ngenerality,TX\ni\nis  processed  first.  Upon  processingTX\nj\n,\nA\nU\nwould  not  find  UTXORef\nOutin  theUTXO_set\nand return⊥(Algorithm 2 line 7).\n3)  The UTXO is in theUTXO_setand it is consumed by\nsome transactionTX\nj\n, precedingTX\ni\n: Similarly to the pre-\nvious case, except now the UTXO is in theUTXO_set.\nA\nU\n→ A\nT\n.IfA\nU\nreturns⊥,  there  exists  some  trans-\nactionTX\ni\n∈T, and an inputRef\nOutinTX\ni\n, referencing\nan UTXORefOut6∈UTXO_setproduced by an output\nTXout. This can also be a result of three cases, and we\nshow thatA\nT\nrejects as well.\n1)  The  UTXO  is  not  in  theUTXO_setand  is  not  pro-\nduced byanytransaction inT: InA\nT\n, the UTXO is not\nproduced byanytransaction inTand specifically, by any\ntransaction precedingTX\ni\nin the topological order ofTin\nA\nT\n. ThusA\nT\nreturn⊥.\n2)  The  UTXO  is  not  in  theUTXO_setand  is  pro-\nduced  by  some  transactionTX\nk\n,  but  is  also  consumed\nby some transactionTX\nj\n: In the topological order ofT,\nbothTX\nj\nandTX\ni\nmust  succeedTX\nk\n.  TransactionTX\nk\nis  processed  first  and  addsRef\nOutto  theUTXO_set.\nWithout  loss  of  generality,TX\ni\nis  processed  first  and\nremovesRef\nOutfrom theUTXO_set. Upon processing\nTX\nj\n, outputRefOutis not in theUTXO_setand system\nTreturn⊥(Algorithm 1 line 5).\n3)  The  output  is  in  theUTXO_setand  it  is  also  con-\nsumed  by  some  transactionTX\nj\n:  Similar  to  the  second\ncase, butRef\nOutis in theUTXO_set.\nTherefore,  given  the  sameUTXO_set,  and  transac-\ntionsT,A\nT\nreturn⊥if and only ifA\nU\nreturns⊥. Both\nalgorithms add the same set ofoutputsto theUTXO_set,\nand  remove  the  same  set  ofutxos.  No  output  can  be\nadded to theUTXO_settwice, and any attempt to remove\nan  output  twice  results  in⊥.  Thus  the  newUTXO_set\nreturned by each algorithm is identical.\nFrom unified node to distributed node.We now show\nthat  Ostraka  is  functionally  indistinguishable  fromA\nU\n.\nThe  distributed  algorithm  of  Ostraka,  denotedA\nO\n,  is\nshown  in  Algorithms  3–4.  A  Coordinator  algorithm  re-\nceives theUTXO_setand transaction setTas input. The\nCoordinator algorithm first distributes theUTXO_setand\ntransactions among`NSs.NSs begin validation by adding\nall  produced  outputs  in  their  set  of  transactionsT\ni\n,  to\ntheir  localUTXO_shard.  They  proceed  by  requesting\nmissing  output  information  from  the  relevant  siblings.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "Algorithm  3:Ostraka,A\nO\nInput   :Set of transactionsT,UTXO_set\nOutput:NewUTXO_setor⊥\n1DistributeTintoT\n1\n...T\n`\nandUTXO_setintoUTXO_set\n1\n...UTXO_set\n`\n2for  allNSs,S\ni\n←S\n1\n...S\n`\ndo  in  parallel\n3Send (T\ni\n,UTXO_set\ni\n) toNSS\ni\n4forNSs,S\ni\n←S\n1\n...S\n`\ndo\n5ReceiveUTXO_set\ni\n6ifReceived⊥then\n7Return⊥\n8else\n9UTXO_set←UTXO_set∪{UTXO_set\ni\n}\n10ReturnUTXO_set\nAlgorithm  4:Ostraka shard algorithm\nInput   :Set of transactionsT\ni\n,UTXO_shard\nOutput:NewUTXO_setor⊥\n1Add all produced outputs inT\ni\nto theUTXO_shard\n/\n*\nRequest TX outputs\n*\n/\n2Request all referenced outputs inT\ni\nfrom siblings\n3Receive requests for missing outputs\n4foreachRequestedOutdo\n5ifRequestedOut6∈UTXO_shardthen\n6Send⊥to Coordinator\n7else\n8UTXO_shard←UTXO_shard\\{RequestedOut}\n/\n*\nReceive TX outputs\n*\n/\n9Send requested outputs to requesters\n10Receive requested outputs and add toUTXO_shard\n/\n*\nTransaction validation\n*\n/\n11foreachTX←t\n1\n,t\n2\n,...,t\nk\n∈T\ni\ndo\n12foreachRefOut by TXdo\n13ifRefOut6∈UTXO_setthen\n14Send⊥to Coordinator\n15else\n16UTXO_shard←UTXO_shard\\{RefOut}\n17Validate TX\n18returnUTXO_shard\nOnce  they  receive  the  information,  eachNSproceeds  to\nvalidate  its  set  of  transactions.  If  some  validation  stage\nfails theNSsends⊥, otherwise theNSsends its updated\nUTXO_shard. If allNSs returned updated sets, the coor-\ndinator returns their union, otherwise⊥. The pseudo-code\nmakes  a  slight  simplification  of  Ostraka  that  nonetheless\nrepresents its logical behavior.\nWe show that an unordered-system algorithm and Os-\ntraka are functionally indistinguishable.\nLemma 2.Given the sameUTXO_setand set of trans-\nactionsT,A\nU\nandA\nO\nreturn the same value.\nAs before, we prove the lemma by showing thatA\nU\nreturns⊥if and only ifA\nO\nreturns⊥:\nProof.We prove in both directions.\nA\nU\n→ A\nO\n.We  first  show  that  ifA\nU\nrejects  an\ninput(T,UTXO_set)thenA\nO\nalso rejects this input.\nIfA\nU\nreturns⊥, there exists some transactionTX\ni\n∈\nT, and an input inTX\ni\n, referencing an UTXORef\nOut6∈\nUTXO_set, produced by an outputTXout.\n1)  The  UTXO  is  not  in  theUTXO_setand  is  not  pro-\nduced byanytransaction inT: The UTXO is not produced\nby any transaction inT, thus noNSreceives a transaction\nproducingRef\nOutinA\nO\n. WLOG, someNSS\ni\nreceives\nTX\ni\n.  IfRef\nOutreferences  an  output  assigned  to  aNS\nS\nj\n, when receiving request forRefOut,S\nj\ndoes not have\nRefOutin itsUTXO_shardand send⊥(Alg. 4 line 6).\nIfRef\nOutreferences a transaction assigned toS\ni\n, when\nprocessing transactions,RefOutis not inUTXO_shard\nofS\ni\n, andS\ni\nsends⊥(line 14).\n2)  The UTXO is not in theUTXO_setand is produced\nby some transactionTX\nk\n, but is also consumed by some\ntransactionTX\nj\n: WLOG,TX\noutis produced by a trans-\nactions  assigned  to  someNSS\nk\n,  and  is  added  to  its\nUTXO_shard(Algorithm  4  line  1).  If  both  consuming\ntransactionsTX\nj\nandTX\ni\n,  are  assigned  to  siblingNSs,\nthen  upon  receiving  all  requests  from  siblingNSs,S\nk\nprocesses  one  of  the  requests  first  and  removeRef\nOut\nfrom  itUTXO_shard.  Upon  processing  the  second  re-\nquest,Ref\nOutis  not  inUTXO_shard,  andS\nk\nsends\n⊥(Algorithm  4  line  6).  IfTX\nj\nis  assigned  to  a  sibling\nNS, andTX\ni\nis assigned toS\nk\n,Ref\nOutis removed from\nUTXO_shardafter all outputs are requested. Upon pro-\ncessingTX\ni\n,S\nk\ndoes not haveRef\nOutinUTXO_shard,\nand  send⊥(Algorithm  4  line  14).  If  bothTX\ni\nand\nTX\nj\nare  assigned  toS\nk\n,  one  of  them  is  be  processed\nfirst  and  removesRef\nOutfrom  theUTXO_shard,  and\nupon  processing  the  second  one,RefOutis  not  be  in\nUTXO_shardandS\nk\nsends⊥(Algorithm 4 line 14).\n3)  The  UTXO  is  in  theUTXO_setand  it  is  also  con-\nsumed  by  some  transactionTX\nj\n:  This  is  similar  to  the\nsecond case, butTX\noutis in theUTXO_shardofS\nk\n.\nA\nO\n→ A\nU\n.IfA\nO\nreturns⊥and  rejects,  then  some\nNSS\ni\nsends⊥to the Coordinator. This can be a result of\nseveral cases, and we show thatA\nU\nrejects as well.\nFirst,  notice  that  theUTXO_setand  transactionsT\nare distributed deterministically. There can be no twoNSs\nproducing the sameTX\nout, and similarly,RefOutcannot\nreside in two UTXO-shards.\n1)  When  processing  requests  for  outputs,  there  is  some\nUTXORef\nOut6∈UTXO_shard\na)  The UTXO is not in theUTXO_shard, is not produced\nby  any  transaction  inT\ni\n,  and  is  requested  by  some\nsiblingNSS\nj\n. Then there exists some transactionTX\nj\n∈Tconsuming  UTXO.  AsUTXO_setis  distributed\ndeterministically, there can be no otherUTXO_shard\nother thanUTXO_set\ni\nwhere the UTXO might reside.\nTherefore, it is not in theUTXO_setofA\nU\n, and upon\nprocessingTX\nj\n,A\nU\nreturns⊥(Algorithm 2 line 7).\nb)  The  UTXO  is  not  in  theUTXO_shard,  is  produced\nby  some  transactionsTX\nk\n,  and  is  requested  by  some\ntwo  siblingNSS\nj\n,S\nl\n.  Then  there  exist  some  two\ntransactionTX\nj\nandTX\nj\n∈T,  consuming  the  same\nUTXO.  WLOG,  inA\nU\n,TX\nj\nis  processed  first  and\nconsumes the UTXO. Upon processingTX\nl\n,A\nU\nreturns\n⊥(Algorithm 2 line 7).\n2)  When processing transactions, there exists some trans-\nactionTX\ni\n∈T\ni\n,  and  an  input  inTX\ni\n,  referencing  an\nUTXORef\nOut6∈UTXO_shard.\na)  The  UTXO  is  in  theUTXO_shardand  is  requested\nby some siblingNSS\nj\n: There is some other transaction\nTX\nj\n∈Tconsuming the UTXO. WLOG, inA\nU\nTX\nj\nis\nprocessed  first,  and  upon  processingTX\ni\n,A\nU\nreturns\n⊥(Algorithm 2 line 7).\nb)  The UTXO is not in theUTXO_shard, is produced by\nsome transactionTX\nk\n, and is requested by some sibling\nNSS\nj\n.  The  case  is  similar  to  the  previous  after  all\noutputs are added to theUTXO_setin AlgorithmA\nU\n(Algorithm 2 line 3).\nc)  The  cases  enumerated  forA\nU\nare  the  same  if  all\ntransactions  are  assigned  to  a  singleNS,  and  are  not\nrequested by any sibling.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "Therefore,  given  the  sameUTXO_set,  and  transac-\ntionsT,A\nU\nreturn⊥if and only ifA\nO\nreturns⊥.\nWe  can  now  show  that  a  classical  topological-order\nsystem  with  a  unified  node  is  functionally  indistinguish-\nable from an Ostraka node.\nTheorem 1.Given the sameUTXO_setand set of trans-\nactionsT,  a  topologically  ordered  system  and  Ostraka,\nare functionally indistinguishable.\nThe proof follows directly from Lemmas 1 and 2.\n5.2.  Processing  Time\nWe have shown the systems are functionally indistin-\nguishable; it remains to show that an attacker cannot affect\nblock  processing  time  in  Ostraka  more  than  it  could  in\na  unified  node.  Limiting  processing  time  is  important  to\nprevent an attacker from strangling the system, creating a\nmajor slowdown and loss of throughput.\nTargeting  a  singleNS.In  a  unified  node,  block  pro-\ncessing time is (roughly) the sum of processing all trans-\nactions.  In  Ostraka  it  is  the  time  it  takes  the  slowestNS\nto process its transactions.\nIf  transaction  distribution  is  identical  for  all  nodes,\nthen an attacker can cheaply generate transactions that are\nall  placed  in  the  sameNS.  For  example,  an  attacker  can\ncreate  a  block  where  all  transactions  start  with  multiple\nzeros  in  the  MSB.  In  general,  to  create  a  transaction\nstarting  with`zeros,  the  attacker  needs2\n`\nattempts  in\nexpectation.  For  a  block  ofLtransactions,  a  total  of\nL·2\n`\nattempts are required in expectation. Note that this\nanalysis applies to any index function.\nWe denote byDfthe distribution function applied to\nTxHashto determine theNSresponsible for it. For`NSs,\ntheDfresults in a number from1to`.\nIn Ostraka, we use a salt to redistributed transactions.\nEach node is aware of the salt values of its neighbors. As\nconnections are performed randomly, it is unlikely a node\nwill obtain the values of all nodes in the system. Yet, even\nif one obtains allsalts, attack difficulty rises exponentially\nwith the number of targeted nodes.\nAssume   the   attacker   knows   the   salt   values   of\nkpeers,S\n1\n..S\nk\n.   We   define   the   distribution   func-\ntionDffor   a   valuexand   a   salt   valueS\ni\nto   be\nDf(x,S\ni\n) =SHA-256(x||S\ni\n).  The  first  transaction  the\nattacker  creates  will  result  in  some  valuev\ni\nfor  each  of\nthekpeers.  The  attacker  now  needs  every  subsequent\ntransaction  to  result  in  the  same  valuev\ni\nfor  each  peer.\nThe  attacker  thus  needs  to  find  aTxHashsuch  that:\n∀1≤i≤k:Df(TxHash,S\ni\n) =v\ni\n.  The  probability  of\nfinding such value, if the attacker tries to target one of`\nNSs is(1/`)\nk\n. To cause an`times slowdown forkpeers,\nrequires`\nk\nattempts per transaction in expectation.\nIt  quickly  becomes  infeasible  to  affect  even  a  small\npercentage of the system. For example, creating one trans-\naction affecting the validation time of 100 nodes requires\nthe hashing rate of Bitcoin for 800,000 years [11].\nCreating   a   single   large   transaction.Creating   an\nabnormally  large  single  transaction  occupying  an  entire\nblock can also cause a significant slowdown. In Ostraka,\neach  transaction  is  processed  by  a  singleNS.  A  huge\ntransaction  that  occupies  an  entire  block,  would  annul\nthe  benefits  of  the  distributed  architecture.  Adding  salt\ndoes  not  help  mitigate  this  attack  vector.  In  Ostraka,  we\nmitigate this attack by adding a transaction size limit. The\nlimit  should  be  proportional  to  the  block  size,  to  allow\neven  distribution  of  transactions  across  multipleNSs.  In\ngeneral, a user can make any payment with only two types\nof transactions. Ajointransaction of two outputs into one,\nor aforktransaction of a single output into two.\n6.  Evaluation\nThe  throughput  of  a  blockchain  depends  ont\nhop\n:  the\ntime  it  takes  for  a  single  node  to  receive  and  process\nthe  block.t\nhop\ndepends  on  both  block  transmission  time\nBttand block processing timeBpt. Each node validates\nthe  block  before  it  propagates  it  further,  to  prevent  DoS\nattacks on the system [15], [17].\nWe present the measurements and theoretical analysis\noft\nhop\n.  We  begin  by  describing  our  evaluation  method-\nology  (§6.1),  and  proceed  to  measure  how  the  number\nofNSs  and  the  node  bandwidth  affects  thet\nhop\n(§6.2).\nSimilarly, we analyze and present the effect of intra-node\nbandwidth  (§6.3).  We  conclude  with  a  network  simula-\ntion (§6.4).\n6.1.  Methodology\nWe have implemented the necessary elements for per-\nformance  evaluation  based  on  the  existingbtcdBitcoin\nclient  [12].  We  implement  the  intra-node  and  inter-node\nnetworking,  as  well  as  our  distributed  block  validation\nprotocol. In total, we have added  10K LoC in Go and an\nadditional 2K LoC of Python scripts for testing and simu-\nlation. Our implementation is available as open source [3].\nWe measure block sending time between two Ostraka\nnodes  and  block  processing  time  on  the  receiving  node.\nWe  used  ac4.largeEC2  instance  (2  vCPUs  4GB\nRAM) for eachNSand ac4.xlargeinstance (4 vCPUs\n8GB  RAM)  for  the  coordinator  of  each  node.  A  block\ncomprises  transactions  with  two  inputs  and  two  outputs,\ni.e., about 250Bytes, which is the median Bitcoin transac-\ntion size. Each single EC2NScan process approximately\n1700Tx/sec.  Each  block  undergoes  full  validation,  i.e.\nwe  do  not  assume  some  of  the  transactions  have  been\npreviously known to the receiving node, and have already\nbeen validated. Transaction dependency within the block\ndoes not affect processing time, as transaction validation\nis performed in distributed, achievable by our block vali-\ndation algorithm. Each figure with error bars presents the\nminimum,  maximum,  and  average  measurements.  Theo-\nretical analysis is presented where applicable.\n6.2.  Block  time  and  node  capacity\nTotal block timet\nhop\ndepends on both block transmis-\nsion timeBttand block processing timeBpt. We begin\nby isolating and evaluating theBpt. We measureBptof\nvarious  configurations,  without  restriction  on  intra-node\nor inter-node bandwidth.\nThe  number  of  transactions  in  a  block  is  the  block\nsize, denotedBSize, divided by the mean transaction size,\ndenotedTxSize.NS\ntps\nis  the  number  of  transactions  per\nsecond  aNScan  process.Bptis  thus  the  number  of\ntransactions  in  a  block  divided  by  allNSs  combined\nprocessing rate :Bpt=\nBSize\nTxSize\n·\n1\nNS\ntps\n·#NSs\n.\nWe  measure  theBptwith  an  increasing  number  of\ntransactions. We repeat this experiment varying the num-\nber  ofNSs  from  1  to  32.  We  estimate  the  number  of\ntransactions  each  configuration  processes  in  ten  seconds",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "0k\n50k\n100k\n150k\n200k\n250k\n300k\n350k\n 0 5 10 15 20 25 30 35\nMax block size in 10 seconds [TX]\nShards\n160 Mbit/s\n160 Mbit/s theory\n80 Mbit/s\n80 Mbit/s theory\n40 Mbit/s\n40 Mbit/s theory\nFigure  5.  Theoretical  and  measured  capacity,\nwith variable available network bandwidth\n0k\n100k\n200k\n300k\n400k\n500k\n600k\n 0 2 4 6 8 10 12 14 16\nMax block size in 30 seconds [TX]\nShards\n5 Mbit/s\n5 Mbit/s Theory\n1 Mbit/s\n1 Mbit/s Theory\n256 Kbit/s\n256 Kbit/s Theory\nFigure  6.  Theoretical  and  measured  capacity\nwith limited intra-node bandwidth\n 0\n 2000\n 4000\n 6000\n 8000\n 10000\n 12000\n 0 2 4 6 8 10 12 14 16\nNetwork Throughput [TX/s]\nOstraka Shards\n80 Mbit/s\n160 Mbit/s\nFigure  7.  Bitcoin-NG  simulation  with  varying\nbandwidth andNSs per node\nfrom  a  linear  regression.  We  find  the  maximum  block\nsize  a  node  is  capable  of  processing  within  the  limit.\nTen  seconds  was  chosen  arbitrarily  to  be  an  upper  limit\non the processing time of each node. The twoUnlimited\nplots of Figure 5 show our measurements. The theoretical\nunlimited  bandwidth  line  represents  the  best  achievable\nresults,  multiplying  the  processing  capacity  of  a  single\nNSby  a  factor.  The  error  bars  represent  our  actual  mea-\nsurements. We observe that Ostraka achieves near-optimal\nimprovement as we increase the number ofNSs.\nNext,  we  add  the  effect  of  block  transmission  time\n(Btt)  ont\nhop\n.Bttis  determined  by  network  latency\nand bandwidth. The  bandwidth, denotedBW, is the  total\nnetwork  bandwidth  available  to  all  theNSs  combined.\nWe focus on network bandwidth as it is more significant\nthan the latency for large blocks [15]. We define a node’s\ncapacityas the number of total transactions per second a\nnode can receive and processes. The capacity is thus the\ntotal number of transactions in a block\nBSize\nTxSize\n, divided by\nt\nhop\n.\nCapacity\n[\nTX\nsec\n]\n=\n1\nTxSize\nBW\n+\n(\n1\nNS\ntps\n·#NSs\n)\n(1)\nBy adding moreNSs we expectt\nhop\nto approachBtt,\nasBptapproaches 0. We measure capacity when both the\nnetwork bandwidth and the number ofNSs vary. We mea-\nsure with configurations of1,2,4,8,16and32NSs, as well\nas total bandwidth of40and160Mbit/sfor the combined\nnode.  As  before,  we  estimate  capacity  by  evaluating  the\nlinear regression at ten seconds.\nFig  5  shows  capacity  measurements  as  well  as  the-\noretical  analysis.  Error  bars  represent  our  measurements\nfor each configuration of bandwidth andNSs. The dashed\nlines represent our theoretical analysis as shown in equa-\ntion  (1).  Our  measurements  match  our  theoretical  evalu-\nation: as we increase the number ofNSs, the capacity of\nthe node increases, yet limited by the available bandwidth.\n6.3.  Intra-node  network\nPart of the Ostraka protocol is requesting and sending\noutputs betweenNSs. When intra-node bandwidth is high,\ntime  to  send  requests  and  later  to  send  information  to\nrequestingNSs  is  not  significant.  Ostraka  can  be  imple-\nmented to run on a single system, whereNSs communicate\nover Unix sockets, with much higher bandwidth. However,\nwe wanted to also examine the case of several distantNSs\nwith limited bandwidth between them. Limiting the intra-\nnode bandwidth would affect theBpt.\nForntransactions per block and`NSs, eachNShas\nin  expectation\nn\n`\n`−1\n`\noutputs  it  needs  to  request  from  its\nsiblings. This is also the number of outputs it is required\nto send.\nIt  is  important  to  note  that  although  the  number  of\nsiblings eachNSmust contact increases with the number\nofNSs,  the  overall  number  of  outputs  requested/sent  per\nNSdecreases.  Thus,  intra-node  communication  benefits\nand decreases linearly as we add additionalNSs.\nWe  denote  byBW\nNS\nthe  intra-node  bandwidth  and\nbyTX\nout\n,  the  expected  size  required  for  sending  and\nreceiving outputs information per transaction.Bpt, when\naccounting for intra-node communication is thus:\nBpt=\nBSize\nTxSize\n·\n1\n#NSs\n·\n(\n1\nNS\ntps\n+\n#NSs−1\n#NSs\n·\nTX\nout\nBW\nNS\n)\nWe  measureBptwhile  restraining  intra-node  band-\nwidth  to5Mbit/s,1Mbit/s,256Kbit/sperNS.  Similarly  to\nprevious experiments, we estimate processing capacity by\nmeasuringBptfor  various  block  sizes.  Since  processing\ntime  is  higher,  we  look  at  30  seconds  for  our  linear\nregression.\nFor5Mbit/s, despite the limited bandwidth, the bene-\nfits of distributing transaction validation and storage out-\nweigh the limits of cross-NScommunication.\nFor256Kbit/sperNS,  we  observe  a  significant  dip\nin  performance  when  moving  from  a  singleNSto  two\nNSs.  This  is  the  result  of  sending  information  across\nNSs becoming dominant. Fig. 6 shows these effects. Our\ntheoretical  evaluation  falls  within  the  margin  of  error.\nWhen  intra-node  bandwidth  is  extremely  limited,  it  is\nmore beneficial to operate a singleNS.\n6.4.  Full  System  Simulation\nFinally,  to  assess  the  benefits  of  increasing  block\nvalidation  rate  on  a  blockchain  system,  we  take  as  an\nexample the Bitcoin-NG [20] protocol. We simulate 1,000\nnodes implemented with Ostraka instead of unified nodes\nas in the original paper. Each node is connected to 8 other\nnodes at random, similar to Bitcoin. We target 10 minutes\nbetween  leader  election  blocks  and  10  seconds  between\nmicroblocks, as Bitcoin-NG. We produce an event-driven\nsimulation, with identical node configurations, a network\ntopology similar to Bitcoin, and fixed bandwidth per node.\nFig. 7 shows the effect of adding additionalNSs to each\nnode. Network topology and properties strongly affect the\nprotocol’s  performance,  but  the  trend  is  clear.  Ostraka\nallows  the  system  to  achieve  an  order  of  magnitude  im-\nprovement in throughput.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "TABLE 1.  OSTRAKA COMPARED TO OTHER SYSTEMS\nOmniLedgerRapidChainOstraka\nSecurity25%33%50%\nCross-Shard TxBy Client\na\nBy leader\nb\nInternal\nRequired Nodeshundredshundredsany\nThroughput10k tx/s\nc\n7.3k tx/s\nd\n10k tx/s\ne\nDoS resilience884\na\nClient must be online.\nb\nAssuming an honest leader.\nc\n400 nodes.\nd\n1800 nodes, 12.5% adversary,\ne\n1000 nodes, with Bitcon-NG\nTable  1  summarizes  the  comparison  of  Ostraka  with\nBitcoin-NG,  OmniLedger,  and  RapidChain  (cf.§3).  The\ntable compares results as reported by the two papers. We\ncompare the adversarial percentage of the network the sys-\ntem is resilient against. In the case of Ostraka, we consider\nthe  Bitcoin-NGPoWsetup  we  used  in  our  simulation.\nUsing the Bitcoin-NG consensus algorithm, the system is\nresilient against a 49% adversary. OmniLedger and Rapid-\nChain  require  a  high  number  of  nodes  and  participants\nto  reach  high  throughput  and  good  security  guarantees.\nOstraka,  on  the  other  hand,  does  not  require  a  lower\nbound  on  the  number  of  nodes.  Deployed  in  democratic\nenvironments,  where  voting  power  is  distributed  equally\nacross  the  network,  Omniledger  and  RapidChain  outper-\nform Ostraka by sharding the bandwidth and the computa-\ntional resources. However, in systems whose voting power\nis  not  uniformly  distributed  (e.g.,  Bitcoin,  Ethereum),  it\nis  possible  to  apply  the  Ostraka  design  to  reach  high\nthroughput.\n7.  Conclusion\nWe   present   Ostraka,   an   architecture   for   scalable\nblockchain  nodes.  Ostraka  overcomes  the  security  and\nperformance limitations of previous solutions and achieves\nlinear  scaling  in  the  number  of  node-shards.  Our  experi-\nments reached a rate of400ktx/sec at the capacity of our\nexperimental  testbed.  Together  with  a  high-performance\nconsensus protocol, Ostraka can saturate network capacity.\nAcknowledgment\nThis  research  was  supported  by  the  Israel  Science\nFoundation  (grant  No.  1641/18),  the  Technion  Hiroshi\nFujiwara  cyber-security  research  center,  and  the  Israel\ncyber bureau.\nReferences\n[1]I.  Abraham,  D.  Malkhi,  K.  Nayak,  L.  Ren,  and  A.  Spiegelman,\n“Solidus:    An    incentive-compatible    cryptocurrency    based    on\npermissionless byzantine consensus,”CoRR, vol. abs/1612.02916,\n2016. [Online]. Available: http://arxiv.org/abs/1612.02916\n[2]M.   Al-Bassam,   A.   Sonnino,   S.   Bano,   D.   Hrycyszyn,   and\nG.  Danezis,  “Chainspace:  A  sharded  smart  contracts  platform,”\narXiv preprint arXiv:1708.03778, 2017.\n[3]amanusk,  “Ostraka  implementation,”  https://github.com/amanusk/\nbtcd-sharded. Accessed May 2020.\n[4]A.  M.  Antonopoulos,Mastering  Bitcoin:  unlocking  digital  cryp-\ntocurrencies.    ” O’Reilly Media, Inc.”, 2014.\n[5]L.  M.  Ausubel,  “The  failure  of  competition  in  the  credit  card\nmarket,”The American Economic Review, pp. 50–81, 1991.\n[6]V. Bagaria, S. Kannan, D. Tse, G. Fanti, and P. Viswanath, “Prism:\nDeconstructing  the  blockchain  to  approach  physical  limits,”  in\nProceedings  of  the  2019  ACM  SIGSAC  Conference  on  Computer\nand Communications Security.    ACM, 2019, pp. 585–602.\n[7]N. Bari\n ́\nc and B. Pfitzmann, “Collision-free accumulators and fail-\nstop signature schemes without trees,” inInternational Conference\non  the  Theory  and  Applications  of  Cryptographic  Techniques.\nSpringer, 1997, pp. 480–494.\n[8]J. Benaloh and M. De Mare, “One-way accumulators: A decentral-\nized  alternative  to  digital  signatures,”  inWorkshop  on  the  Theory\nand Application of of Cryptographic Techniques.    Springer, 1993.\n[9]Bitcoin wiki, “Bitcoin wiki,” en.bitcoin.it/wiki/Main\nPage.\n[10]   Blockchain.com,“Hashratedistribution,”https://\nwww.blockchain.com/en/pools.\n[11]   blockchain.com,  “Hash  rate,”  2019,  https://www.blockchain.com/\ncharts/hash-rate. Accessed March 2019.\n[12]   btcsuite,    “Open    Source    Bitcoin    Client    Software,”    https://\ngithub.com/btcsuite/btcd.\n[13]   C. Cachin, “Architecture of the hyperledger blockchain fabric,” in\nDCCL, 2016.\n[14]   Coin.dance,   “Coin   dance,”   2019,   https://coin.dance/nodes.   Ac-\ncessed March 2019.\n[15]   K. Croman, C. Decker, I. Eyal, A. E. Gencer, A. Juels, A. Kosba,\nA.  Miller,  P.  Saxena,  E.  Shi,  and  E.  G.  Sirer,  “On  Scaling  De-\ncentralized  Blockchains,”  inProc.  3rd  Workshop  on  Bitcoin  and\nBlockchain Research (BITCOIN 2016), 2016.\n[16]   DanielGoldman,“arewedecentralizedyet,”\nhttp://web.archive.org/web/20190613115644/https://\narewedecentralizedyet.com/.\n[17]   C.  Decker  and  R.  Wattenhofer,  “Information  propagation  in  the\nbitcoin network,” inP2P.    IEEE, 2013.\n[18]   T.  Dickerson,  P.  Gazzillo,  M.  Herlihy,  and  E.  Koskinen,  “Adding\nconcurrency to smart contracts,” inPODC.    ACM, 2017.\n[19]   ethernodes.org,   “The   ethereum   node   explorer,”   2019,   https://\nwww.ethernodes.org. Accessed March 2019.\n[20]   I. Eyal, A. E. Gencer, E. G. Sirer, and R. Van Renesse, “Bitcoin-\nNG: A scalable blockchain protocol,” inNSDI, 2016.\n[21]   A.  E.  Gencer,  S.  Basu,  I.  Eyal,  R.  van  Renesse,  and  E.  G.\nSirer, “Decentralization in Bitcoin and Ethereum Networks,”arXiv\npreprint arXiv:1801.03998, 2018.\n[22]   Y.  Gilad,  R.  Hemo,  S.  Micali,  G.  Vlachos,  and  N.  Zeldovich,\n“Algorand: Scaling byzantine agreements for cryptocurrencies,” in\nSOSP.    ACM, 2017.\n[23]   B. Harris, “Probability distributions related to random mappings,”\nThe Annals of Mathematical Statistics, pp. 1045–1062, 1960.\n[24]   A. Kiayias, A. Russell, B. David, and R. Oliynykov, “Ouroboros: A\nprovably secure proof-of-stake blockchain protocol,” inCRYPTO.\nSpringer, 2017.\n[25]   E.  K.  Kogias,  P.  Jovanovic,  N.  Gailly,  I.  Khoffi,  L.  Gasser,  and\nB. Ford, “Enhancing Bitcoin Security and Performance with Strong\nConsistency via Collective Signing,” inUSENIX Security, 2016.\n[26]   E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, and B. Ford,\n“Omniledger:  A  secure,  scale-out,  decentralized  ledger.”IACR\nCryptology ePrint Archive, vol. 2017, p. 406, 2017.\n[27]   Y. Kwon, J. Liu, M. Kim, D. Song, and Y. Kim, “Impossibility of\nfull decentralization in permissionless blockchains,”arXiv preprint\narXiv:1905.05158, 2019.\n[28]   L.  Luu,  V.  Narayanan,  C.  Zheng,  K.  Baweja,  S.  Gilbert,  and\nP.  Saxena,  “A  secure  sharding  protocol  for  open  blockchains,”  in\nCCS.    ACM, 2016.\n[29]   S.  Nakamoto,  “Bitcoin:  A  Peer-to-Peer  Electronic  Cash  System,”\nhttp://www.bitcoin.org/bitcoin.pdf, 2008.\n[30]   A. Narayanan, J. Bonneau, E. Felten, A. Miller, and S. Goldfeder,\n“Bitcoin and cryptocurrency technologies,” 2016.\n[31]   S.    Riksbank,    “The    Riksbanks    e-krona    project,    report    1,”\nhttps://www.riksbank.se/globalassets/media/rapporter/e-krona/\n2017/rapport\nekronauppdaterad170920eng.pdf, 2017.\n[32]   T. Rocket, “Snowflake to avalanche: A novel metastable consensus\nprotocol family for cryptocurrencies,” 2018.\n[33]   S. V. Scott and M. Zachariadis, “Origins and development of swift,\n1973–2009,”Business History, vol. 54, no. 3, pp. 462–482, 2012.\n[34]   SPFS, “SPFS,” https://www.cbr.ru/psystem/mes/, Accessed March\n2017.\n[35]   The   Ethereum   community,   “Ethereum   White   Paper,”   https://\ngithub.com/ethereum/wiki/wiki/White-Paper. Accessed May 2017.\n[36]   Visa   Inc.,   “Visa   Inc.   at   a   Glance,”   https://usa.visa.com/dam/\nVCOM/download/corporate/media/visa-fact-sheet-Jun2015.pdf.\nAccessed May 2017, Jun. 2015.\n[37]   G.  Wood,  “Ethereum  yellow  paper,”  2014.  [Online].  Available:\nhttps://ethereum.github.io/yellowpaper/paper.pdf\n[38]   M.  Yin,  D.  Malkhi,  M.  K.  Reiter,  G.  G.  Gueta,  and  I.  Abraham,\n“Hotstuff:  Bft  consensus  with  linearity  and  responsiveness,”  in\nPODC, 2019.\n[39]   M.  Zamani,  M.  Movahedi,  and  M.  Raykova,  “Rapidchain:  A  fast\nblockchain  protocol  via  full  sharding.”IACR  Cryptology  ePrint\nArchive, vol. 2018, p. 460, 2018.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Ostraka Secure Blockchain Scaling by Node Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "",
          "Author": "",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20200917012212Z",
          "ModDate": "D:20200917012212Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 10
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "189\nIEEE Network  January/February 2022\n0890-8044/22/$25.00 © 2022 IEEE\nAbstrAct\nThe  sixth-generation  (6G)  system  is  wide-\nly envisioned as a global network consisting of \npervasive devices that interact with each other. \nBesides exchanging information, these peer enti-\nties  also  share  heterogeneous  and  distributed  \nedge resources. Blockchain is a promising technol-\nogy to secure resource sharing in a peer-to-peer \nway. However, constrained by limited transaction \nthroughput, existing blockchain systems (e.g., Bit-\ncoin) cannot process numerous resource trans-\nactions concurrently produced in large-scale 6G \nnetworks. To cope with this issue, we propose a \nblockchain scaling scheme that combines Direct-\ned  Acyclic  Graph  (DAG)  with  sharding.  Our  \nsharding method divides blockchain transactions \ninto multiple mutually disjoint subsets maintained \nby different committees, which enables high-vol-\nume resource transactions to be processed and \nrecorded concurrently. Additionally, all commit-\ntees maintain a global DAG of blocks to resolve \nthe security degradation raised by the sharding \nmethod. Moreover, we put forth a computation \nefficient consensus algorithm by leveraging min-\ners’ computing power to improve resource utili-\nzation efficiency. Numerical results show that the \nproposed scheme achieves good performance in \nresource utilization efficiency.\nIntroductIon\nAs a new paradigm of wireless communication, \nthe sixth generation(6G) system is expected to \nprovide ubiquitous wireless coverage and enable \npowerful mobile applications, such as fully auton-\nomous vehicles, holographic telepresence and \ntelemedicine [1]. In order to realize these 6G-em-\npowered  applications,  mobile  nodes  need  to  \nconsume massive heterogeneous edge resourc-\nes, including computing power, wireless spec-\ntrum and cache capacity. The nodes with limited \nresources always resort to resource sharing from \nedge infrastructures or the other nodes empow-\nered with sufficient capabilities.\nResource sharing can be taken as a kind of \ntransaction that involves the interests of the sup-\nply and demand sides. Driven by the interests, \nthere  may  occur  some  attacks,  forgery  and  \ntampering of the transaction information from \nmalicious nodes. Thus, a transaction security pro-\ntection mechanism against malicious behaviors \nis imperatively required. Blockchain, which holds \nbatches of immutable and tamper-proof trans-\nactions in distributed digital ledgers, is a promis-\ning technology to address the security problem \n[2]. The distributed transaction recording mode \nof the blockchain well matches the distributed \nmode of edge resources sharing among multiple \nnodes. Moreover, blockchain’s multi-point con-\nsensus avoids system failure caused by single led-\nger node corruption.\nAlthough blockchain brings great benefits for \nsecuring the edge resource sharing process, some \ncritical challenges have emerged in its efficient \napplication in 6G networks. In the 6G era, perva-\nsive connectivity is achieved between smart devic-\nes, which enables resource sharing to occur at \nany place and at any time in a variety of transac-\ntion forms and under diverse management strat-\negies. Moreover, some interactive and real-time \napplications  depend  on  the  delay-constrained  \nresource sharing process. These huge numbers of \ntime-sensitive resource sharing transactions signifi-\ncantly challenge the scalability and efficiency of \nthe blockchain system.\nCatering to this challenge, we take sharding \ntechnology to boost blockchain’s scalability and \nincrease transactional throughput. In blockchain \nsharding, the whole blockchain network is divided \ninto multiple committees that are comprised of \nsubsets of recorded transactions. Each chain node \nonly maintains transaction information related to \nits own committee. In such a way, the blockchain \ncan flexibly match the highly distributed recording \nrequirements of massive transactions in 6G net-\nworks, while maintaining low-complexity opera-\ntion and fast block generation.\nAlong  with  the  improved  efficiency,  some  \nsecurity issues have arisen in the sharding enabled \nblock  system.  Since  sharding  splits  the  whole  \nblockchain  into  smaller  pieces,  the  number  of  \nchain nodes is reduced and the complexity of \nthe  consensus  gets  lower.  This  splitting  allows  \nan attacker to consume less computing power \nto  complete  a  51  percent  attack  and  success-\nfully tamper with the recorded transaction data \nin the block sharing system than in a traditional \nblockchain. A graph theoretic approach named \ndirected acyclic graph (DAG) is a potential way \nto address this security problem. DAG is defined \nas a kind of data structure that assembles the rela-\ntions of data units as tree logic. Applying DAG \ninto the blockchain system, blocks from different \nsharding committees could be assembled into a \nDAG, and make multiple committees mutually \nsecure each other and verify the updated chain \ndata.  However,  this  mutual  verification  in  the  \nDAG blockchain incurs some extra costs in terms \nResource-Efficient DAG Blockchain with Sharding for 6G Networks\nJin Xie, Ke Zhang, YunLong Lu, and Yan Zhang\nACCEPTED FROM OPEN CALL\nDigital Object Identifier:\n10.1109/MNET.211.2100345\nJin Xie and Ke Zhang (corresponding author) are with the University of Electronic Science and Technology of China; \nYunLong Lu is with Beijing Jiaotong University; Yan Zhang is with the University of Oslo.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n190\nof  communication  bandwidth  and  computing  \npower. However, the way to achieve both data \nsecurity and cost effi  ciency in DAG blockchains is \nstill an unexplored problem.\nTo  fill  this  gap,  we  propose  a  DAG-based  \nblockchain SHarding (DASH) scheme that com-\nbines the effi  cient data recording of sharding and \nthe secure blockchain updating of DAG. Unlike \nthe traditional blockchain that all the blockchain \nnodes maintain complete blockchain data, our \nsharding method divides the blockchain network \ninto multiple committees, and blockchain nodes \nonly process and store the historical transactions \ngenerated  locally.  However,  the  separation  of  \ncommittees might cause security issues. To cope \nwith this problem, our scheme reunites the com-\nputing power of different committees by main-\ntaining a global DAG. Moreover, the DAG in our \nscheme consists of the block headers instead of \nthe entire block. In this way, block headers are \nbroadcasted across the network rather than the \nblock with full transaction data, so the communi-\ncation overhead could be largely reduced. To the \nbest of our knowledge, this is the fi rst work that \ninvestigates the joint optimization of blockchain’s \nscalability and security in edge resource sharing. \nIn addition, we design a resource-effi  cient consen-\nsus mechanism, which saves the computational \ncost of the consensus process and improves spec-\ntrum effi  ciency.\nrEsourcE-EffIcIEnt dAg blockchAIn And \nshArdIng for 6g nEtworks\nThis section introduces the emerging blockchain \napplications in 6G networks, which are identified \nby the kind of related resources.Then we present \nthe necessity and feasibility of exploiting DASH and \na computation-effi  cient consensus algorithm in our \nblockchain-enabled resource sharing mechanism.\nblockchAIn EmPowErEd \ndIstrIbutEd APPlIcAtIons In 6g nEtworks\nFigure 1 shows fi ve diff erent distributed resource \nsharing applications in 6G networks, and this sec-\ntion briefl y introduces the characters blockchain \nplays in these applications. Furthermore, we focus \non the scenario of blockchain-enabled spectrum \nsharing, and present an analysis and comparison \nof several existing works with a table.\nData  Sharing:  In  data  sharing,  blockchain  \nis utilized to record the digests of sharing data, \nwhich  can  be  used  by  receivers  to  verify  the  \nreceived data’s authenticity and reliability [3]. For \ninstance, wireless sensors collect the environmen-\ntal variables in the smart city, and these variables \nare shared in an untrust environment. On-road \nvehicles and roadside units collect real-time traffi  c \ninformation and share them with each other [4]. \nSocial network users upload popular content to \nthe edge of the network, which eliminates the \ntransmission latency in center-to-end type.\nEdge/Cloud Storage: In edge and cloud stor-\nage, blockchain is utilized to build a decentralized \naccess control system. The access rights are record-\ned transparently on the blockchain and updated by \nthe peer nodes instead of a central server.\nEnergy Trading: Figure 1 shows the situations \nof  energy  trading  among  peer  entities.  Smart  \nbuildings with solar panels are able to harvest \nambient energy and trade energy with each other. \nIn the load peak of the power grid, vehicles with \nredundant power can feed their energy back to \nthe grid or sell energy to other vehicles. During \nthis process, blockchain works as a secure trading \nplatform to enable P2P energy trading without a \ntrusted intermediary [5].\nFederated  Learning:  By  leveraging  block-\nchain in federated learning, the local models are \naggregated into a global model by multiple min-\ners in the blockchain instead of a vulnerable cen-\ntral sever [9]. To better utilize the computation \nresources residing on the edge of the network, \nblockchain implements an incentive mechanism \nto motivate local computers on vehicles or base \nstations for updating high-quality local models.\nSpectrum  Sharing:  Spectrum  sharing  is  the  \nbasis of other kinds of resource sharing, which \ncould help task off loading through wireless com-\nmunication and also the transmitting of signaling \nmessages in energy sharing.\nIn spectrum sharing, users can acquire addi-\ntional  spectra  frequency  from  other  radio  sys-\ntems called incumbents [10], such as the radar \nFIGURE 1. Blockchain applications in 6G networks.\nCloud & Edge Resources\nEnergy Resources\nCommunication Resources\nRadio Systems\nRadar\nSatellite\nAllocated \nFrequency Band\nHz\nMobile Network \nOperators\nData Resources\nWireless SensorsSocial Users\nVehicles  & Roadside units\nServers\non BSs\nComputers\non Vehicles\nCloud Server\nand Storage\nPower GridElectric Vehicles\nPower Plant \nSpectrum \nSharing\nEnergy\nTrading\nData \nSharing\nFederated \nLearning \nBlockchain\nSupport\nSharding \nComputation-Efficient \nConsensus Algorithm\n1\n2\n3\n4\n5\nDAG \nEdge /Cloud \nStorage\nEnabling Technologies\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n191\nand satellite systems. The deployment of block-\nchain to spectrum management systems enables \nincumbents to sell their frequency bands to users \nwithout  a  spectrum  management  center,  thus  \nreducing the transaction fees of spectrum sharing \n[11]. The authorizations of spectrum access are \nrecorded as transactions in the blockchain, and \nall the participates reach an agreement on the \nauthorizations of spectrum access through the \nblockchain consensus mechanism [12].\nTable 1 lists several works of blockchain-en-\nabled spectrum sharing. There are three types \nof allocation schemes. Opportunistic access is \nadopted in work [6], where the spectrum shar-\ning transactions are randomly picked by miners \nand attached to the blockchain. Auction-based \nand matching-based schemes are both deter-\nministic allocation schemes, where the specific \nspectrum resource is allocated to the highest \nbidder or the best matching user. Work [8] is dif-\nferent from others because it uses the PoW con-\nsensus algorithm, which brings better scalability. \nHowever, the blockchain in work [8] can only \nscale-out with the number of users rather than \nthe network’s geographical coverage because \nthe same frequency band cannot be reused at \ndifferent  places  even  if  they  are  distant  from  \neach other. It can be seen through the compar-\nison that there are still some problems inherent \nin blockchain when dealing with a large-scale \nnetwork, such as scalability issues, excessive stor-\nage overhead, and consuming too much com-\nputation resources on the consensus process. \nTo cope with these problems, we present our \nsolutions in the next subsection.\nshArdIng And dAg for blockchAI   n-EnAblEd 6 g nEtworks\nIn  essence,  blockchain  applications  enable  \nthe sharing of energy, data, computation, and \nspectrum resources among peer entities. There-\nfore,  the  transaction  processing  capacity  of  \nblockchain  directly  determines  the  efficiency  \nof resource sharing. Some scaling technologies \nsuch as Lightning network and Sidechain could \nincrease the blockchain’s throughput, but they \nare not feasible for resource sharing due to the \nfixed membership of blockchain participants. To \nthis end, we attempt to utilize a public DAG-\nbased blockchain to solve the scalability issue. \nHowever,  deploying  DAG-based  blockchain  \nover the resource sharing system in a fully dis-\ntributed manner brings new challenges that have \nnot been investigated. The first challenge is that \nconflicting and duplicated transactions might be \nappended to the DAG-based blockchain simul-\ntaneously by non-cooperative miners. Another \nchallenge is that more blocks are created con-\ncurrently in the DAG approach, which results in \nmore communication and storage overhead to \nmaintain the consistency of the blockchain.\nTo cope with these challenges, we utilize the \nsharding method to partition the blockchain net-\nwork into multiple committees, where resource \ntransactions are processed and recorded locally. \nThe rationale behind this approach is that specific \ninformation of resource sharing is unnecessary to \nbe broadcasted and stored across the network. \nFor example, in spectrum sharing, different users \ncan access the same frequency band without the \nconcern of interference as long as they are distant \nfrom each other. Thus, users only care about the \nchannel state information in proximity to their loca-\ntions. Moreover, conflict management is easier to \nbe realized within the committee. However, unlike \nother existing blockchain sharding schemes such \nas Rapidchain [13], the committee in DASH has a \ndouble identity. In the blockchain, a committee is \na group of nodes maintaining the same subsets of \nblockchain data. In the physical network, commit-\ntees are geographic areas that divide the resources \nof the network into individual parts. Moreover, the \nresources that belong to a committee can only be \nshared within the committee.\nFigure 2a is an instance of existing blockchain \nsharding  (e.g.,  Rapidchain),  where  committees  \nmaintain  their  chain  of  blocks  individually.  The  \ncross-committee  transaction  enables  nodes  to  \ntransfer value between different committees. How-\never, the cross-committee transaction will not be \ntriggered if all transactions are invoked within the \ncommittee. On the one hand, sharding enables the \nstorage devices to store partial data of blockchain. \nOn the other hand, it also partitions the computing \npower of the whole network, which is not expect-\ned. Miners in different committees construct can-\ndidate blocks separately. Therefore, the malicious \nnodes only need 51 percent computing power of \nthe committee to launch a double-spend attack, \nwhich is obviously easier than aggregating more \nthan half of the computing power of the whole \nnetwork. In order to utilize sharding in DAG-based \nblockchain without degeneration of security, our \nDASH scheme is proposed.\nOur solution DASH is illustrated in Fig. 2b. For \nthe sake of simplicity, there are three committees. \nCommittees generate blocks stamped with their \nID, and the intact data of the block (transactions) \nis stored locally, which is similar to the tradition-\nal blockchain sharding. However, more impor-\ntantly, committees keep a global DAG recording \nthe existence of all the blocks. Moreover, any \nnode can reconstruct the DAG as long as it has \nheaders of all blocks because the hash references \nbetween the blocks are contained in the header. \nNew blocks containing transactions are broad-\ncasted through the gossip protocol. However, \nwhen blockchain nodes at the border of the com-\nmittee receive valid blocks from other commit-\ntees, they will discard the transactions of these \nblocks and forward the block headers to other \nTABLE 1. Existing works of blockchain-empowered spectrum sharing.\nPaper\nBlockchain type and consensus \nalgorithm\nScalability \nComputation \nconsumption\nStorageAllocation scheme\n[6]Consortium/PBFTUnable to scaleLowFull Opportunistic Access\n[7]Consortium/PBFTUnable to scaleLowFullMatching-based\n[8]Permissionless/PoWAble to scale with limitsHighFullAuction-based\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n192\nnodes. Therefore, transactions are disseminated \nwithin the committee, but the block headers are \ntransmitted across the network.\nOnce the miner receives the block headers \nfrom other committees, it will construct the candi-\ndate blocks referring to these extraneous blocks. \nIn  Fig.  2b,  all  the  miners  share  the  same  view  \nof blockchain, and they work on the candidate \nblock referring to A2, B2 and C2 concurrently. \nMiners spend their computing power to find a \nvalid nonce as the proof of work, and the Merkle \nroot ensures that the block’s transactions cannot \nbe modified. In this circumstance, different com-\nmittees’  computing  power  secures  each  other  \nmutually because the malicious nodes have to \nchange all the consequent blocks if they attempt \nto manipulate data in A2, B2 or C2.\nDASH defines the data structure of the block-\nchain. As another vital part of the blockchain, \nthe consensus algorithm defines the rule and \nmethod of updating the blockchain. We exploit \nthe  permissionless  blockchain  to  ensure  that  \nresources  are  managed  by  the  public  rather  \nthan a set of known and identifiable participants, \nwhich remains the fairness and decentralization \nof  blockchain  technology.  Two  common  per-\nmissionless blockchains are Proof-of-Stake(PoS)-\nbased and PoW-based. However, in a PoS-based \nblockchain,  a  small  group  of  miners  with  the  \nhighest stake are prone to a monopoly on the \ngeneration of new blocks. It is undesired that \na minority of nodes always take charge of allo-\ncating resources, which induces the unfair allo-\ncation of resources. Therefore, we stick to the \nPoW-based approach that introduces more ran-\ndomness and fairness when considering the right \nof updating blockchain.\nTo design a computation-efficient consensus \nalgorithm, miners’ computing power would better \nbe used to solve some practical problems instead \nof merely solving the hash puzzle. The answer to \nthe problem should be verified easily, but solv-\ning the problem is quite difficult. For example, \nin spectrum sharing, miners compete with each \nother to publish a new block by solving a spec-\ntrum allocation problem. In energy trading, miners \nmatch the recharge and discharge requests from \nelectric vehicles. If the miner’s solution satisfies \nmore vehicles, it is more likely to generate a new \nblock. Through leveraging these enabling technol-\nogies, the benefits of blockchain technology can \nbe better harvested.\ndAg blockchAIn And shArdIng \nfor rEsourcE shArIng\nIn this section, we will present how DAG block-\nchain and sharding are deployed in the spectrum \nsharing system. At the inception phase, a gen-\nesis block is generated to annunciate the pub-\nlic keys of every incumbent and their licensed \nbands. After creating the genesis block, the smart \ncontract is utilized to configure the blockchain \nnetwork and implement functions for resource \nsharing. The main functions of the proposed shar-\ning system are as follows.\nSharding:  The  network  needs  to  be  par-\ntitioned  into  multiple  committees.  The  smart  \ncontract, which is included in a block after the \ngenesis block, establishes a committee by desig-\nnating its coverage area and specifying its geo-\ngraphical boundaries. Committees are prohibited \nfrom  covering  the  same  area,  and  then  each  \nbase station is assigned to a specific committee \naccording to its location. Inside the committee, \nblocks are created chronologically as a single \nchain. Therefore, only transactions in the same \nblock share the spectrum resources concurrent-\nly.  Conflicting  spectrum  sharing  transactions  \ncould be prevented as the miner is prohibited \nfrom  allocating  the  same  frequency  bands  to  \nmultiple users in proximity.\nProtection of Incumbents: Incumbents have \nthe highest priority to use their licensed spec-\ntrum, so they need to announce their protection \narea where other users cannot use the protected \nfrequency band. When a smart contract is cre-\nated, there will be an initial version of the pro-\ntected areas approved by the digital signature of \nincumbents.\nSpectrum Sharing Policies: In the distributed \nspectrum sharing system, the peer nodes usually \nlack mutual trust. To secure the spectrum trading \nprocess, we use the smart contract as a public \nFIGURE 2. Blockchain for 6G networks: a) blockchain sharding; b) DASH.\nCommittee A\nCommittee B\nCandidate\nTop \nBlock\njth \nBlock \nCross-zone Transaction\nGenesis\nBlock\nTop \nBlock\nith \nBlock \nCandidate\nStorage of Committee A\nChain of A\nStorage of Committee B\nChain of B\nA Miners\nB Miners\nGenesis\nBlock\nStorage of Committee A\nTransactions {A1,A2} \nDAG\nTransactions{B1,B2} \nTransactions {C1,C2} \nStorage of Committee B\nDAG\nStorage of Committee C\nDAG\nHeader\nHeader\nHeader\nHeader\nTXs\nTXs\nTXs\nGenesis\nBlock\nB1\nA1\nA2\nB2\nC1\nC2\nA Miners\nB Miners\nC Miners\nHash References {A2, B2, C2} \nCommittee’s Transactions (TXs)\nCommittee \nID\nMerkle \nRoot\nNonce\nCandidate Block Header\n(a)(b)\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n193\nagreement to prevent users from directly dealing \nwith the incumbents. The price for using incum-\nbents’ licensed bands is indicated in the contract. \nThe smart contract keeps an account for each \nincumbent. During trading, the user who accepts \nthe price will invoke a transaction to send value to \nthe smart contract address. When the incumbent \nsuccessfully shares its licensed bands with other \nusers, the smart contract will increase the value of \nthe incumbent’s account.\nAfter introducing the base functions of our \nspectrum sharing system, we now demonstrate \nhow to complete a successful spectrum sharing. \nAs shown in Fig. 3, A successful spectrum sharing \nprocess involves the following fi ve steps.\nStep 1: The base station launches the spec-\ntrum sharing process by constructing a request \ntransaction. The transaction depicts two important \nattributes of the base station: its service radius and \nits geographical location. \nStep 2: Miners of the committee collect all the \nrequest transactions from base stations. Miners \nthen allocate frequency bands to base stations by \nappending the messages of allocated spectrum \nresources to the request transactions. Afterward, \nthe spectrum sharing transactions will be pack-\naged into the body of a block.\nStep 3: Miners compete with each other to \nfi nd a valid block through an improved PoW algo-\nrithm. Once the valid block is found, it will be \nbroadcasted inside the committee. Other miners \nin the same committee will verify the block and \nconcatenate their digital signatures to the block \nheader. The verifi ed block header will eventually \nbe transmitted to all the committees.\nStep 4: The smart contract is triggered by the \nspectrum  sharing  transactions.  The  balance  of  \nincumbents recorded in the smart contract will \nbe updated.\nStep 5: The base station gets authorization to \naccess the specifi ed frequency bands.\nThe spectrum sharing transactions are record-\ned  in  the  blockchain  by  the  steps  mentioned  \nabove. The next section will present how a miner \nallocates the spectrum resources to base stations \nand  the  rationale  behind  the  improved  PoW-\nbased consensus algorithm.\nrEsourcE-EffIcIEnt consEnsus for \nblockchAIn In sPEctrum shArIng\nIn this section, we demonstrate the process of an \nhonest miner to find a valid block according to \nthe improved PoW-based consensus algorithm. \nLike the original PoW algorithm, miners still need \nto put a right nounce into the block header. The \nhash result of a valid Block header is numerical-\nly less than a target. In our proposed consensus \nalgorithm, miners are rewarded by lowering the \nmining diffi  culty for proposing a spectrum alloca-\ntion scheme with higher performance.\nThe set of spectrum sharing transactions in a \nblock denotes the allocation schemes proposed \nby the miner for the committee. To measure the \neffi  ciency of these spectrum allocation schemes, \nwe propose two important criteria. The fi rst one \nis the fairness of spectrum sharing. Miners are \nexpected to meet more access requests from dif-\nferent base stations. The second criterion is the \nutilization effi  ciency of spectrum sharing. The uti-\nlization efficiency of shared spectrum resources \nis evaluated according to their coverage area. A \nhigh utilization effi  ciency means that the frequen-\ncy bands are widely reused outside the incum-\nbents’ protection area. The method relieves the \nblockchain network from consuming too much \ncomputing power on a conventional hash algo-\nrithm. Moreover, it also brings more fairness and \neffi  ciency to the blockchain empowered spectrum \nsharing system.\nIn  our  proposed  system,  the  bandwidth  of  \nincumbents is divided into M channels indexed \nby j = 1, ..., M.  There are N\nj\n unusable areas of \nthe j-th channel consisting of the incumbents’ \nprotected areas and service areas of previous \nunexpired spectrum sharing transactions, which \nis indexed by k = 1, ..., N\nj\n. Therefore, the unus-\nable area of the j-th channel is described by a \ngeographic coordinate and a radius, that is, (x\nj,k\n, \ny\nj,k\n) and R\nj,k\n. A miner receives N request trans-\nactions from base stations indexed i = 1, ..., N. \nEach transaction denotes a request of spectrum \nsharing, including a location, a service area and \nan  upper  limit  bandwidth.  Let  (x\ni\n, y\ni\n)  denote  \nthe location of a requesting base station. The \nFIGURE 3. DAG blockchain sharding for spectrum allocation.\n1th Committee\nN th Committee\nDAG\nith Committee\n\nBlock Header\nFromToLocationFrequency...\nMNO ASmart contract(x,y)Channel 1...\n.......\n\n\nBlockchain \nNetwork\nMobile Cellular \nNetwork\n\n\nSmart Contract\nCH1\nRequest additional \nspectrum \nSpectrum Allocation \nProblem\nLiquidate\nAuthorize spectrum access \nAllocate Spectrum\nMining\nMiner\nBS\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n194\ndemand of the service area is lower bounded \nby the minimum radius r\ni\nmin\n and upper bound-\ned by the maximum radius r\ni\nmax\n. The bandwidth \nB\ni\n describes the maximum number of channels \nrequired by a base station. Thus the spectrum \nallocation scheme is a M  N matrix composed \nof service area radius, where r\nj,i\n = 0 if the j-th \nchannel is not assigned to the i-th base station. A \nbinary variable a\ni\n is introduced to indicate wheth-\ner the i-th base station is allocated with spectra \nfrequency, and a\ni\n = 1 if S\nj\nr\nj,i\n ≠ 0.\nIn order to reuse the spectrum resources effi-\nciently and satisfy more base stations, we formulate \nan optimization problem with the objective U as\nmax\nr\nj,i\nU=λ\n1\nπr\nj,i\n2\ni,j\n∑\nA\n+λ\n2\nα\ni\ni\n∑\ns.t.C1 :r\ni\nmin\n≤r\nj,i\n≤r\ni\nmax\n,                          ∀r\nj,i\n,r\nj,i\n≠0\nC2 :r\nj,i\n+R\nj,k\n≤x\ni\n−x\nj,k\n,y\ni\n−y\nj,k\n,    ∀r\nj,i\n,r\nj,i\n≠0\nC3 :\nr\nj,i\nr\nj,i\nj\n∑\n≤B\ni\n,                                  ∀r\nj,i\n,r\nj,i\n≠0\nwhere A is the total area of the network, and \nboth l\n1\n, l\n2\n are normalization coefficients. Thus, \nthe first term of the objective represents the \nspatial spectrum utilization efficiency. The sec-\nond term is proportional to the number of base \nstations that are allocated at least one channel. \nConstraint C1 ensures that the requirements of \nbase stations are satisfied in terms of working \nrange of the shared spectrum. Constraint C2 \npromises that the corresponding channels are \nnot reallocated in the incumbents’ protected \nareas and service areas of previous unexpired \nspectrum sharing transactions. Constraint C3 \nstates that the number of channels allocated \nto base stations shall not exceed their required \nnumber. This spectrum allocation problem is \na combinational optimization problem, which \ncannot be solved in deterministic polynomial \ntime. Therefore, we adopt the artificial bee col-\nony algorithm, which uses swarm intelligence  \nto search for the optimal solution to the alloca-\ntion problem. After solving the allocation prob-\nlem, miners will mine the block with the revised \nmining difficulty according to U of their alloca-\ntion schemes.\nIn our proposed system, the miners still need \nto solve a hash puzzle after finding the optimal \nallocation scheme, mainly for two reasons. For \nthe first reason, proof-of-work protects honest \nminers from malicious plagiarism. Because the \nallocation scheme is transparent to any node, \nplagiarists can acquire it and build their own \nblocks with the copied allocation scheme. How-\never, the plagiarists still need to find a solution \nfor its hash puzzle. During this period, the origi-\nnal block will be broadcasted to the majority of \nhonest nodes. The second reason is that proof-\nof-work avoids the unexpected forks of block-\nchain induced by the sparse spectrum sharing \nrequests in a committee. When there are only \na few base stations requesting additional spec-\ntrum, the allocation problem will be quite sim-\nple  for  the  miners  to  find  a  solution.  In  this  \ncase, if we disable proof-of-work, it only costs \nminers a very short time to find a valid block, \nand there will be multiple valid blocks referring \nto the same previous block in the committee. \nConsequently, blockchain forks will frequently \noccur, even if there are no malicious miners. \nTherefore,  the  computation  consumption  of  \nsolving the hash puzzle is a dispensable part of \nsecuring the blockchain.\nIllustrAtIvE rEsults\nIn this section, we show the illustrative results to \ndemonstrate the performance of our proposed \nDAG blockchain sharding deployment over a \nspectrum sharing system. We consider a square \narea of 100 km\n2\n, and two incumbents share their \nlicensed spectrum as two channels. The radius \nof base stations’ service area is randomly taken \nfrom [200 ,1200] m, and the spatial distribution \nof base stations follows the Poisson Point Pro-\ncess (PPP). \nFigure 4 shows the cost function value with \ndifferent sharding size. The network is divid-\ned into multiple committees of the same size. \nIn each committee, the allocation problem is \nsolved individually. The cost function value in \nFig. 4 is an average of all the committees in a \nsharding scheme. When we divide the network \ninto four committees, the cost function con-\nverges to the highest value, because the size \nof the committee is the largest, and there will \nbe more base stations in the committee. How-\never, the spectrum allocation problem is more \ncomplicated when dealing with a larger size \ncommittee, which can be seen through these \nthree sharding schemes’ convergence points. \nThe number of iterations shows the computa-\ntion resources the miner has used to solve the \nallocation problem. As a rational miner, it will \nnot spend too much time solving the spectrum \nallocation problem. For instance, the miner in \nthe sharding scheme with four committees may \nturn to mine a new block at 150 times of iter-\nation after which the increase of cost function \nbecomes quite slow.\nFIGURE 4. Comparsion of convergence of different number of committees.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n195\nFigure  5  compares  the  performance  of  the  \nimproved PoW algorithm and the vanilla version \nin terms of the utility of spectrum allocation. The \noverall utility consists of the spatial spectrum uti-\nlization efficiency and fairness of spectrum allo-\ncation.  To  be  specific,  fairness  is  described  as  \nthe rate of base stations that are allocated with \nadditional spectrum resources, and the spatial \nspectrum utilization efficiency is the coverage \nrate of the shared spectra frequency. With the \nincreasing average number of base stations, both \nthe schemes reach a higher utility because they \nraise  coverage  areas.  However,  the  improved  \nPoW algorithm always outperforms the original \nPoW. In the original PoW algorithm, the difficulty \nof mining blocks has nothing to do with the allo-\ncation scheme. The miners always put as many \nnon-conflicting transactions into blocks as pos-\nsible  without  considering  the  coverage  of  the  \nshared spectrum. Thus, adopting the improved \nPoW algorithm can improve the spectrum utili-\nzation efficiency because miners are encouraged \nto propose spectrum-efficient allocation schemes.\nconclusIon And futurE work\nIn this article, we presented a resource-efficient \nDAG blockchain with a sharding scheme in 6G \nnetworks. We leverage sharding to improve the \nblockchain throughput and reduce the mainte-\nnance cost of the chain system. Moreover, we \nincorporate DAG technology into blockchain \noperation, which effectively overcomes the secu-\nrity degeneration induced by the sharding meth-\nod. Then, the proposed DAG blockchain scheme \nwas applied to spectrum sharing management \nto verify its application effect. Numerical results \ndemonstrated that our scheme achieves higher \nspectrum efficiency and lower computation con-\nsumption compared with traditional PoW-based \nblockchain schemes.\nAlthough DAG blockchain has great potential \nin fully-decentralized transaction management and \ntamper-resistant data recording, the coming 6G \nera  will  bring  some  unprecedented  challenges  \nsuch as scalability optimization and heterogeneous \nresource adaptation of the blockchain system. \nScalability: When the blockchain is used as a \nledger to manage resource sharing, the efficien-\ncy of resource transactions is constrained by the \nprogress of block generation and consensus. More-\nover, as resource sharing management becomes \nmore refined and complex in 6G networks, the \nnumber of concurrent resource transactions grows \nexponentially. Increasing the number of commit-\ntees could be a possible solution, but it also brings \nthe challenge of maintaining the consistency of \nblockchain since more new blocks are created and \nbroadcasted in the network. This problem is still \nunexplored, and needs to be further studied.\nHeterogeneous  Resource  Adaption:  In  6G  \nnetworks,  heterogeneous  edge  resources  may  \nbe shared concurrently between the user nodes. \nTransactions of different types of resources have \ndiverse characteristics, which requires the block-\nchain system to provide differentiated transaction \ndata recording services. For instance, when per-\nforming spectrum resource sharing, taking into \naccount the time-varying instability of the wireless \nenvironment, fast block chaining is required to \nsupport agile spectrum transactions. In contrast, \nenergy transactions are not so strictly time-sensi-\ntive. The blockchain system can make full use of \nthe time cost of the energy exchange process to \nachieve the consensus. To cope with this prob-\nlem, delay-sensitive resource sharing transactions \ncould be packaged in blocks referring to fewer \nhistorical blocks in the DAG, which avoids waiting \nfor blocks propagation from distant committees. \nHowever, this method might introduce security \nissues due to the lower connection between new \nblocks and historical blocks in DAG, so the trade-\noff between the security and performance needs \nto be further investigated.\nAcknowlEdgmEnt\nThis work was supported in part by the Nation-\nal Natural Science Foundation of China under \nGrants 61941102 and 62071092.\nRefeRences \n[1] W. Saad, M. Bennis, and M. Chen, “A Vision of 6G Wireless Sys-\ntems: Applications, Trends, Technologies, and Open Research \nProblems,” IEEE Network, vol. 34, no. 3, 2020, pp. 134–42. \n[2] H. Xu et al., “Blockchain-Enabled Resource Management \nand Sharing for 6G Communications,” Digital Commun. and \nNetworks, vol. 6, no. 3, 2020, pp. 261–69. \n[3] K. Zhang et al., “Edge Intelligence and Blockchain Empow-\nered 5G Beyond for the Industrial Internet of Things,” IEEE \nNetwork, vol. 33, no. 5, 2019, pp. 12–19. \n[4] Y. Lu et al., “Blockchain Empowered Asynchronous Federated \nLearning for Secure Data Sharing in Internet of Vehicles,” IEEE \nTrans. Vehic. Tech., vol. 69, no. 4, 2020, pp. 4298–4311. \n[5] Z. Li et al., “Consortium Blockchain for Secure Energy Trad-\ning in Industrial Internet of Things,” IEEE Trans. industrial \nInformatics, vol. 14, no. 8, 2017, pp. 3690–700. \n[6] Y. Lu et al., “Low-Latency Federated Learning and Block-\nchain for Edge Association in Digital Twin Empowered 6G \nNetworks,” IEEE Trans. Industrial Informatics, vol. 17, no. 7, \n2021, pp. 5098–5107. \n[7] A. B. Flores et al., “IEEE 802.11af: A Standard for TV White \nSpace Spectrum Sharing,” IEEE Commun. Mag., vol. 51, no. \n10, 2013, pp. 92–100. \n[8] J. Eggerton, “FCC’s Rosenworcel Talks Up 6G,” Sept. 2018; \navailable: https://www.nexttv.com/news/fccs-rosenworcel-\ntalks-up-6g. \n[9] T. Maksymyuk et al., “Blockchain-Empowered Framework for \nDecentralized Network Management in 6G,” IEEE Commun. \nMag., vol. 58, no. 9, 2020, pp. 86–92. \n[10] Y. Dai et al., “Blockchain and Deep Reinforcement Learn-\nFIGURE 5. Comparsion of utility of our approach and PoW.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "IEEE Network • January/February 2022\n196\ning Empowered Intelligent 5G Beyond,” IEEE Network, vol. \n33, no. 3, 2019, pp. 10–17. \n[11] Z. Zhou et al., “Blockchain-Empowered Secure Spectrum \nSharing for 5G Heterogeneous Networks,” IEEE Network, \nvol. 34, no. 1, 2020, pp. 24–31. \n[12] K. Kotobi and S. G. Bilén, “Blockchain-Enabled Spectrum \nAccess in Cognitive Radio Networks,” Proc. 2017 Wireless \nTelecommunications Symposium (WTS), 2017, pp. 1–6. \n[13] M. Zamani et al., “Rapidchain: Scaling Blockchain via Full \nSharding,” Proc. 2018 ACM SIGSAC Conf. Computer and \nCommun. Security, 2018, pp. 931–48.\nBiogRaphies\nJin Xie [S’21] (JinXie@ieee.org) received his B.S. degree from South-\nwest Jiaotong University, Chengdu, China, in 2018. He is currently \npursuing a Ph.D. degree with the School of Information and Com-\nmunication Engineering at the University of Electronic Science and \nTechnology of China. His research interests include Internet of \nThings security, blockchain and mobile edge computing.\nKe Zhang [M’20] (zhangke@uestc.edu.cn) received his Ph.D. degree \nfrom the University of Electronic Science and Technology of China, \n2017. He is currently an associate professor in the School of Infor-\nmation and Communication Engineering, University of Electronic \nScience and Technology of China. His research interests include \nscheduling of mobile edge computing, design and optimization of \nnext-generation wireless networks, and the Internet of Things.\nYunlong  lu [M’20] (yunlong.lu@ieee.org) received the M.S. \nand Ph.D. degrees in computer science from Beijing University \nof Posts and Telecommunications (BUPT), Beijing, China, in \n2015 and 2020, respectively. He is currently an associate profes-\nsor in the State Key Laboratory of Rail Traffic Control and Safety, \nBeijing Jiaotong University. His current research interests include \nblockchain, edge intelligence, and Internet of Things security.\nYan Zhang [F’19] (yanzhang@ieee.org) is a full professor with \nthe University of Oslo, Norway. He is a Fellow of IEEE, a Fellow \nof IET, an Elected Member of Academia Europaea (MAE), the \nRoyal Norwegian Society of Sciences and Letters (DKNVS), and \nthe Norwegian Academy of Technological Sciences (NTVA). \nHis current research interests include next-generation wireless \nnetworks leading to 6G and green and secure cyber-physical \nsystems (e.g., smart grid and transport).\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:37:44 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Resource-Efficient DAG Blockchain with Sharding for 6G Networks.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
          "Subject": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
          "Creator": "Adobe InDesign 17.1 (Macintosh)",
          "Producer": "Adobe PDF Library 16.0.5; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220315185325-04'00'",
          "ModDate": "D:20220323072635-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Network;2022;36;1;10.1109/MNET.211.2100345",
            "dc:title": "Resource-Efficient DAG Blockchain with Sharding for 6G Networks",
            "dc:creator": "Jin XieKe ZhangYunLong LuYan Zhang",
            "prism:publicationname": "IEEE Network",
            "prism:startingpage": "189",
            "prism:coverdisplaydate": "January/February 2022",
            "prism:issueidentifier": "1",
            "prism:doi": "10.1109/MNET.211.2100345",
            "prism:volume": "36",
            "prism:endingpage": "196",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "Scalability in Blockchain using Node Sharding and\nDirected Acyclic Graphs.\nMounica Sruthi 2020IMT-061\nRishabh Kumar 2020IMT-078\nShikhar Gupta 2020IMT-090\nShreshth Goyal 2020IMT-094\nABV-Indian Institute of Information Technology and Management Gwalior,\nMorena Link Road, Gwalior, Madhya Pradesh, INDIA - 474010.\nApril 19, 2024\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20241 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "Contents\n1\nScope of Research\n2\nApplications\n3\nIntroduction\n4\nFlow of Review\n5\nMotivation\n6\nLiterature Review\n7\nConclusion\n8\nResearch Proposal\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20242 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "Scope of Research\nThis research reviews ten pivotal papers exploringDirected Acyclic Graphs(DAGs) and\nnode shardingtechniques to enhance blockchain scalability for theIndustrial Internet\nof Things (IIoT)and6G networks.  The aim is to address the limitations of traditional\nblockchain architectures, such as low throughput and high latency, which are incompatible\nwith the demands of high-volume, real-time data processing in IIoT and 6G applications.\nThe research investigates how DAGs and sharding have been adapted and optimized for\nresource-constrained devices and massive network scales in future telecommunications\nand industrial systems.  The integration of these technologies reduces transaction\nconfirmation times and supports decentralization, securing IIoT and 6G ecosystems\nagainst various security threats.  The findings will outline current capabilities, identify\ntechnology gaps, and propose future research directions for robust, efficient, and scalable\nblockchain frameworks, fostering innovation in industrial automation and smart\ninfrastructure.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20243 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "Applications\nIndustrial Internet of Things (IIOT): In the Industrial Internet of Things (IIoT), a\nvast array of devices generates substantial incoming traffic that needs efficient\nprocessing.  Scalability is crucial in IIoT to manage the large number of devices and\nthe immense data they produce.  Additionally, the interconnected nature of these\nsystems raises significant security concerns, necessitating robust mechanisms to\nsafeguard sensitive industrial data and ensure reliable operations across various\nsectors.\n6G Network:  In the context of 6G, the next generation of cellular networks aims to\nsupport even higher data rates and lower latency than its predecessors.  This\nadvancement will enable applications such as autonomous driving, immersive\naugmented reality, and more comprehensive smart city infrastructures.  However, the\ncomplexity and scale of 6G demand advanced scalability solutions to handle the\nincreased data traffic and device connectivity efficiently.  Security also becomes\nparamount in 6G, as the network’s expansive reach and the critical nature of its\napplications involve substantial privacy and safety risks.\nBeyond 6G and IIoT, blockchain’s scalability could also transform sectors like supply\nchain management, financial services, edge computing, healthcare, and governance by\nproviding a secure, transparent, and decentralized infrastructure for data sharing and\ntransaction processing.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20244 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "INTRODUCTION\nAddressing Blockchain Scalability Challenges\nEmerging Challenges:Scalability and efficiency issues facing current blockchain\ntechnologies.\nProposed Solutions:Sharding and Directed Acyclic Graphs (DAGs) as potential\nremedies.\nStudy Focus:Reviewing recent advancements in scalability through sharding and\nDAGs.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20245 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "MOTIVATION\nGrowing Need:Demand for scalable blockchain solutions in various fields, including\nfinance and IoT.\nPromise of Sharding and DAG:Potential to revolutionize scalability, reducing\nlatency and increasing throughput.\nIdentified Gaps:Existing research gaps like security vulnerabilities and consistency\nissues, highlighting ongoing research opportunities.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20246 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "RESEARCH FLOW\nFigure: Flow of research for enhancing scalability in blockchain\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20247 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "Towards Scaling Blockchain Systems via Sharding (2019)[1]\nObjectives:\nTo enhance the scalability of blockchain systems to handle a much larger volume of\ntransactions per second.\nTo effectively apply sharding—a well-known database scaling technique—to\nblockchain technology\nMethodology:\nEnhancing Byzantine consensus protocols to boost individual shard throughput.\nUsing trusted hardware (Intel SGX) for high-performance consensus and secure shard\nformation.\nLimitations:\nDependence on trusted hardware:The reliance on Intel SGX raises concerns about\nthe general applicability in environments where such hardware might not be available\nor reliable.\nComplexity in protocol coordination:Managing the distributed transactions across\nshards is complex and could be prone to errors or inefficiencies under different\noperational scenarios or attacks.\nResults:\nAchieved over 3,000 transactions per second in realistic settings on Google Cloud\nPlatform, significantly outperforming state-of-the-art solutions.\nMaintained high transaction throughput in multi-region setups with hundreds to\nthousands of nodes.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20248 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "Towards Scaling Blockchain Systems via Sharding (2019)[1]\nArchitecture of the Proposed Framework\nShard formation protocol:Utilizes a trusted random beacon for secure node\nassignment to shards.\nConsensus protocol optimization:Utilizes trusted execution environments to enhance\nconsensus protocol efficiency and security.\nFigure: Sharding protocols in traditional databases vs.  blockchains.[1]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 20249 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "Ostraka: Secure Blockchain Scaling by Node Sharding\n(2020) [2]\nObjectives:\nPresenting a scalable blockchain architecture to improve transaction processing\nefficiency and security.\nIntroducing Ostraka architecture with node sharding.\nDemonstrating security analysis proving comparable security to traditional systems.\nShowcasing performance evaluation showcasing linear scalability.\nMethodology:\nNode sharding to distribute transaction processing across node shards.\nTransaction distribution mechanism using hashing with unique node-specific ”salt.”\nBlock validation with coordinated validation across node shards.\nLimitations:\nResource intensity demanding more computational resources per node.\nComplexity in implementation due to the distributed nature of the architecture.\nResults:\nScaling performance achieving up to 400k transactions per second.\nSecurity analysis proving comparable security to traditional systems.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202410 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "Ostraka: Secure Blockchain Scaling by Node Sharding\n(2020) [2]\nArchitecture:\nNode-Shards (NSs) handling specific parts of transaction processing.\nCoordinator managing NS operation and facilitating communication.\nDistributed block validation allowing parallel validation, reducing block processing time.\nFigure: Two connected Ostraka nodes, with intra-node connections.  [2]\n1\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202411 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "Scaling Blockchain via Layered Sharding(2022)[3]\nObjectives:\nEfficient Handling of Cross-Shard Transactions:  Develop a method to manage\ntransactions that span multiple shards more effectively without the need to break them\ninto smaller sub-transactions.\nUtilize Advanced Nodes:  Allow nodes with higher capabilities to participate in\nmultiple shards, leveraging their capacity to enhance overall network performance.\nMethodology:\nLayered Sharding Approach:  Implement a hierarchical structure where some nodes\noperate in multiple shards, which can handle both internal and cross-shard\ntransactions.\nCooperative Cross-Shard Consensus:  Develop a consensus mechanism that enables\nefficient and secure validation and execution of cross-shard transactions in a single\nround of consensus.\nLimitations:\nAssumption of a certain distribution and capacity of nodes may not always be practical.\nReliance on the capability of nodes in bridging shards, failure or compromise of which\ncould affect the system.\nEnsuring consistent security across all shards, particularly with nodes participating in\nmultiple shards, is complex and requires robust safeguards against potential breaches\nor failures.\nResults:\nImproved transaction throughput by up to 3.2 times compared to existing sharding\ntechniques.\nAchieving around 3821 transactions per second for 20 shards.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202412 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "Scaling Blockchain via Layered Sharding(2022)[3]\nArchitecture:\nCombination of intra-shard and inter-shard operations.\nNodes in bridging shards (b-shards) handling transactions across multiple individual\nshards (i-shards).\nReduced need for multiple consensus rounds for cross-shard transactions.\nFigure: Illustration for different blockchain sharding systems [3]\nFigure: Illustration for a layered sharding for i-shard A, B and b-shard C.[3]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202413 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded Decentralized Ledger via\nChained Transaction Sequences. (2022) [4]\nObjective:\nUtilize sharded ledger for scalable, secure, parallel blockchain transaction processing.\nProposed Methodology:\nTxChain:  Merkle Patricia tree for account leaf nodes with chained transaction\nsequences (TxSEQs).\nTransactions processed instantly within shards, broadcasted for synchronization.\nValidators verify transactions, maintain network consistency via Transaction Sequence\nConversion (TSC) algorithm.\nConclusion:\nTxChain achieves significant throughput gains through parallel processing across\nshards.\nBenefit diminishes with more shards due to ledger replica overhead.\nOffers promising scalability and secure consensus mechanism.\nLimitation:\nStorage bottleneck:TxChain maintains full ledger copies on each shard, limiting\nstorage scalability.\nCross-shard complexity:The paper lacks details on how TxChain handles cross-shard\ninteractions, potentially impacting performance.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202414 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded Decentralized Ledger via\nChained Transaction Sequences. (2022) [4]\nFigure: Throughput Scalability (Throughput vs Number of shards)[4]\nResults:TxChain demonstrates throughput improvement with increasing shards\nwith doubling the shards leading to a 1.59-1.89x throughput increase.  This benefit\nlessens with more shards due to each shard holding the full ledger and TxChain’s\ndependency analysis overhead.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202415 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 15
      }
    }
  },
  {
    "pageContent": "Benzene: Scaling Blockchain With Cooperation-Based\nSharding (2022) [5]\nObjective:\nImprove transaction throughput while maintaining fixed fault tolerance, even with\nincreasing shards.\nMethodology Proposed:\nUnique double-chain architecture decouples transaction recording from consensus\nexecution.\nAllows cross-shard cooperation without interfering in transaction processing within\nshards.\nEach shard maintains proposer chain for recording transactions and vote chain for\ncross-shard consensus.\nCross-shard verification facilitated by Trusted Execution Environments (TEEs)\nproviding validation proofs, minimizing individual node overhead.\nArchitecture:\nDouble-Chain Architecture:  Each shard maintains separate proposer and vote\nblockchains, as shown in Shard 1, Shard 2, and Shard N.\nCross-Shard Verification:  Nodes with TEEs verify proposer blocks from other shards\nand provide validation proofs, depicted by the dotted blue arrows between shards.\nCross-Shard Voting Consensus:  Miners vote on proposer blocks from all shards based\non TEE proofs, shown by the solid red arrows between shards to confirm the most\nvoted block.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202416 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 16
      }
    }
  },
  {
    "pageContent": "Benzene: Scaling Blockchain With Cooperation-Based\nSharding (2022) [5]\nFigure: Architecture of Benzene [5]\nConclusion:\nArchitecture achieves high throughput through cross-shard cooperation,\ndouble-chain design, and voting consensus with TEE verification.\nLimitation:\nSecurity risks due to reliance on TEEs like rollback attacks, jeopardizing system\nintegrity.\nThe increment of throughput starts to stop at around 400 shards, therefore leading\nto a maximal number of blocks that can be verified per second.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202417 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 17
      }
    }
  },
  {
    "pageContent": "Benzene: Scaling Blockchain With Cooperation-Based\nSharding (2022) [5]\nFigure: Throughput evaluated by simulations.\n[5]\nFigure: Confirmation latency in simulations [5]\nResult:\n1\nLinear throughput scalability, achieving 32,370 TPS with 50 shards, outperforming\ntraditional systems like Bitcoin as can be seen from Fig 8 and Fig 9.\n2\nFixed fault tolerance of 1/4, independent of the number of shards.\n3\nCross-shard communication for TEE and voting data (87KB with 50 shards) is\nnegligible compared to block size (1MB).\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202418 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 18
      }
    }
  },
  {
    "pageContent": "An Efficient and Compacted DAG-Based Blockchain\nProtocol for Industrial Internet of Things. (2020) [6]\nObjective:\nTo improve blockchain’s efficiency and scalability in the context of the Industrial\nInternet of Things (IIoT) by organizing blocks in a compacted DAG structure\ninstead of a linear chain.\nMethodology Proposed:\nThe proposed framework addresses resource limitations in Industrial IoT (IIoT)\nnetworks by dividing devices into miners, gateways, and nodes.  Miners, similar to\nBitcoin miners, maintain the ledger using custom CoDAG protocols for fast\ntransaction processing.  Gateways, with more resources than basic nodes, manage\nledger sections, secure communication, and conduct transactions.  Nodes submit\ndata and payments through gateways.  This division leverages device capabilities\nwhile CoDAG’s fast consensus ensures efficient transaction handling in\nresource-constrained IIoT environments.\nLimitation:\nPotential instability under high transaction rates and needs further work for large\ndata volumes (security & throughput).\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202419 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 19
      }
    }
  },
  {
    "pageContent": "An Efficient and Compacted DAG-Based Blockchain\nProtocol for Industrial Internet of Things. (2020) [6]\nFigure: Implementation Framework with\nCoDag[6]\nArchitecture:\nDApp Layer:Supports decentralized\napplications built on CoDAG.\nRPC/Console Layer:Communicate\nwith the CoDAG system.\nChain Layer (Core):\n1\nNetwork Module:  Synchronizes network\ninformation via peer-to-peer protocols.\n2\nCoDAG Module:  Maintains the core\ndata structure and algorithms.\n3\nMiner Module:  Manages miners and\nadjusts mining difficulty.\n4\nConsensus Algorithm Module:  Ensures\nagreement among nodes.\nMiner Module:Secure the network by\nvalidating transactions and adding blocks.\nConsensus Algorithm Module:Guarantees\nconsistent ledger state via a custom,\nresource-friendly consensus algorithm\ndesigned for IIoT.\nData Layer:Stores transaction data using\nRLP encoding, LevelDB database, Merkle\nTrees, and hashing.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202420 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 20
      }
    }
  },
  {
    "pageContent": "An Efficient and Compacted DAG-Based Blockchain\nProtocol for Industrial Internet of Things. (2020) [6]\nFigure: Relationship between throughput and blocksize[6]\nResult:The CoDAG protocol achieved 1151 transactions per second (tps) when the\nblock size was 2 MB and the width was 15, which is 164 times the throughput of Bitcoin\nand 77 times that of Ethereum.  The paper examines security vulnerabilities and proposes\nways to mitigate them.\nConclusion:\nThe proposed framework tackles scalability and efficiency limitations of traditional\nblockchains in IIoT.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202421 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 21
      }
    }
  },
  {
    "pageContent": "TIPS: Transaction Inclusion Protocol With Signaling in\nDAG-Based Blockchain(2022) [7]\nObjective:  To address the key challenges faced by DAG-based blockchain systems-\nthe transaction inclusion collision and the resulting revenue and throughput\ndilemmas by proposing a novel Transaction Inclusion Protocol with Signaling (TIPS)\nto resolve these dilemmas.\nResearch Gaps Identified:\nThe revenue dilemma:Miners are discouraged from including high-fee transactions\ndue to the risk of transaction collision, which leads to a split of the reward.\nThe throughput dilemma:Increasing the block size to boost throughput leads to\nhigher network propagation delay, which in turn increases transaction collisions and\ndegrades the system throughput.\nComponents of the Architecture:\nBloom filter in the block header:This compact data structure serves as a ”signal” to\nquickly propagate information about the transactions included in the newly-mined\nblock.\nHeader-first block propagation:TIPS decouples the propagation/verification\nprocesses of the block header and the block body, allowing the block header to be\nbroadcast to the network quickly.\nTransaction inclusion game and strategy update:Miners update their transaction\ninclusion strategies based on the received signal to avoid collision.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202422 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 22
      }
    }
  },
  {
    "pageContent": "TIPS: Transaction Inclusion Protocol With Signaling in\nDAG-Based Blockchain(2022) [7]\nFigure: Workflow of TIPS\nProposed Methodology:\nMiners first create a ”signal” containing a\nBloom filter that indicates which transactions\nare included in a new block.  This signal is\nquickly broadcast across the network.\nUpon receiving the signal, other miners adjust\ntheir transaction inclusion strategies to avoid\ncollisions by excluding transactions indicated in\nthe signal.\nAfter the signal, the complete block including all\ntransaction details and proof of work is\nbroadcast.  Other miners verify the block against\nthe Bloom filter in the signal.  If validated, the\nblock is added to the blockchain, extending the\nchain and updating the network’s ledger.\nContributions:\nTIPS can effectively resolve DAG-based\nblockchain systems’ revenue and throughput\ndilemmas.\nTIPS can defend against classic attacks, such as\ndenial-of-service and delay-of-service.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202423 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 23
      }
    }
  },
  {
    "pageContent": "TIPS: Transaction Inclusion Protocol With Signaling in\nDAG-Based Blockchain(2022) [7]\n(a) TPS in TIPS and Standard Protocol(b) Utilization in TIPS and Standard Protocol\nFigure: Comparing results of TIPS with standard protocol [7]\nResults:\nTIPS can achieve a block capacity utilization of around 90%.\nTIPS can provide a system throughput (TPS) that is up to 5 times higher than the\nstandard protocol.\nLimitations\nThe analysis assumes homogeneous miners and transaction fees.\nThe paper does not consider the potential computational and communication overhead\nintroduced by the Bloom filter-based signaling mechanism.\nBloom filters do not focus on preventing false positives.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202424 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 24
      }
    }
  },
  {
    "pageContent": "Understanding Characteristics and System Implications of\nDAG-Based Blockchain in IoT Environments(2022) [8]\nObjective:The paper focuses on IOTA, a DAG-based blockchain for IoT\nenvironments.  The study identifies gaps in traditional block-based blockchain\nsystems like Bitcoin and Ethereum, which suffer from low transactions per second,\nsignificant computation demands, and high costs—factors unsuitable for IoT\nscenarios.  DAG-based blockchains promise higher throughput and lower latency, but\nlack comprehensive evaluations especially in realistic IoT settings.\nProposed Methodology:  The authors have developed a private IOTA network with\n35 Intel NUCs, where one NUC acts as a coordinator, others as full nodes, and some\nas clients.  They have implemented three key components as part of their benchmark\ntools:  Automatic transaction initiator, Real-time status monitor, Double-spending\nattacker.\nLimitation:Increased network synchronization overhead with more full nodes.\nThe DAG’s validation and tip-selection processes follow complex and\ncomputationally intensive algorithms.\nThe reliance on Coordinator node creates a point of centralization and a single point\nof failure.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202425 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 25
      }
    }
  },
  {
    "pageContent": "Understanding Characteristics and System Implications of\nDAG-Based Blockchain in IoT Environments(2022) [8]\nFigure: Private IOTA System Architecture [8]\nResults:\nThe IOTA network can recover from\nan off-syncing attack, with a recovery\nspeed of around 20 TPS.\nThe system throughput under scaled\nconfigurations peaked at\napproximately 25 TPS with three full\nnodes but slightly decreased when\nfour full nodes were active.\nArchitecture:\nThe Tangle:An innovative\nDLTspecifically designed for IoT\nenvironment.  The Tangle is a graph\nwhere each transaction is its own node.\nCoordinator NUC:Responsible for\nsending milestones to the IOTA network.\nFull nodes:Run the IOTA reference\nimplementation (IRI) service to receive\nand handle transactions.\nFigure: Latency and throughput with multiple full\nnodes [8]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202426 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 26
      }
    }
  },
  {
    "pageContent": "DAG-BLOCK: A Novel Architecture for Scaling\nBlockchain-Enabled Cryptocurrencies (2024) [9]\nObjective:The paper proposes a novel DAG-based architecture to enhance the\nscalability of blockchain systems used in cryptocurrency markets.  Existing systems\nlike Bitcoin struggle with low transactions per second and high latency due to the\nlinear block validation process.\nProposed Methodology:\nTransaction Submission:User nodes submit transactions and miner nodes maintain\nlocal sub-DAGs.\nRandom Leader Selection:Potential leader miners are randomly selected to build\nblocks from sub-DAGs.\nBlock Verification and Finalization:Highest priority block is accepted and linked to the\nblockchain.\nEconomic Incentives:Transaction fees incentivize miners to scale user nodes and\nmaintain stability.\nContributions:Replacing the Merkel-tree-based transaction structure within the\nblock by a DAG structure to retain the globally linear chain structure while limiting\nthe size of the DAG.\nProposing the concept of ”open blocks”.\nProposing to segment the cryptocurrency ecosystems into niche markets.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202427 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 27
      }
    }
  },
  {
    "pageContent": "DAG-BLOCK: A Novel Architecture for Scaling\nBlockchain-Enabled Cryptocurrencies (2024) [9]\n(a) Network Market Architecture(b) DAG Block Structure\nFigure: System Architecture [9]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202428 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 28
      }
    }
  },
  {
    "pageContent": "DAG-BLOCK: A Novel Architecture for Scaling\nBlockchain-Enabled Cryptocurrencies (2024) [9]\nComponents of Architecture:\nMarket Network Architecture:Utilizes a decentralized P2P network mixed with\ncentralized components where each miner serves a specific subset of users, reducing\nthe range of transactions each miner must manage.\nDAG-BLOCK Structure:Incorporates a DAG within each blockchain block,\nenhancing the ability to process multiple transactions simultaneously.\nOpen Blocks:Allows user nodes to participate directly in the transaction verification\nprocess, reducing dependency on miners and decentralizing the control further.\nLimitations:\nThe division of the market into segments introduces complexity in managing and\nsynchronizing these segments.\nIncreased user participation in the transaction verification process could introduce\nincreased communication overhead and potential security vulnerabilities.\nThe system’s efficiency heavily relies on the algorithmic selection of tips within DAGs.\nResults:\nReduces transaction confirmation time to a few seconds.\nDAG-Block system can increase throughput to 50-100 TPS, compared to 7TPS of\nBitcoin and 15-25 TPS of Ethereum.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202429 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 29
      }
    }
  },
  {
    "pageContent": "Resource-Efficient DAG Blockchain with Sharding for 6G\nNetworks (2021) [10]\nAim:  The main aim of this paper is to propose a resource-efficient DAG blockchain\nwith sharding to enable secure and scalable resource sharing in 6G networks.\nMethodology used:\nImplement Sharding:The blockchain network is segmented into multiple committees,\neach responsible for a disjoint subset of transactions.  This structure supports\nconcurrent processing and local recording, facilitating rapid and efficient handling of\ntransactions.\nUtilize a Global DAG of Block Headers:To counteract the security challenges posed\nby sharding, all committees maintain a global Directed Acyclic Graph (DAG) of block\nheaders.  This approach minimizes communication overhead by broadcasting block\nheaders instead of full blocks across the network.\nDevelop Computation-Efficient Consensus:A new consensus mechanism leverages\nthe computing power of miners more effectively.  Miners are incentivized with lower\nmining difficulties for proposing resource allocation schemes that optimize based on\nfairness and efficiency criteria.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202430 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 30
      }
    }
  },
  {
    "pageContent": "Resource-Efficient DAG Blockchain with Sharding for 6G\nNetworks (2021) [10]\nComponents of DASH scheme in blockchain\n1.  DAG-Based Blockchain:\nUtilizes a Directed Acyclic Graph (DAG) to enhance scalability by allowing concurrent\nblock creation, although this increases communication and storage demands.\n2.  Sharding:Divides the network into multiple committees that manage and record\ntransactions locally, reducing the need for widespread data broadcast and enhancing\nprocessing efficiency.\n3.  Global DAG Maintenance:Committees maintain a global DAG to ensure\nconsistency across the blockchain, updating and storing block headers to support\nsecure and coherent data across the network.\nFigure: Blockchain for 6G Networks, DASH [10]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202431 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 31
      }
    }
  },
  {
    "pageContent": "Resource-Efficient DAG Blockchain with Sharding for 6G\nNetworks (2021) [10]\nResult:The results demonstrate that the proposed DAG blockchain sharding in\nspectrum sharing systems, applied to a 100 km²area with complex base station\ndistributions, enhances the cost function value and converges optimally when the\nnetwork is divided into four large committees.  Additionally, the improved Proof of\nWork (PoW) algorithm significantly enhances spectrum allocation utility and\nefficiency, consistently outperforming the traditional PoW by incentivizing miners to\npropose more effective spectrum allocation schemes.\nFigure: Comparsion of the utility of proposed approach and PoW. [10]\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202432 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 32
      }
    }
  },
  {
    "pageContent": "Resource-Efficient DAG Blockchain with Sharding for 6G\nNetworks (2021) [10]\nLimitations:  The following points highlight the key limitations of sharding as a\nblockchain scaling solution.\nComplex Transaction Management:High overhead from managing complex\ncross-shard transactions reduces throughput.\nSecurity and Load Balancing Issues:Security risks due to uneven workload\ndistribution and fewer nodes per shard.\nOperational and Standardization Challenges:Difficulties in cross-shard\ncommunication and lack of sharding standardization complicate operations.\nConclusion:The article discusses a DAG blockchain with sharding optimized for 6G\nnetworks, highlighting its superior throughput, reduced maintenance costs, and\nimproved security over traditional PoW blockchains.  It successfully enhanced\nspectrum efficiency and computation economy in spectrum-sharing applications.\nNonetheless, the transition to 6G introduces issues like scalability and adaptation to\ndiverse resources, potentially impacting blockchain consistency and the need for\ntailored data recording services.  The study underscores the necessity for continued\nresearch to balance security and performance, particularly in managing\ndelay-sensitive transactions with fewer blocks in the DAG.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202433 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 33
      }
    }
  },
  {
    "pageContent": "Conclusion\nTable: Comparison of Research Papers on RIS Technologies\nAuthorContributionsLimitations\nHung  Dang  et\nal.[1]\nImprovementinshard\nthroughput   and   transaction\nprotocolsforlarge-scale\nworkloads\nChallengesindistributed\ntransactionsupportand\nfailure  models  in  blockchain\ncompared to databases\nAlex Manuskin\net al.[2]\nIntroduction   of   Ostraka   ar-\nchitectureforscalingse-\ncurity    and    performance    in\nblockchain\nDesign  challenges  in  scalabil-\nity  and  resource  distribution\nunder increasing demand\nZicongHong\net al.[3]\nIntroductionofalay-\neredshardingsystemfor\nblockchain   with   support   for\ncross-shard transactions\nHigh conflict ratios leading to\nfrequent transaction aborts\nZheng   Xu   et\nal.[4]\nDevelopment  of  TxChain  for\nimproved   scalability   and   la-\ntency, with a novel consensus\nmechanism\nConcerns  over  consensus  se-\ncurity  and  high  communica-\ntion overhead in scalability\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202434 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 34
      }
    }
  },
  {
    "pageContent": "Conclusion\nAuthorContributionsLimitations\nZhongteng Cai\net al.[5]\nShardingarchitecturewith\nenhanced cross-shard cooper-\nation  and  verification  mecha-\nnisms\nLimited  cooperation  in  con-\nsensus  among  shards,  and  is-\nsues with TEE deployment af-\nfecting performance\nLaizhongCui\net al.[6]\nHigh throughput and security\nin blockchain for IIoT via the\nCoDAG protocol\nEfficiency   and   fast   consen-\nsus  challenges  in  traditional\nblockchains and IIoT systems\nCanhuiChen\net al.[7]\nTIPSprotocoltoreduce\ntransactioncollisionand\ndefend    against    attacks    in\nDAG-based blockchain\nComputational and communi-\ncation overhead introduced.\nTianyu    Wang\net al.[8]\nExamination  of  IOTA’s  per-\nformanceinIoTthrough\nbenchmarks and experimental\nstudies\nIssues    with    scalability    and\ntransaction  fees  in  IoT  envi-\nronments\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202435 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 35
      }
    }
  },
  {
    "pageContent": "Conclusion\nAuthorContributionsLimitations\nNainaQiet\nal.[9]\nProposed    DAG-BLOCK    for\nmarkets with open blocks and\nsegmented market structure.\nFaces challenges with security\nvulnerabilities   and   untested\nconsensus    mechanisms,re-\nquiring   further   development\nand validation\nJinXieet\nal.[10]\nSharding and DAG blockchain\napplied to 6G networks for en-\nhanced  throughput  and  cost\nefficiency\nScalability  and  security  chal-\nlenges in block generation and\nconsensus\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202436 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 36
      }
    }
  },
  {
    "pageContent": "Research Proposal\nTaking all the insights from the papers, after analysis the research gaps, technical\nrequirements, future research could include the following hot topics.This research\nproposal details a multi-pronged strategy to enhance blockchain scalability and\nthroughput through the following technical innovations:\nHybrid Consensus Mechanism:Utilizes Byzantine Fault Tolerance (BFT)\nalgorithms within shards for fast processing and a Proof-of-Stake (PoS) system\nacross shards for robust security and synchronization.\nIntra-Shard Efficiency:Within each shard, a BFT-like consensus algorithm enables\nrapid agreement among nodes by requiring only a subset to verify transactions,\nsignificantly speeding up the consensus process.\nCross-Shard Security:The PoS mechanism governs shard interactions and\nsynchronization, ensuring ledger accuracy across the network.  This is crucial for\nmaintaining transaction integrity across shards, addressing a common challenge in\nsharded systems.\nThroughput Enhancement:By separating transaction verification and inter-shard\ncommunication duties, the hybrid model permits each network segment to function\noptimally without delays, thus significantly enhancing overall throughput.\nOptimized transaction propagation:Improve the efficiency of transaction\npropagation and synchronization across the DAG network.  Techniques like compact\ntransaction representations, intelligent gossiping protocols, and topology-aware\nrouting can help reduce the communication overhead and latency while ensuring\nreliable and consistent transaction dissemination\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202437 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 37
      }
    }
  },
  {
    "pageContent": "References I\n[1]H. Dang, T. T. A. Dinh, D. Loghin, E.-C. Chang, Q. Lin, and B. C. Ooi, “Towards scaling blockchain systems via sharding,”\ninProceedings of the 2019 International Conference on Management of Data, ser. SIGMOD ’19.New York, NY, USA:\nAssociation for Computing Machinery, 2019, p. 123–140. [Online]. Available:  https://doi.org/10.1145/3299869.3319889\n[2]A. Manuskin, M. Mirkin, and I. Eyal, “Ostraka:  Secure blockchain scaling by node sharding,” in2020 IEEE European\nSymposium on Security and Privacy Workshops (EuroSPW), 2020, pp. 397–406.\n[3]Z. Hong, S. Guo, and P. Li, “Scaling blockchain via layered sharding,”IEEE Journal on Selected Areas in Communications,\nvol. 40, no. 12, pp. 3575–3588, 2022.\n[4]Z. Xu, R. Jiang, P. Zhang, T. Lu, and N. Gu, “Txchain:  Scaling sharded decentralized ledger via chained transaction\nsequences,” inDatabase Systems for Advanced Applications: 27th International Conference, DASFAA 2022, Virtual Event,\nApril 11–14, 2022, Proceedings, Part I.Berlin, Heidelberg:  Springer-Verlag, 2022, p. 333–340. [Online]. Available:\nhttps://doi.org/10.1007/978- 3- 031- 00123- 9\n27\n[5]Z. Cai, J. Liang, W. Chen, Z. Hong, H.-N. Dai, J. Zhang, and Z. Zheng, “Benzene:  Scaling blockchain with\ncooperation-based sharding,”IEEE Transactions on Parallel and Distributed Systems, vol. 34, no. 2, pp. 639–654, 2023.\n[6]L. Cui, S. Yang, Z. Chen, Y. Pan, M. Xu, and K. Xu, “An efficient and compacted dag-based blockchain protocol for\nindustrial internet of things,”IEEE Transactions on Industrial Informatics, vol. 16, no. 6, pp. 4134–4145, 2020.\n[7]C. Chen, X. Chen, and Z. Fang, “Tips:  Transaction inclusion protocol with signaling in dag-based blockchain,”IEEE\nJournal on Selected Areas in Communications, vol. 40, no. 12, pp. 3685–3701, 2022.\n[8]T. Wang, Q. Wang, Z. Shen, Z. Jia, and Z. Shao, “Understanding characteristics and system implications of dag-based\nblockchain in iot environments,”IEEE Internet of Things Journal, vol. 9, no. 16, pp. 14 478–14 489, 2022.\n[9]N. Qi, Y. Yuan, and F.-Y. Wang, “Dag-block:  A novel architecture for scaling blockchain-enabled cryptocurrencies,”IEEE\nTransactions on Computational Social Systems, vol. 11, no. 1, pp. 378–388, 2024.\n[10]   J. Xie, K. Zhang, Y. Lu, and Y. Zhang, “Resource-efficient dag blockchain with sharding for 6g networks,”IEEE Network,\nvol. PP, pp. 1–8, 11 2021.\nMounica Sruthi 2020IMT-061   Rishabh Kumar 2020IMT-078   Shikhar Gupta 2020IMT-090   Shreshth Goyal 2020IMT-094(ABV-IIITM)April 19, 202438 / 38",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_ppt__Version_1366_.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scalability in Blockchain using Node Sharding and Directed Acyclic Graphs.  [5pt]",
          "Author": " Mounica Sruthi 2020IMT-061  Rishabh Kumar 2020IMT-078  Shikhar Gupta 2020IMT-090  Shreshth Goyal 2020IMT-094  ",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with Beamer class",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191833Z",
          "ModDate": "D:20240419191833Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 38
      },
      "loc": {
        "pageNumber": 38
      }
    }
  },
  {
    "pageContent": "State of the Art Review Paper: Scalability in\nBlockchain using Node Sharding and Directed\nAcyclic Graphs.\nMounica Sruthi\n2020IMT-061\nABV-IIITM Gwalior\nGwalior, India\nimt\n2020061@iiitm.ac.in\nRishabh Kumar\n2020IMT-078\nABV-IIITM Gwalior\nGwalior, India\nimt\n2020078@iiitm.ac.in\nShikhar Gupta\n2020IMT-090\nABV-IIITM Gwalior\nGwalior, India\nimt\n2020090@iiitm.ac.in\nShreshth Goyal\n2020IMT-094\nABV-IIITM Gwalior\nGwalior, India\nimt\n2020094@iiitm.ac.in\nAbstract—This  research  investigates  ten  pivotal  papers  that\nexplore  Directed  Acyclic  Graphs  (DAGs)  and  node  sharding\ntechniques  to  enhance  blockchain  scalability  for  the  Industrial\nInternet   of   Things   (IIoT)   and   6G   networks.   The   objective\nis   to   overcome   the   limitations   of   traditional   blockchain   ar-\nchitectures,  such  as  low  throughput  and  high  latency,  which\ndo  not  meet  the  requirements  of  high-volume,  real-time  data\nprocessing  in  IIoT  and  6G  applications.  The  study  examines\nthe  adaptations  and  optimizations  of  DAGs  and  sharding  for\nresource-constrained  devices  and  extensive  network  scales  in\nfuture telecommunications and industrial systems. By integrating\nthese technologies, the research reduces transaction confirmation\ntimes  and  enhances  decentralization,  thereby  securing  IIoT  and\n6G   ecosystems   against   various   security   threats.   The   results\nwill  present  current  capabilities,  pinpoint  technology  gaps,  and\nsuggest  future  research  directions  for  developing  robust,  effi-\ncient,  and  scalable  blockchain  frameworks.  This  advancement\nwill  promote  innovation  in  industrial  automation  and  smart\ninfrastructure.\nIndex   Terms—Directed   Acyclic   Graphs,   Node   Sharding,\nBlockchain  Scalability,  Industrial  Internet  of  Things,  6G  Net-\nworks\nI.  INTRODUCTION\nIn   the   rapidly   evolving   world   of   digital   infrastructure,\nblockchain   technology   has   emerged   as   a   cornerstone   for\ndeveloping  secure  and  decentralized  systems.  However,  as\nthe  adoption  of  blockchain  extends  across  various  sectors,\nparticularly in areas requiring high transaction throughput like\nfinancial  services,  healthcare,  and  especially  the  Industrial\nInternet  of  Things  (IIoT)  and  6G  telecommunications,  its\ninherent  scalability  limitations  have  become  increasingly  ap-\nparent. Traditional blockchain architectures often struggle with\nlow  throughput  and  high  latency,  rendering  them  ineffective\nfor high-volume, real-time data processing required in modern\nIIoT and 6G applications.\nTo   address   these   challenges,   recent   advancements   in\nblockchain  scalability  have  focused  on  two  promising  tech-\nnologies:  Directed  Acyclic  Graphs  (DAGs)  and  node  shard-\ning.  DAGs  offer  an  innovative  approach  to  data  structur-\ning  and  validation,  allowing  multiple  transactions  to  coexist\nwithout  awaiting  sequential  block  formation,  thus  enhancing\nthroughput and reducing latency. On the other hand, sharding\npartitions  the  blockchain  into  smaller,  manageable  pieces  or\n”shards,”  each  capable  of  processing  transactions  indepen-\ndently, thereby multiplying the network’s overall capacity.\nThese  technologies  are  not  just  theoretical  enhancements\nbut  are  pivotal  in  the  practical  deployment  of  blockchain\nin  environments  constrained  by  high  data  demands  and  the\nneed  for  rapid  processing.  For  instance,  in  IIoT  settings,\nwhere myriad devices continuously transmit data, the ability to\nquickly process and secure data without bottlenecks is crucial.\nSimilarly,  the  upcoming  6G  networks,  which  promise  even\nhigher  data  rates  and  lower  latency,  necessitate  a  blockchain\nsolution that can match their throughput requirements without\ncompromising security or decentralization.\nThe hybrid structure combining DAGs and sharding presents\na comprehensive solution by leveraging the strengths of both\ntechnologies  to  meet  the  stringent  demands  of  modern  ap-\nplications.  This  hybrid  approach  not  only  promises  to  en-\nhance transaction processing capabilities but also ensures that\nblockchain can scale effectively and securely, maintaining its\nfoundational  principles  of  decentralization  and  trustlessness\nin  more  complex  and  demanding  environments  like  those\nanticipated  with  the  proliferation  of  IIoT  and  the  roll-out  of\n6G networks.\nII.  BACKGROUND\nBlockchain  scalability  is  crucial  for  managing  growing\ntransaction  volumes  in  areas  like  cryptocurrencies  and  smart\ncontracts. As the technology advances alongside developments\nlike  6G,  which  provides  higher  data  rates  and  lower  latency,\nblockchain must adapt to avoid becoming a bottleneck in these\nenhanced communication networks.\nDirected Acyclic Graphs (DAGs) are critical in graph theory.\nThey  feature  directed  edges  and  a  non-cyclical  structure  that\nprevents  returning  to  the  start  vertex.  This  feature  enables\nDAGs  to  optimize  processes  such  as  task  scheduling  and\nblockchain  optimization  by  ensuring  a  logical,  non-repetitive\norder  of  data  processing  critical  for  systems  needing  precise\ndependency resolution.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "Node sharding, a method for enhancing blockchain scalabil-\nity,  partitions  the  network  into  smaller,  independent  ”shards”\nfor  parallel  transaction  processing.  This  increases  capacity\nand  addresses  the  scalability  trilemma  of  balancing  decen-\ntralization,  security,  and  scalability.  However,  it  also  brings\nchallenges  like  maintaining  data  consistency  and  managing\ncommunications between shards.\nIII.  RELATEDWORK\nA. Enhancing Blockchain Scalability through Sharding\nThe  paper  aims  to  address  the  scalability  challenges  of\nblockchain  systems  by  proposing  a  sharding-based  frame-\nwork  [1].  The  researchers  focus  on  enhancing  transaction\nthroughput  by  introducing  improvements  in  Byzantine  con-\nsensus  protocols  and  shard  formation  techniques.  They  aim\nto overcome the limitations of existing systems by leveraging\ntrusted  hardware,  such  as  Intel  SGX,  for  high-performance\nconsensus and secure shard formation.\nFig. 1.   Sharding protocols in traditional databases vs. blockchains. [1]\nResults  from  the  study  demonstrate  significant  advance-\nments in transaction throughput, with over 3,000 transactions\nper second achieved in realistic settings on the Google Cloud\nPlatform. Additionally, the framework maintains high transac-\ntion throughput in multi-region setups with hundreds to thou-\nsands of nodes. However, the paper acknowledges limitations,\nincluding dependence on trusted hardware and complexity in\nprotocol coordination. These limitations raise concerns about\nthe  general  applicability  of  the  framework  in  environments\nlacking  reliable  hardware  and  the  potential  inefficiencies  in\nmanaging distributed transactions across shards.\nB. Node Sharding for Improved Transaction Processing\nIntroducing  a  scalable  blockchain  architecture  aimed  at\nimproving  transaction  processing  efficiency  and  security,  the\npaper  proposes  the  Ostraka  architecture,  which  implements\nnode sharding to distribute transaction processing across node\nshards [2]. Through a distributed block validation mechanism\nand  transaction  distribution  using  hashing  with  unique  node-\nspecific  ”salt,”  the  Ostraka  architecture  achieves  linear  scala-\nbility and ensures comparable security to traditional systems.\nResults from the study demonstrate impressive scaling perfor-\nmance,  achieving  up  to  400k  transactions  per  second,  while\nmaintaining  security  levels  equivalent  to  traditional  systems.\nFig. 2.   Two connected Ostraka nodes, with intra-node connections. [2]\nHowever,  the  paper  identifies  limitations  related  to  resource\nintensity  and  complexity  in  implementation  due  to  the  dis-\ntributed nature of the architecture. These limitations highlight\nchallenges in managing computational resources per node and\nthe  complexity  involved  in  maintaining  and  debugging  the\nsystem.\nC. Layered Sharding for Enhanced Blockchain Scalability\nThe paper presents a novel approach to enhance blockchain\nscalability  through layered  sharding  [3].  The researchers  aim\nto  efficiently  handle  cross-shard  transactions  and  leverage\nadvanced nodes’ capabilities to improve overall network per-\nformance. The methodology involves implementing a layered\nsharding  approach,  where  nodes  operate  in  multiple  shards,\nand  developing  a  cooperative  cross-shard  consensus  mecha-\nnism to validate and execute transactions securely.\nFig. 3.  Illustration for a layered sharding for i-shard A, B and b-shard C. [3]\nResults  from  the  study  indicate  a  significant  improvement\nin  transaction  throughput,  with  up  to  3.2  times  enhancement\ncompared  to  existing  sharding  techniques.  Achieving  around\n3821  transactions  per  second  for  20  shards  demonstrates  the\neffectiveness of the proposed layered sharding approach. How-\never, the paper acknowledges limitations, such as assumptions\nabout  node  distribution  and  capacity,  reliance  on  bridging\nshards’  capability,  and  the  complexity  of  ensuring  consistent\nsecurity  across  all  shards.  These  limitations  emphasize  the\nneed  for  further  research  to  address  challenges  in  practi-\ncal  implementation  and  security  safeguards  against  potential\nbreaches or failures.\nD. Enhancing Sharding Capabilities with Transactional De-\npendencies\nThe  paper  titled  ”TxChain:  Scaling  Sharded  Decentralized\nLedger  via  Chained  Transaction  Sequences”  introduces  Tx-",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "Chain [4], a novel distributed ledger technology that employs\nsharding  to  address  scalability  issues  in  blockchain  systems.\nThe core innovation of TxChain lies in its use of transaction\nsequences  for  each  account,  organized  in  a  Merkle  Patricia\nTree  structure,  to  facilitate  efficient  transaction  processing\nwithin   shards   and   ensure   accurate   synchronization   across\nthem.  This  design  allows  for  parallel  transaction  processing,\nwhich significantly boosts throughput. According to the find-\nings,  doubling  the  number  of  shards  results  in  a  throughput\nincrease  of  approximately  1.59  to  1.89  times  as  can  be  seen\nfrom  Fig  4,  demonstrating  the  system’s  scalability.  However,\nthe  scalability  benefits  diminish  with  additional  shards  due\nto the complexities and overhead associated with maintaining\ncomplete ledger copies across all shards.\nFig. 4.   Throughput Scalability (Throughput vs Number of shards) [4]\nMoreover,  the  paper  discusses  the  challenges  associated\nwith  TxChain,  including  the  scalability  of  storage  due  to  the\nreplication of the entire ledger in each shard and the complex-\nities involved in managing transactions across different shards.\nThese aspects introduce significant overheads that could hinder\nperformance  as  the  network  expands.  Using  a  Transaction\nSequence  Conversion  (TSC)  consensus  mechanism  is  a  piv-\notal element in maintaining transaction order and consistency\nacross  the  network,  showcasing  a  sophisticated  approach  to\nmanaging shard consistency without excessive communication\noverhead [4].\nE. Cooperation-Based Sharding Architecture\nThe paper ”Benzene: Scaling Blockchain with Cooperation-\nBased  Sharding”  introduces  a  novel  sharding  approach  in\nblockchain   technology   that   enhances   system   performance\nthrough  a  cooperative  consensus  mechanism  among  shards,\ndeviating  from  traditional  non-cooperative  frameworks  [5].\nIn  this  model,  a  dual-chain  architecture  separates  transaction\nrecording  and  consensus  execution  into  proposer  and  vote\nchains,  respectively,  facilitating  parallel  processing  while  en-\nsuring security and fault tolerance [5]. Cross-shard verification\nis  performed  by  nodes  equipped  with  Trusted  Execution  En-\nvironments  (TEEs),  which  validate  blocks  from  other  shards\nand provide validation proofs, depicted by dotted blue arrows\nin  Fig.  5.  Additionally,  miners  across  all  shards  engage  in  a\ncross-shard  voting  consensus,  using  TEE  proofs  to  vote  and\nconfirm  the  most  supported  block,  as  illustrated  by  solid  red\narrows. The integration of TEEs within each shard optimizes\nthe   validation   process   by   providing   transaction   validation\nproofs  from  other  shards,  reducing  the  load  on  individual\nnodes and enhancing throughput efficiency. According to the\nstudy,  Benzene  achieves  a  significant  throughput  of  32,370\ntransactions  per  second  with  50  shards,  markedly  surpassing\ntraditional systems like Bitcoin [5].\nFig. 5.   Architecture of Benzene [5]\nThe  paper  compares  the  confirmation  latency  of  Benzene\nto  a  Bitcoin-like  system  across  various  shard  counts,  noting\nBenzene’s  efficient  scalability  with  latency  stabilizing  at  low\nlevels up to 200 shards, while the Bitcoin-like system achieves\nsimilar stability only beyond 50 shards [5]. It also highlights\npotential security vulnerabilities in Benzene due to reliance on\nTEEs, which are susceptible to attacks like rollbacks, and notes\na  scalability  plateau  in  throughput  at  around  400  shards  due\nto the limited number of available TEEs, indicating a critical\nsystem limitation under larger network conditions [5].\nF. Compacted DAG Technique to Scale Blockchain\nThe   paper   ”An   Efficient   and   Compacted   DAG-Based\nBlockchain  Protocol  for  Industrial  Internet  of  Things”  in-\ntroduces  CoDAG,  a  blockchain  protocol  optimized  for  IIoT\nusing  a  compacted  DAG  architecture  to  enhance  scalability\nand transaction speed [6]. CoDAG enables multiple concurrent\nblock appendings, achieving a throughput of 1151 transactions\nper second, significantly outperforming traditional blockchains\nlike  Bitcoin  and  Ethereum.  It  organizes  IIoT  devices  into\nminers  and  gateways  to  optimize  data  flows  and  includes\nmultiple  operational  layers  like  the  DApp  and  Chain  Layers\nto support decentralized applications and ensure data integrity\n[6].CoDAG’s architecture proposed by the authors as shown in\nFig. 6 systematically leverages the heterogeneous capabilities\nof  various  IIoT  devices  by  categorizing  them  into  miners,\ngateways, and nodes, each performing roles aligned with their\ncomputational and communication capacities. Miners maintain\nthe ledger, while gateways facilitate transaction and data flows,\nthus  optimizing  the  network’s  resource  use  and  operational\nefficiency  [6].  In  experimental  conditions,  CoDAG  reached\n1151 transactions per second (tps) with a block size of 2 MB\nand  a  width  of  15,  a  performance  which  is  164  times  the\nthroughput of Bitcoin and 77 times that of Ethereum.\nHowever,  the  protocol  is  noted  to  suffer  from  instability\nunder  high  transaction  rates  potentially,  and  struggles  with",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "Fig. 6.   Implementation Framework with CoDag [6]\nlarge  data  volumes  remain  a  concern.  The  authors  suggest\nfuture work will focus on these limitations, aiming to enhance\nthe security and throughput of CoDAG further. This research\ncontributes  a  pivotal  advancement  in  blockchain  technology,\noffering  a  scalable  and  efficient  solution  potentially  transfor-\nmative for IIoT frameworks.\nG. Signaling Protocol to Scale DAG-based Blockchains\nThe  paper  introduces  a  novel  approach  to  tackle  the  core\nissues  of  revenue  and  throughput  dilemmas  in  DAG-based\nblockchain systems [7]. TIPS swiftly disseminates transaction\ndata  across  the  network  by  incorporating  a  Bloom  filter  into\nthe  block  header.  This  strategy  reduces  transaction  inclusion\ncollisions,  which  typically  hamper  system  performance  by\ndividing rewards among miners and impeding throughput due\nto increased propagation delays.\nTIPS’s core innovation lies in separating the block header’s\ntransmission,  which  contains  the  Bloom  filter  signal,  from\nthe   block   body.   This   separation   enables   rapid   spread   of\ncrucial  transaction  inclusion  data,  allowing  miners  to  adjust\ntheir  transaction  inclusion  strategies  in  advance  to  prevent\ncollisions.  This  method  not  only  enhances  miner  revenues\nby  facilitating  the  inclusion  of  high-fee  transactions  without\nthe  risk  of  collision  but  also  boosts  system  throughput  by\nsupporting larger block sizes without corresponding increases\nin propagation delay. The researchers thoroughly analyze the\narchitecture  and  potential  impacts  of  TIPS  through  game-\ntheoretic  methods  and  simulations,  illustrating  that  TIPS  can\nresolve the prevalent revenue and throughput issues in current\nDAG-based  blockchain  systems.  They  provide  experimental\nproof that TIPS achieves near-optimal block capacity utiliza-\ntion  and  significantly  improves  system  throughput  compared\nto conventional protocols. TIPS can achieve a block capacity\nutilization of around 90% and can provide a system throughput\n(TPS) that is up to 5 times higher than the standard protocol.\nHowever,  the  study  recognizes  certain  limitations,  such  as\nthe  computational  and  communication  overhead  introduced\nby  the  Bloom  filter-based  signaling.  Additionally,  although\nthe Bloom filter effectively minimizes false positives, it does\nnot  completely  eradicate  them,  potentially  leading  to  slight\ninaccuracies  in  transaction  signaling.  Due  to  these  overheads\nit is also not well suited for IOT environments.\nH. Evaluating IOTA: a DAG-based Blockchain for IOT Envi-\nronments\nThe study in [8] explores the suitability of IOTA, a DAG-\nbased  blockchain,  for  Internet  of  Things  (IoT)  environments,\nidentifying  several  limitations  of  traditional  blockchain  sys-\ntems  like  Bitcoin  and  Ethereum,  including  low  transactions\nper second (TPS), substantial computation demands, and high\ncosts.  These  constraints  render  such  systems  impractical  for\nIoT  applications,  which  require  high  throughput  and  low\nlatency.  The  paper  presents  a  methodological  approach  by\nsetting  up  a  private  IOTA  network  involving  35  Intel  NUCs\nto  simulate  an  IoT  ecosystem.  This  setup  included  various\nfunctionalities  like  an  automatic  transaction  initiator,  a  real-\ntime status monitor, and a double-spending attacker, enhancing\nthe realism of the network testing. The architecture of IOTA, as\nFig. 7.   Private IOTA System Architecture [8]\nshown in Fig.7, leverages a DAG structure called the Tangle,\nwhere  each  transaction  forms  a  node.  This  structure  allows\nfor higher scalability and throughput by enabling transactions\nto  process  other  transactions,  thus  potentially  offering  a  su-\nperior  solution  for  IoT  scenarios,  which  demand  handling\nlarge volumes of micro-transactions swiftly. The experimental\nresults  from  the  paper  illustrate  that  IOTA  can  manage  a\nsystem  throughput  of  about  25  TPS  with  optimal  conditions\nbut noted a slight decrease in performance when the network is\nscaled up. It also demonstrated robustness in handling network\nattacks like double-spending and off-syncing, showcasing re-\ncovery capabilities with a decent recovery speed.\nHowever,  the  study  highlighted  several  limitations.  One\nsignificant  issue  is  the  increased  network  synchronization\noverhead  when  adding  more  full  nodes,  which  affects  the\nsystem’s scalability and acts as a bottleneck. Another critical\npoint is the reliance on a Coordinator node, which introduces\na   point   of   centralization   and   a   potential   single   point   of\nfailure,  thus  deviating  from  the  decentralized  nature  sought\nin  blockchain  technologies.  These  findings  suggest  areas  for",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "potential improvement in ensuring IOTA’s architecture can be\nreliably  decentralized  while  maintaining  its  performance  and\nrobustness in larger scaled IoT environments.\nI. Modifying Block Structure for Scalability\nFig. 8.   DAG Block Structure [9]\nThe paper [9] proposes an innovative solution to the limita-\ntions faced by traditional blockchain systems such as Bitcoin,\nwhich  struggle  with  low  transactions  per  second  (TPS)  and\nhigh  latency.  This  research  is  particularly  timely,  as  these\nshortcomings  present  significant  hurdles  in  cryptocurrency\nmarkets.  The  DAG-BLOCK  architecture,  shown  in  Fig.  8\nleverages  a  DAG  within  each  block  to  facilitate  simulta-\nneous  transaction  processing,  aiming  to  preserve  the  linear\nchain  structure  while  controlling  DAG  size.  This  approach\nintroduces  ”open  blocks,”  allowing  user  nodes  to  partake  in\ntransaction  verification,  thereby  reducing  miners’  load  and\ndecentralizing  the  process  further.  The  architecture  outlined\nin  the  paper  is  dual-layered,  as  shown  in  Fig.  9  mixing\ndecentralized  peer-to-peer  networks  with  centralized  compo-\nnents,  where  each  miner  caters  to  a  specific  user  segment,\ndiminishing  the  breadth  of  transactions  they  manage.  This\nsegmentation  is  designed  to  cut  down  on  the  communication\noverhead  and  security  vulnerabilities  that  could  arise  from\nincreased user participation in the verification process.\nEmpirical  results  are  encouraging,  with  the  DAG-BLOCK\nsystem  reducing  transaction  confirmation  times  to  mere  sec-\nonds  and  achieving  throughputs  between  50-100  TPS,  far\nexceeding  the  capabilities  of  Bitcoin  and  Ethereum.  Where\nIOTA’s  performance  declined  with  additional  nodes,  DAG-\nBLOCK’s architecture provides a systematic solution to man-\nage  network  growth  and  maintain  high  throughput,  offering\nan  intriguing  alternative  for  scaling  blockchain  systems  in\ncryptocurrency  markets.  Despite  these  advancements,  there\nare noted limitations. The segmentation of markets introduces\nFig. 9.   Network Market Architecture [9]\ncomplexities in managing synchrony, and increased user par-\nticipation  may  lead  to  added  communication  overhead  and\npotential security risks.\nJ. Blockchain for 6G network\nThe    study    by    [10]    introduces    a    novel    DAG-based\nBlockchain  SHarding  (DASH)  scheme  to  tackle  scalability\nand  security  issues  in  6G  networks.  This  approach  utilizes\nsharding  for  efficient  data  recording  and  a  Directed  Acyclic\nGraph (DAG) for secure blockchain updates, aiming to boost\ntransaction  throughput  and  resource  efficiency.  A  significant\nfeature is the use of a global DAG by each sharding committee,\nwhich records all block existences for mutual verification and\nbroadcasts  only  block  headers  to  minimize  communication\noverhead. The architecture ensures the integrity of transactions\nand employs a computationally efficient consensus algorithm\nto optimize miner efforts and resource use [10].\nAdditionally,  the  paper  describes  implementing  the  DASH\nsystem in a spectrum-sharing context, starting with a genesis\nblock   that   announces   public   keys   and   licensed   bands   of\nincumbents.  Through  smart  contracts,  the  network  is  divided\ninto  committees,  setting  up  spectrum-sharing  policies  and\nprotecting incumbents. This paper details the spectrum-sharing\nprocess,  from  base  station  requests  to  frequency  band  access\nauthorization.  The  resource-efficient  consensus  algorithm  en-\ncourages miners to devise spectrum allocation strategies focus-\ning on fairness and efficiency rather than solving hash puzzles.\nThis  approach  not  only  improves  fairness  and  efficiency  in\nspectrum-sharing  but  also,  as  demonstrated  in  the  illustrative\nresults (fig 10), allows for more effective spectrum allocation\nand  higher  network  utility  compared  to  traditional  Proof  of\nWork (PoW) blockchain methods [10].\nTable I provided offers a comparative study of all the papers\nbased  on  the  literature  review.  It  compares  each  study,  with\ntheir  methodologies,  technology  used,  novelty  highlighting\ndifferences and similarities in approaches to blockchain tech-\nnology,  scalability,  and  integration  with  real  life  applications\nlike   IIoT   and   6G.   This   comparison   allows   for   a   clearer\nunderstanding of the current research landscape and identifies\npotential areas for future investigation.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "TABLE I\nCOMPARISON OFRESEARCHPAPERS ONSCALABILITY  INBLOCKCHAIN\nSerial\nNo.\nConference\nand  Year\nTechnique\nUsed\nTechnology  UsedSoftware   and   Hard-\nware  Used\nRealWorld\nApplication\nNoveltyLimitations   and   Fu-\nture  Scope\n1IEEEICC\n2021\nDirected\nAcyclic\nGraph  (DAG)\nwith  sharding\n[10]\nDAG  blockchain  and\nsharding  enhance  6G\nnetwork    capabilities;\nincludes decentralized\nstorage access.\nSoftware   for   6G   net-\nworks;    hardware    un-\nspecified.\nImproves\nenergyand\ndata  sharing  in\n6G;enhances\nspectrum\nmanagement\nefficiency.\nCombines DAG\nwithsharding\nfor    scalability;\nintroduces\nefficient\nconsensus\nandfederated\nlearningin\nblockchain.\nChallengesin\nblockchain   consistency\nandsecurity-\nperformance   trade-offs\nneed further study.\n2IEEE  TCSS\n2024\nWeighted    tip\nselection   and\ncryptography\nlottery\nprotocol\n[9]\nUsescryptography\nfor    miner    selection\nandtransaction\nverification  to  prevent\ndouble-spending.\nFocuses   on   scalability\nand  consensus  in  cryp-\ntocurrency markets.\nEnsures   secure\ntransactions\nandconsistent\nstate\nsynchronization\nincryptocur-\nrencies.\nIntroduces  ran-\ndom  leader  se-\nlection and dust\ntransaction  pre-\nvention.\nNeeds improvements in\nscalability  and  ongoing\nsecurity against double-\nspending.\n3IEEE    IoT-J\n2022\nDAG-based\napproaches\nfor IoT [8]\nUses  IOTA  and  tradi-\ntional  blockchain  sys-\ntems;   evaluates   IoT\nsecurity.\nGPU,FPGA,ASIC,\nReRAM;  IOTA  system\nsetups.\nAnalyzesIoT\nsecurityand\nrobustness;\naidssystem\narchitects.\nExamines\nIOTA’s\nperformance\nandsuggests\noptimization\nfor IoT.\nAimstoenhance\ndatabaseperformance\nandspeedup\nvalidations.\n4IEEE   JSAC\n2022\nTransaction\nInclusion\nProtocol   with\nSignaling\n(TIPS) [7]\nEmploys   Bloom   fil-\nters  to  manage  false\npositives   in   transac-\ntion signaling.\nUses Bloom filters; val-\nidated  through  theoret-\nical   and   experimental\nmeans.\nEnhances\ntransaction\nefficiencyand\nsecurityin\nblockchain\nsystems.\nReduces\ncollisionand\ndefends  against\nservice  attacks;\nanalyzes\nminers’ revenue\nstrategies.\nFuture  work  on  signal\nsimplification   and   dy-\nnamic  miner  strategies\nneeded.\n5IEEETII\n2020\nCompact\nDAG\n(CoDAG)\nprotocol [6]\nCombines   PoW   and\nByzantine   agreement\nin  a  hybrid  consensus\nfor IIoT.\nImplemented   for   IIoT\nefficiency;CoDAG-\nbased architecture.\nImproves\nIIoTsystem\nefficiency\nandservice\nreliability.\nAchieves    high\nthroughput;  en-\nhances  IIoT  ar-\nchitecture   effi-\nciency.\nFuture  work  to  explore\nhybrid  consensus  more\ndeeply.\n6IEEE  TPDS\n2023\nCooperation-\nbasedPoW\nsharding [5]\nEmploys  ECDSA  and\nSHA-256  in  Benzene\nprototype;   uses   Intel\nSGX.\nPython   and   MPI   for\nparallel node operation.\nBenzene\nimproves\nperformance\nand    scalability\nin blockchain.\nIntroduces\ndouble-chain\narchitecture and\nfault-tolerant\ncross-shard\nverification.\nNeedsbettercross-\nshard cooperation; faces\nsecurity challenges.\n7DASFAA\n2022\nTransaction\nSequence\nConversion\n(TSC) [4]\nUses  sharding  and  a\nTSC-based consensus;\nGolang for implemen-\ntation.\nGolang  on  Intel  Xeon\nCPUs;distributed\nacrossmultiple\nmachines.\nSuitable\nforscalable\ndecentralized\nledgers.\nIntroduces\nanovelDL\nwithhigh\nscalability    and\nlow latency.\nPointsout\ninconsistenciesin\nDAG-based  DLs;  calls\nfordatastructure\nimprovement.\n8IEEE   JSAC\n2022\nLayered\nshardingvia\nCoSplit [3]\nUtilizes collective sig-\nnatures and trusted ex-\necution for sharding.\nAmazonEC2\nmachines;secure\nparameterssetfor\ntesting.\nAids\nblockchain\nscalability    and\nthroughputon\nEthereum.\nEnhances\nperformance\nwitharelay\nmechanism\nfor   cross-shard\ntransactions.\nLacksdiscussionon\nlimitations; future work\nnot specified.\n9IEEES&P\n2021\nOstraka   node\nsharding    and\nblock   valida-\ntion [2]\nUTXOmodel;\ndeterministic\ntransaction mapping.\nUtilizestheUTXO\nmodel;testedwith\nvarious node setups.\nEnhances\nblockchain\nscalability\nandsecurity\nwithout    losing\nconsensus\nquality.\nMaintains\nperformance\nandsecurity\nwithscalable\nnode\narchitecture.\nFocuses  on  optimizing\nnode-sharding\ntechniques    for    future\nperformance gains.\n10SIGMOD\n2019\nAttested\nHyperLedger\n(AHL)\nprotocol\n[1]\nImplements  SGX  for\nsecure sharding in Hy-\nperledger Fabric.\nUses    Intel    SGX    on\nXeon CPUs; local clus-\nter setup.\nImproves\ntransaction\nthroughputin\npermissioned\nblockchain\nsystems.\nEnhances\nthroughput\nandsecurity\ninsharding;\nextensive\nprotocol\nevaluation.\nAims to overcome BFT\nscalability   issues   and\nimprove shard security.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "Fig. 10.   Comparsion of the utility of proposed approach and PoW. [10]\nIV.  RESEARCHGAPS\nIn   reviewing   the   discussed   research   papers   on   scaling\nblockchain  using  various  techniques,  we  identify  key  areas\nfor future research and methodological advancements:\n•Security  and  Robustness  of  Consensus  Mechanisms:\nExisting   research   highlights   security   concerns   with\nsharded  and  DAG-based  blockchains.  A  hybrid  consen-\nsus  mechanism  is  proposed,  combining  Byzantine  Fault\nTolerance (BFT) within shards for quick processing and\nProof-of-Stake  (PoS)  across  shards  to  enhance  security\nand synchronization.\n•Cross-Shard Transaction Integrity and Efficiency:Is-\nsues with efficient cross-shard transactions and maintain-\ning  ledger  accuracy  are  prevalent.  Strengthening  cross-\nshard  security  through  PoS  mechanisms  and  improving\nintra-shard  efficiency  with  BFT-like  algorithms  could\nfacilitate rapid consensus among nodes and enhance the\nnetwork’s performance.\nThese research areas aim to enhance blockchain scalability,\nthroughput, and security, crucial for deployment in large-scale,\ndemanding settings.\nV.  CONCLUSION\nThis review discusses the enhancement of blockchain scal-\nability  through  the  integration  of  Directed  Acyclic  Graphs\n(DAGs) and node-sharding techniques. These methods address\nthe  high  throughput  and  low  latency  demands  of  the  Indus-\ntrial  Internet  of  Things  (IIoT)  and  6G  networks,  with  DAGs\nreducing  transaction  confirmation  times  to  boost  throughput,\nand node sharding distributing the processing load to enhance\nsystem efficiency and security. The review also highlights per-\nsistent scalability challenges in consensus algorithms and the\ndifficulty  of  maintaining  blockchain  integrity  across  various\napplications.\nFuture research should develop advanced hybrid consensus\nmodels  that  merge  Proof  of  Stake  (PoS)  with  Byzantine\nFault  Tolerance  (BFT)  to  improve  scalability  and  robustness.\nInnovating  transaction  protocols  will  be  key  for  enhancing\nnetwork  performance  and  facilitating  seamless  cross-shard\ntransactions.  These  optimizations  are  crucial  for  blockchain\nevolution  to  support  broad  6G  networks  and  advanced  IIoT\nframeworks, aiming to minimize communication overhead and\nboost transactional integrity across shards, thereby maximizing\nblockchain’s potential in next-generation networks and appli-\ncations.\nVI.  PROPOSED METHODOLOGY\nTaking  all  the  insights  from  the  papers,  after  analysis  the\nresearch  gaps,  technical  requirements,  future  research  could\ninclude the following hot topics.This research proposal details\na  multi-pronged  strategy  to  enhance  blockchain  scalability\nand throughput through the following technical innovations:\n•Hybrid  Consensus  Mechanism:Combines  Byzantine\nFault Tolerance (BFT) within shards for faster transaction\nprocessing  and  Proof-of-Stake  (PoS)  across  shards  to\nenhance  security  and  synchronization.  BFT  accelerates\nconsensus by allowing some nodes to verify transactions,\nboosting intra-shard efficiency, while PoS manages inter-\nshard interactions, ensuring ledger accuracy and increas-\ning overall throughput.\n•Optimized  transaction  propagation:Improve  the  ef-\nficiency  of  transaction  propagation  and  synchronization\nacross the DAG network. Techniques like compact trans-\naction   representations,   intelligent   gossiping   protocols,\nand topology-aware routing can help reduce the commu-\nnication overhead and latency while ensuring reliable and\nconsistent transaction dissemination\nREFERENCES\n[1]  H. Dang, T. T. A. Dinh, D. Loghin, E.-C. Chang, Q. Lin, and B. C. Ooi,\n“Towards Scaling Blockchain Systems via Sharding,” inProceedings of\nthe 2019 International Conference on Management of Data (SIGMOD\n’19), New York, NY, USA: Association for Computing Machinery, 2019,\npp. 123–140.\n[2]  A.  Manuskin,  M.  Mirkin,  and  I.  Eyal,  “Ostraka:  Secure  Blockchain\nScaling  by  Node  Sharding,”  in2020 IEEE European Symposium on\nSecurity and Privacy Workshops (EuroS&PW), 2020, pp. 397–406.\n[3]  Z. Hong, S. Guo, and P. Li, “Scaling Blockchain via Layered Sharding,”\nIEEE Journal on Selected Areas in Communications, vol. 40, no. 12, pp.\n3575–3588, 2022.\n[4]  Z. Xu, R. Jiang, P. Zhang, T. Lu, and N. Gu, “TxChain: Scaling Sharded\nDecentralized Ledger via Chained Transaction Sequences,” inDatabase\nSystems for Advanced Applications: 27th International Conference,\nDASFAA 2022, Virtual Event, April 11–14, 2022, Proceedings, Part I,\nBerlin, Heidelberg: Springer-Verlag, 2022, pp. 333–340.\n[5]  Z. Cai, J. Liang, W. Chen, Z. Hong, H.-N. Dai, J. Zhang, and Z. Zheng,\n“Benzene: Scaling Blockchain With Cooperation-Based Sharding,”IEEE\nTransactions on Parallel and Distributed Systems,  vol.  34,  no.  2,  pp.\n639–654, 2023.\n[6]  L. Cui, S. Yang, Z. Chen, Y. Pan, M. Xu, and K. Xu, “An Efficient and\nCompacted  DAG-Based  Blockchain  Protocol  for  Industrial  Internet  of\nThings,”IEEE Transactions on Industrial Informatics,  vol.  16,  no.  6,\npp. 4134–4145, 2020.\n[7]  C. Chen, X. Chen, and Z. Fang, “TIPS: Transaction Inclusion Protocol\nWith  Signaling  in  DAG-Based  Blockchain,”IEEE Journal on Selected\nAreas in Communications, vol. 40, no. 12, pp. 3685–3701, 2022.\n[8]  T.  Wang,  Q.  Wang,  Z.  Shen,  Z.  Jia,  and  Z.  Shao,  “Understanding\nCharacteristics  and  System  Implications  of  DAG-Based  Blockchain  in\nIoT Environments,”IEEE Internet of Things Journal, vol. 9, no. 16, pp.\n14478–14489, 2022.\n[9]  N. Qi, Y. Yuan, and F.-Y. Wang, “DAG-BLOCK: A Novel Architecture\nfor  Scaling  Blockchain-Enabled  Cryptocurrencies,”IEEE Transactions\non Computational Social Systems, vol. 11, no. 1, pp. 378–388, 2024.\n[10]  J.  Xie,  K.  Zhang,  Y.  Lu,  and  Y.  Zhang,  “Resource-Efficient  DAG\nBlockchain  with  Sharding  for  6G  Networks,”IEEE Network,  vol.  PP,\npp. 1–8, Nov. 2021.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\RM_Report (5).pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Creator": "TeX",
          "Producer": "pdfTeX-1.40.25",
          "CreationDate": "D:20240419191914Z",
          "ModDate": "D:20240419191914Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 7
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO.12, DECEMBER 20223575\nScaling Blockchain via Layered Sharding\nZicong Hong,Graduate Student Member, IEEE, Song Guo,Fellow, IEEE,\nand Peng Li\n,Senior Member, IEEE\nAbstract— As  a  promising  solution  to  blockchain  scalability,\nsharding   divides   blockchain   nodes   into   small   groups   called\nshards,  splitting  the   workload.   Existing  works   for   sharding,\nhowever,   are   limited   by  cross-shard   transactions,   since   they\nneed  to  split  each  cross-shard  transaction  into  multiple  sub-\ntransactions,  each  of  which  costs  a  consensus  round  to  commit.\nIn  this  paper,  we  introduce  P\nYRAMID,  a  novel  sharding  system\nbased  on  the  idea  of  layered  sharding.  In  P\nYRAMID,  the  nodes\nwith  better  hardware  are  allowed  to  participate  in  multiple\nshards  and  store  the  blockchains  of   these  shards  thus  they\ncan  validate  and  execute  the  cross-shard  transactions  without\nsplitting.   Next,   to   commit   the   cross-shard   transactions   with\nconsistency  among  the  related  shards,  we  design  a  cooperative\ncross-shard  consensus based  on  collective  signature-based inter-\nshard  collaboration.  Furthermore,  we  present  an  optimization\nframework  to  compute  an  optimal  layered  sharding  strategy\nmaximizing  the  transaction  throughput  with  the  constraint  of\nsystem  security  and  node  resource.  Finally,  we  implement  a\nprototype for P\nYRAMIDbased on Ethereum and the experimental\nresults reveal the efficiency of  P\nYRAMIDin terms of performance\nand  scalability,  especially  in  workloads  with  a  high  percentage\nof  cross-shard  transactions.  P\nYRAMIDimproves  the throughput\nby up to3.2times compared with the state-of-the-art works and\nachieves  about3821transaction  per seconds  for20shards.\nIndex  Terms— Blockchain,  scalability,  sharding,  cross-shard\ntransactions.\nI. INTRODUCTION\nB\nLOCKCHAIN, represented by Bitcoin [1], Ethereum [2]\nand Hyperledger Fabric [3], has attracted growing atten-\nManuscript received 10 March 2022; revised 15 June 2022; accepted\n30 June 2022. Date of publication 21 October 2022; date of current\nversion 22 November 2022. This work was supported in part by the\nKey-Area Research and Development Program of Guangdong Province under\nGrant 2021B0101400003; in part by the Hong Kong Research Grants\nCouncil (RGC) Research Impact Fund (RIF) under Project R5060-19; in\npart by the General Research Fund (GRF) under Project 152221/19E,\nProject 152203/20E, and Project 152244/21E; in part by the National Nat-\nural Science Foundation of Chinaunder Grant 61872310; in part by the\nShenzhen Science and TechnologyInnovation Commission under Grant\nJCYJ20200109142008673; and in part by the Japan Society for the Pro-\nmotion of Science (JSPS) KAKENHI under Grant 21H03424. An earlier\nversion of this paper was presented at the 2021 IEEE Conference on\nComputer Communications [DOI: 10.1109/INFOCOM42981.2021.9488747].\n(Corresponding author: Song Guo.)\nZicong  Hong  is  with  the  Department  of  Computing,  The  Hong\nKong Polytechnic University, Hong Kong, China (e-mail: zicong.hong@\nconnect.polyu.hk).\nSong Guo is with the Department of Computing, The Hong Kong Polytech-\nnic University, Hong Kong, China, and also with The Hong Kong Polytechnic\nUniversity Shenzhen Research Institute, Shenzhen 518057, China (e-mail:\nsong.guo@polyu.edu.hk).\nPeng Li is with the School of Computer Science and Engineering,\nThe University of Aizu, Aizuwakamatsu 965-8580, Japan (e-mail: pengli@\nu-aizu.ac.jp).\nColor versions of one or more figures in this article are available at\nhttps://doi.org/10.1109/JSAC.2022.3213350.\nDigital Object Identifier 10.1109/JSAC.2022.3213350\nFig. 1.  Illustration for different blockchain sharding systems.\ntion in the area of supply chains [4], high performance\ncomputing [5], and search engine [6] in recent years. It is\na distributed ledger technology used to guarantee high secu-\nrity and reliability of historical data in a distributed system\ninvolving multiple untrusted participants and without a central\nauthority.\nAs a prerequisite for broad application of blockchain,scala-\nbilityis an important property [7], [8]. It denotes the ability of\na blockchain system to support the increasing load of transac-\ntions, as well as the increasing number of nodes in the network.\nHowever, most of the existing popular blockchain systems\nsuffer from poor scalability [1],[2] since their consensuses\ninvolve all nodes. In other words, every node needs to verify\nand store all transactions and every consensus message needs\nto be broadcast in the whole network.\nAmong the technologies for the blockchain scalability,\nsharding is one of the most promising and popular ones [9].\nIts main idea is to divide nodes into multiple consensus groups\ncalledshards. Accounts are distributed to the shards, each\nof which processes the transactions involving their stored\naccounts. As shown in Fig. 1(a), each shard maintains a\nblockchain and runs its own consensus independently. Ide-\nally, the throughput scales out linearly with the number of\nshards. The technology has been paid close attention by the\nacademia for recent years [10], [11], [12], [13], [14], [15],\n[16], [17], [18]. Moreover, for the industry, many blockchains\nare currently being upgraded to a sharding architecture. For\nexample, Zilliqa has implemented sharding on its mainnet [19]\nand Ethereum plans to support sharding in its Eth2 upgrade\nin 2022 [20].\nAlthough sharding improves the scalability of blockchain,\nit raises a new challenge to cross-shard transactions. The\ncross-shard  transactions  are  the  transactions  involving\nmultiple accounts distributed in different shards. For example,\nas shown in Fig. 1(a), the transaction sent by Node 1 in Shard\nA and received by Node 2 in Shard B is a cross-shard one.\nMore seriously, each transaction may involve more accounts\nin practice (see §VI.) To commit a cross-shard transaction,\nthe existing sharding works [12], [13] divide it into several\n0733-8716 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "3576IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nsub-transactions, each of which is handled by the associated\nshard.  It  serious  degrades  the  transaction  throughput\nand  multiplies  the  confirmation  latency  in  a  sharding\nsystem.\nA. Basic Idea\nThis paper proposes a new blockchain sharding schema,\nnamedlayered sharding, to improve the scalability via shard-\ning while processing the cross-shard transactions efficiently.\nIts main idea is to allow shards to overlap, which means some\nnodes can locate in more than one shard as shown in Fig. 1(b).\nThese nodes store the blockchains of multiple shards, thus they\ncan verify and execute the cross-shard transactions directly.\nFor example, as shown in Fig. 1(b), Node 3 can verify\nand execute the cross-shard transaction involving Shard A\nand B since Node 3 stores the blockchains of both shards.\nMoreover, the idea is consistent with the fact that the hardware\n(e.g., storage, computation, network) of blockchain nodes is\ndifferent in a blockchain system. Thus, the nodes with better\nhardware can be deployed to more shards, which not only fully\nutilizes the resource of blockchain systems but also efficiently\nprocesses cross-shard transactions.\nB. Challenges\nHowever, it is non-trivial to achieve the layered sharding\nbefore tackling the following challenges. 1)How to design\na consensus to commit cross-shard transactions in multiple\nshards.The traditional sharding works adopt either Nakamoto\nor Byzantine consensus for block proposal within each shard.\nHowever, in layered sharding, nodes can generate blocks com-\nposed of cross-shard transactions. These blocks will involve\nthe state of multiple shards, need to be committed in multiple\nshards, and maybe conflict with other shards’ consensus,\nthus demanding a new design of block structure, consensus\nprocedure, and conflict detection. 2)How many shards are\nneeded and which nodes should be assigned to which shards.\nIn the traditional sharding works, all shards have an identical\nrole and the hardware of the nodes is assumed the same.\nIn comparison, the shards in the layered sharding play different\nroles and the capacity of nodes is different. Some nodes\nare responsible for internal transactions, while others should\nhandle cross-shard transactions. It is critical to study shard\nassignment for the layered sharding, which determines system\nperformance and security level.\nTo this end, this paper presents a layered sharding system\nfor blockchain called P\nYRAMID.Themaincontributionscan\nbe summarized as follows.\n•We propose a new blockchain architecture that forms a\nlayered structure among shards. Based on the charac-\nteristics of cross-shard transactions, we  investigate the\nverification rules for cross-shard transactions and design\na cross-shard structure for blocks.\n•We design a cooperative cross-shard consensus to commit\ncross-shard transactions in multiple shards in one round.\nThe consensus is composed of collective signature-based\ninter-shard collaboration to commit the cross-shard block.\n•We present an optimization framework for layered shard-\ning. We first analyze the transaction structure and node\nresource based on the observation of blockchain systems.\nWe then formulate a transaction throughput maximization\nproblem with the constraint of security and resource and\nsolve it based on integer programming.\n•We implement a prototype for PYRAMIDbased on\nEthereum. The results show that it outperforms the state-\nof-the-art sharding works in the aspects of throughput and\nlatency. It improves the throughput by up to3.2times\ncompared with the existing works and achieves about\n3821transaction per seconds (TPS) for20shards.\nThe rest of this paper is organized as follows. §II pro-\nvides background. §III introduces the layered sharding model.\n§IV presents the architecture including the new designs of\nblock and consensus. §V provides a formal security analysis.\n§VI designs an optimization framework. §VII extends our\napproach to a general case. §VIII performs experiments and\nanalyzes the evaluation results. §IX introduces some related\nworks for sharding. Finally, §X gives the conclusion.\nII. P\nRELIMINARY\nA. Blockchain\nA blockchain is a distributed ledger recording historical\ntransactions. The ledger is maintained by a set of untrusted\nblockchain nodes connected by a peer-to-peer network and\neach node maintains a full copy of the ledger. The transactions\nissued by clients are verified by the nodes and then grouped\nand recorded into the blockchain via the consensus protocol.\nIn the following, we introduce the common transaction models\nand consensus protocols for the blockchain.\n1) Transaction Model:There are two major types of trans-\naction models, i.e., the Unspent Transaction Output (UTXO)\nmodel [1] and the account/balance model [2]. In the UTXO\nmodel, each block stores many transactions, each of which\ncontains one or more inputs and outputs. Each input of a\ntransaction includes a reference to one output of an existing\ntransaction. Note that the output needs to have not been\nreferenced by any inputs before. In the account/balance model,\neach block represents a state and stores a list of accounts and\ntransactions. Each account stores a balance, and if it is a smart\ncontract, it will also store the code and internal storage. The\ntransactions record the history of state transitions (e.g., the\nchange of balance or contract storage) in the block.\n2) Consensus Protocol:There are two major kinds of\nconsensus protocols, i.e., Byzantine Fault Tolerant (BFT)\nprotocols and Nakamoto consensus protocols. Practical BFT\n(PBFT) is the most well-known BFT protocol and has been\nadopted by Hyperledger Fabric [3]. It consists of three suc-\ncessive phases, i.e., pre-prepare, prepare, and commit phase.\nThe transition condition between any two phases is that each\nnode collects a quorum of messages. Proof-of-Work (PoW)\nis the most well-known instance of Nakamoto consensus\nand has been used in Bitcoin [1]. Each node must solve a\ncomputational puzzle to propose a new block. Although the\nspecific processes of them are different, the aims of them are\nsame in blockchain systems, i.e., ensuring all nodes in the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3577\nsystem agree on some information while facing malicious or\nfaulty nodes.\nB. Sharding\nSharding is an idea originating from the database partition-\ning technique that divides a very large database into much\nsmaller parts namedshards[21]. In database, by distributing\nthe workload over multiple shards and managing the shards\nseparately, transactions can be processed in parallel. Similarly,\nin blockchain systems, sharding divides the blockchain nodes\nand the distributed ledger into shards. Transactions can be\ndistributed and processed in different shards, which enables\nthe computation, communication and storage of nodes scale\nas the number of shards. The study of the sharding protocol\ntypically focuses on three critical components as follows.\n1) Shard Formation:Before joining the system, each node\nneeds to establish an identity via a Sybil attack-resistant\nmethod, such as PoW. Then, based on the identity, each node\nwill be assigned to a shard randomly so that each shard is\nhonest with high probability. Besides, to prevent the attack of\nadversary, the shards need to reconfigure in fixed time periods.\n2) Cross-Shard  Mechanism:In  the  sharding  system,\nbecause the ledger is separated into shards, cross-shard trans-\nactions happen frequently. When processing each cross-shard\ntransaction, both of its atomicity (i.e., transactions are com-\nmitted and aborted atomically) and consistency (i.e., each\ntransaction commit produces a semantically valid state) need\nto be guaranteed among shards using a cross-shard mechanism.\n3) Intra-Shard Consensus:Within each shard, the nodes\nneed to run a Byzantine consensus protocol to agree on a block\nincluding a set of transactions proposed in each consensus\nround. The consensus protocol should achievesafetyand\nliveness. The former means that honest nodes agree on the\nsame value and the latter means that the valid transactions\nwill eventually be included in the ledger.\nThe previous blockchain sharding works will be discussed\nin §IX in detail.\nC. Motivation\nTo  illustrate  the  performance degradation brought by\ncross-shard transactions to the traditional blockchain sharding,\nwe conduct an initial experiment based on the cross-shard\nmechanism in Monoxide [13]. It divides each cross-shard\ntransaction related toKshards intoKsub-transactions at\nleast. Note that the number of sub-transactions may be more\nthanK, which will be discussed in §VI-A. As shown in\nFig. 2, when there are more cross-shard transactions or each\ncross-shard transaction involves more shards, the transaction\nthroughput of the sharding system decreases.\nIn practice, according to statistics [12], more than 96%\ntransactions are cross-shard in a sharding system. Moreover,\nbased on the data provided by XBlock [22], we conduct\nan analysis for Ethereum from July 30th, 2015 to July 6th,\n2019 and find more than 15% smart contract related trans-\nactions are composed by more than 1 steps and the average\nnumber of accounts in a transaction is 3.35. Besides, due to\nFig. 2.   Performance of sharding with different proportion of cross-shard\ntransactions over a function ofnumber of their related shards.\nthe popularity of more complex smart contracts, the proportion\nof multi-step transactions is increasing over time.\nIII. T\nHEPYRAMIDMODEL\nA. Threat & Network Model\nP\nYRAMIDconsists of a set of blockchain nodes following\nthe Byzantine failure model which includes two kinds of\nnodes, i.e.,honestandmalicious. The honest nodes abide\nby all protocols. The malicious nodes are controlled by a\nByzantine adversary and may collide with each other and\nviolate the protocols in arbitrary manners, such as denial of\nservice and tampering, forgery, and interception of messages.\nFurthermore, similar to other sharding systems [10], [11], [12],\nwe assume that the Byzantine adversary is slowly-adaptive,\ni.e., the set of malicious nodes and honest nodes are fixed\nduring each epoch and can be changed only between epochs.\nThe nodes in P\nYRAMIDare connected by a partially syn-\nchronous peer-to-peer network [23]. In particular, the messages\nsent by a node can reach any other nodes with optimistic,\nexponentially-increasing time-outs.\nB. Transaction Model\nP\nYRAMIDadopts the account/balance model for the ledger\nstate in the form of a pair of account and balance. Moreover,\nP\nYRAMIDcan be extended to the UTXO model, which is\ndiscussed in §VII. We consider a transaction as a payment\nbetween two accounts, namelysenderandreceiver.Amore\ngeneral case about transactions involving more than two\naccounts or supporting smart contract is discussed in §IV-G.\nWe leave the transaction model with more semantic informa-\ntion such as blockchain database [24], [25] to future works.\nC. Layered Sharding Model\nIn P\nYRAMID, each blockchain node belongs to a shard.\nDifferent from the traditional sharding schemes in which the\nshards are the same type, the shards in our layered sharding\nare different types as follows.\n1)i-shard: Each i-shard stores the state of accounts in\nthe shard and can independently verifies the internal\ntransactions similar to shards in the traditional sharding.\n2)b-shard: Each b-shard bridges multiple i-shards by\nstoring the state of accounts in the i-shards and dealing\nwith the cross-shard transactions related to the i-shards.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "3578IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 3.  Illustration for a layered sharding for i-shard A, B and b-shard C.\nFor example in Fig. 3, there are three shards, i.e., i-shard A,\ni-shard B, and b-shard C. The nodes in i-shard A stores the\nbalance of account 1 (denoted by acc\n1\n) and acc\n2\nwhile the\nnodes in i-shard B stores the balance of acc\n3\nand acc\n4\n.\nThe i-shard A is responsible for the internal transactions\ninvolving acc\n1\nand acc\n2\nand the i-shard B for its internal\ntransactions. The b-shard C bridging these two i-shards by\nstoring their stored accounts and taking the job for cross-shard\ntransactions among i-shard A and B. Besides, the b-shard C\ncan also store its own accounts, i.e., acc\n5\nand acc\n6\n.\nIV. A\nRCHITECTURE\nA. Architecture Overview\nSimilar to most blockchain sharding systems, P\nYRAMID\nproceeds in fixed time periods namedepochs, each of which\nincludes two stages, i.e., sharding formation and block con-\nsensus, as follows.\nIn the first stage, based on a pre-determined layered shard-\ning strategy with the guarantee of both security and perfor-\nmance (§VI), the nodes are assigned to shards to construct a\nlayered sharding system (§IV-B.)\nIn the second stage, there are multiple consensus rounds.\nFor each round, similar to the traditional sharding, the i-shards\npropose and commit blocks composed of internal transac-\ntions. The b-shards can propose cross-shard blocks (§IV-C)\ncomposed of cross-shard transactions and commit them via a\ncooperative cross-shard consensus (§IV-D). Finally, the state\nof an i-shard can be updated based on its block and the\ninvolved cross-shard blocks.\nMoreover, §IV-E solves the conflict among cross-shard\nblocks proposed by b-shard and the blocks proposed by the\ni-shards in the same round. §IV-F fills the gap left by the\ni-shards which do not have the corresponding b-shard.\nB. Layered Sharding Formation\n1) Strategy Design:At the beginning of P\nYRAMID,the\nblockchain founders can decide a layered sharding strategy\nindicating the number of i-shards and b-shards and which\ni-shards each b-shard bridges. Then, the strategy can be written\ninto the code as one of genesis parameters (such as block size).\nThe strategy can be decided empirically or based on an layered\nsharding optimization framework as discussed in §VI.\n2) Randomness Generation:In each epoch, sim a global\nrandomness will be first generated via a public-verifiable, bias-\nresistant, unpredictable and available randomness generation\nFig. 4.  Illustration for a cross-shard block for i-shard A and B.\nmethod [9], e.g., the verifiable random function [26], verifable\ndelay function [27], and trusted execution environment [15],\nsimilar to that of other sharding systems [11], [12]. It can be\nconsidered as a separated module in a sharding system and is\northogonal with our work, thus we do not discuss in detail.\n3) Participation:To join the epoch, each node is required to\nsolve a PoW puzzle to protect against Sybil attacks. The puzzle\nis generated based on the node’s public key and the epoch\nrandomness. After solving the puzzle successfully, the node\nneeds to append its solution into an identity blockchain to\nregister its identity. The identity blockchain is a PoW-based\nblockchain used to record identities of nodes, the same as the\nidentity blockchain in [11], [12], and [28].\n4) Assignment:Each admitted node is assigned to an i-shard\nor b-shard randomly based on the identity of the node and the\nepoch randomness. Note that the results of assignment for all\nnodes in the epoch are public and they can be computed based\non the randomness in the epoch and the identity chain.\nC. Cross-Shard Block Design\nIn  P\nYRAMID,  each shard has a blockchain at least.\nThe nodes in each i-shard store one blockchain. For each\nb-shard, besides its own blockchain, the nodes store multiple\nblockchains, the number of which equals the number of its\nrelated i-shards. Since the nodes in a b-shard stores the\nstate of the related i-shards, they can verify the cross-shard\ntransactions, pack them into a new type of block called\ncross-shard blocks, the structure of which is described as\nfollows.\nEach cross-shard block is related to multiple i-shards. It is\ncomposed of aheaderand abody. The header includes the\nhashes of parent blocks in the related i-shards and the Merkle\ntree root of the body. The body includes transactions and states\ninvolving the related shards. Fig. 4 illustrates a cross-shard\nblock related to i-shard A and B. The body includes the\ncross-shard transactions from i-shard A to B and vice versa,\ndenoted by Tx list (A→B) and Tx list (B→A), and the states\nof accounts in i-shard A and B, denoted by State list (A) and\nState list (B). Besides, although a cross-shard block includes\nthe state of multiple shard, to save space, after a cross-shard\nblock is committed, each i-shard can only store part of the\nblock. For example, the nodes in i-shard A can only store the\nMerkle root of State list (B) rather than the raw data.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3579\nFig. 5.  Illustration for cooperative cross-shard consensus.\nD. Cooperative Cross-Shard Consensus\nFor each consensus round, a leader is first randomly elected\nfrom each shard based on the randomness of the epoch.\nThe leader of an i-shard can pack the internal transactions\nand propose a new block calledinternal block. The internal\nblock can then be committed via a BFT protocol (such as\nPBFT) similar to the intra-shard consensus in the traditional\nsharding. In comparison, the leader of a b-shard can pack\ncross-shard transactions and propose a new cross-shard block\nthat is associated with the state of multiple i-shards. If the\nblock is directly committed via a BFT protocol by the nodes in\nthe b-shard and transferred to the associated i-shards, the block\nmay be conflict with the other blocks committed in associated\nshards in the same consensus round. Therefore, we design a\nnew consensus to commit the cross-shard blocks with conflict\ndetection named cooperative cross-shard consensus as follows.\nFig. 5 illustrates an example of committing a cross-shard\nblock proposed by the leader in the b-shard involving two\ni-shards. The normal procedure includes three phases:\n1) Block Pre-Prepare:In this round, the leader of the\nb-shard first picks, validates and executes the cross-shard\ntransactions. Then, it can propose a new cross-shard block\nrelated to i-shards A and B as shown in Fig. 4. To protect\nagainst invalid cross-shard blocks proposed by a malicious\nleader, the nodes in the b-shard validate the block and sign\nif it is valid. A cross-shard block with the signatures of\ntwo-third super-majority of nodes attests that the b-shard\nagrees on it under a Byzantine environment. The signatures\ncan be generated by collective signing protocol in which a\ndecentralized group of nodes can co-sign a multisignature,\nsuch as CoSi [29], a scalable protocol that can efficiently scale\nto thousands of nodes, and Boneh-Lynn-Shacham (BLS) [30]\ncollective proof.\nTo notify the associated shards for conflict detection, the\ncross-shard block with the collective proof of the b-shard will\nbe then sent to the associated i-shards, i.e., i-shard A and B.\n2) Block Prepare:After receiving the cross-shard block\nwith the collective proof from the b-shard, the nodes in each\ni-shard can verify the collective signature of the b-shard based\non public keys recorded in the identity blockchain. Then, each\nrelated i-shard can collective sign the block to denote receiving\nthe block. In particular, the i-shard sends a message ofAccept,\nincluding the hash of header and acollective signature back to\nthe b-shard. Besides, the i-shard can send a message ofReject\nwhen there is conflict among blocks, which will be described\nin §IV-E.\n3) Block Commit:After the pre-prepare phase, the nodes in\nthe b-shard initialize a counter with the number of its related\ni-shards. When a node in the b-shard receives a valid message\nofAcceptfrom an associated i-shard, it will decrease its\nlocal counter and broadcast the message to other nodes in the\nb-shard. When the counter equals to 0, the nodes in the b-shard\ncan ensure that the cross-shard block can be committed in\nthis round. As in PBFT, block prepare phase is insufficient to\nensure that the block will be committed [28], thus an additional\ncollective signing is needed toguarantee that the cross-shard\nblock will be committed and a message ofCommitincluding\nthe hash of header and a collective signature will be sent to\nthe related i-shards.\nBy default, in the consensus, the inter-shard messages\n(e.g., cross-shard blocks and messages ofAccept,Reject,and\nCommit) are forwarded to their destination shards by the\nleaders. To improve the success rate and reduce the safe\nthreshold for network interceptions (which will be discussed\nin §V), the honest nodes and some trusted infrastructure can\nalso help to relay the inter-shard messages.\nE. Conflicting Detection\nIn §IV-D, the cross-shard block occupies the consensus\nround of the b-shard and its related i-shards. However, the\nrelated i-shards may be in the consensus for their own blocks.\nThus, the conflicts are needed to be detected and resolved.\nWe first define the block conflicts. An intuitive idea is\nto define that the blocks involving the same accounts are\nconflicting. However, such a coarse-grained definition can\nresult in frequent abort due to high conflict ratio. Thus,\nmotivated by the idea of commutativity in [17], we propose a\nfine-grained definition below.\nDefinition 1: If two blocks commute, i.e., both of them are\nvalid in any order and the final state of shards does not depend\non their order, they are not conflict and can be processed in\nthe same round.\nFor example, as shown in Fig. 6(a), although the cross-shard\nblock X and the internal block Y involve the same accounts,\ni.e., acc\n2\n, they are not conflicting since either of their relative\norderings will increase the balance of acc\n2\nby 30. In compar-\nison, in the case of Fig. 6(b), the two blocks are conflicting\nsince the balance of acc\n2\nis 50 and only one block is valid.\nNext, in the prepare phase, based on the transaction list in\nthe received blocks, each i-shard can identify the conflicting\nblocks. Based on the randomness of the epoch, each i-shard\naccepts one from all conflicting blocks randomly and rejects\nthe other blocks. Thus, among all conflicting blocks, only one\nblock has messageAcceptand the other blocks only have\nmessageReject, which prevents the conflicting blocks from\nbeing committed and commits the non-conflicting blocks at\nthe same round.\nF. Relay Mechanism\nIn §IV-D, each b-shard can propose cross-shard blocks\nrelated to at most its related i-shards. It raises the problem\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "3580IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 6.  Illustration for the non-conflicting blocks and the conflicting blocks.\nthat in order to process all cross-shard transactions, every\npossible b-shard should exist. However, it is impossible to\nrealize because the number of shards in the blockchain system\nis limited. Thus, we are going to combine another cross-shard\nmechanism namedrelay mechanismoriginating in [13] with\nP\nYRAMID. Its main idea is to divide a cross-shard transaction\ninto several sub transactions. Each sub transaction involves\none i-shard or multiple i-shards which have the corresponding\nb-shard, which can solve the problem.\nWe take some minor modifications compatible with the\nconsensus in §IV-D as follows.\nFirst, each node in a shard is a light node for the other\nshards. In other words, after a block is committed successfully,\nboth its header and the collective signature will be broadcast\nto the system and stored in all nodes.\nSecond, the body includes an additional list namedoutbound\ntransaction list. The list consists of transactions whose senders\nbelong to the related i-shard of the body but receivers do not\nbelong to any related i-shards of the block. For example, the\noutbound transaction list of the block of Fig. 4 can include\ntransaction whose senders are in i-shard A and receivers are\nin any i-shard except i-shard A and B.\nFor the transactions in the outbound transaction list, they are\npartially validated. In other words, the state of the sender is\nvalidated, i.e., the sender has sufficient money, while the state\nupdate of the receiver, i.e., the receiver receives proper money,\nis left to be validated. Although they are not completely\ncommitted in this round, the leader or any other nodes can\nsend them and their corresponding Merkle tree path to the next\nstep i-shards or b-shards. Then, in the following consensus\nrounds, other leaders in i-shards or b-shards can use the Merkle\ntree path and the block header as a proof to continue the\nverification for these transactions.\nG. General Case\nThe above design only discuss the case of payments\nbetween two accounts, i.e., transactions with single step. How-\never, the multi-step transactions, i.e., transactions involving\nmany interactions among accounts, are common in current sys-\ntems, which will be discussed in detail in §VI-A. In particular,\na multi-step transaction is a sequence of interactions among\naccounts. Each interaction involves two accounts and can be\nthe money transfer, creation and function-call of smart con-\ntracts, etc [2]. The multi-step transaction can be a cross-shard\ntransaction involving several i-shards and be committed by\nthe b-shard bridging these related i-shards using the above\ncooperative cross-shard consensus and relay mechanism.\nNext, we discuss the transaction processing in a more gen-\neral layered sharding system with five shards, i.e., i-shard A,\ni-shard B, i-shard C, b-shard D bridging A and B, and b-shard\nE bridging A, B and C. If there is a transaction involving\nthree accounts in A, B, and C in sequence, respectively. The\ntransaction can be processed in three ways as follows. First,\nit can be processed by A, B, and C in sequence via the\nrelay mechanism. Second, it can be processed by D and C\nin sequence via the combination of cross-shard consensus and\nrelay mechanism. Third, it can be processed by E via the\ncooperative cross-shard consensus. The first one needs three\nconsensus rounds at least, the second one needs two and the\nthird one needs only one.\nV. S\nECURITYANALYSIS\nSimilar to other blockchain sharding works [7], [11], [12],\n[15], the security of our layered protocol includes safety and\nliveness which are defined and proved as follows.\nDefinition 2: The safety denotes the honest nodes agree on\nthe same valid block in each round and the liveness denotes\nthe finality for every block, i.e., the block in each round will\neventually be committed or aborted.\nTheorem 1: The   cooperative   cross-shard   consensus\nachieves safety if there are no more thanv<\n1\n3\nfraction of\nmalicious nodes in each shard.\nProof:Given no more thanv<\n1\n3\nmalicious nodes\nin each shard, the intra-shard consensus can guarantee the\ncross-shard block proposed by the b-shard is valid. Then,\na message along with a collective signature is honest because\nhonest nodes are the super-majority, i.e., more than two-thirds,\nof the shard. Meanwhile, the message cannot be modified\nand forged because the collective signature can be used to\ndetect forgery and tampering.Therefore, the communication\namong shards can safely proceed if there are no more than\nv<\n1\n3\nfraction of malicious nodes in the involved shards,\nwhich can guarantee that all related shards can receive the\nvalid cross-shard block. The prepare phase and commit phase\nin the consensus similar to the two-phase commit protocol\nin other distributed systems [14], [15]. The prepare phase\naims to reach the tentative agreement of commitment for\ncross-shard transactions and the commit phase aims to perform\nthe actual commit of the transactions among the related shards.\nThus, honest nodes in all related shards including i-shards and\nb-shards agree on the same valid cross-shard block in each\nround, i.e., the consensus achieves safety.\u0002\nTheorem 2: The   cooperative   cross-shard   consensus\nachieves liveness if there are no more thanv<\n1\n3\nfraction of\nmalicious nodes in each shard.\nProof:According to the system model in §III-A, because\nthe nodes are connected by a partially synchronous network\nand each shard has no more thanv<\n1\n3\nmalicious nodes, the\nBFT protocol adopted as the intra-shard consensus of each\nshard can achieve liveness. According to Theorem 1, each\nshard agrees on the same block in each round. Therefore,\nno malicious nodes can block the consensus indefinitely and\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3581\nTABLE I\nN\nOTATIONDEFINITIONS\neach block will be eventually be committed or aborted, i.e.,\nthe protocol achieves liveness.\u0002\nDiscussion of Other Attacks:Eclipse attack is an attack\nto blockchain network and prevents a victim’s node from\ncommunicating with other honest participants of the network.\nThe attack is difficult to launch, but definitely not impossible.\nIt will break our threat model given in §III-A. Specifically,\nthe cooperative cross-shard consensus can be interrupted when\nthe malicious nodes intercept the inter-shard messages. In the\nfollowing, we discuss two possible outcomes of the malicious\ninterception. First, if cross-shard blocks in the pre-prepare\nphase or messages ofAcceptandRejectin the prepare phase\nare intercepted, the consensus in this round will not get to the\ncommit phase; thus, only the round is wasted, and the safety\nand liveness will not be compromised. Second, if messages\nofCommitin the commit phase are intercepted, the blocks\nwill not be committed in the shards that do not receive the\nmessages. Although these shards can roll back their state\nand recommit the blocks after receiving the messages for\nsafety, the system’s throughput is affected. To raise the bar\nfor eclipse attackers, we can adopt some countermeasures pro-\nposed in [31] for the network of P\nYRAMID. For example, each\nnode in a shard connects a random set of nodes in the other\nshards. Moreover, we can deploy redundant infrastructure or\ntrusted third parties to help inter-shard communication.\nVI. O\nPTIMIZATIONFRAMEWORK FOR\nLAYEREDSHARDING\nIn this section, we theoretically analyze the performance of\nlayered sharding and design an optimization framework for\nlayered sharding strategy according to the characteristics of\nblockchain sharding (e.g., transaction demand, node resource\nand security). The major notations and variables are summa-\nrized in Table I.\nA. Transaction Model\nWe definetransaction distributionfor a blockchain sys-\ntem as the distribution of transactions with different steps\nFig. 7.   Illustration for transaction distribution and frame distribution in\nEthereum from Aug. to Sep. 2021.\nα={α\n1\n,α\n2\n,···,α\nA\n}in which a step is the interaction\nbetween two accounts (e.g., transfer, function call, and contract\ncreation),α\nk\nis the percentage of transactions involvingk\nsteps, andAis the largest possible number of steps involv-\ning by a transaction. The transaction distributionαcan be\ncollected from a real blockchain system such as Ethereum.\nFor example, Fig. 7(a) illustrates the transaction distribution\nin Ethereum from Aug. to Sep. 2021 (about 10 millions\ntransactions for smart contracts) based on a dataset provided\nby XBlock [32].\nFor each transaction, we define aframeas a sequence\nof steps involving accounts in the same shard. In particular,\na frame can be committed by an i-shard or b-shard in a con-\nsensus round. Next, given the shard numberS, the transaction\ndistributionαcan be converted into anotherframe distribution\nβ={β\n1\n,β\n2\n,···,β\nB\n}in whichβ\n1\nis the percentage of\ninternal transactions,β\ns\nis the percentage of cross-shard trans-\nactions withsframes, andBis the largest possible number\nof frames involving by a transaction. The distributionβcan\nbe calculated based on the following theorem. The basic idea\nof the theorem is that according to the definition of frames,\neach step that involves two accounts from the same shard\ncan be deleted when computing the number of frames for a\ntransaction.\nTheorem 3: For a sharding system withSshards, according\nto the transaction distributionα, the distribution of transac-\ntions withsframes can be calculated by\nβ\ns\n=\nA\n∑\nk=1\nα\nk\n(\nk\nk+1−s\n)\n(S−1)\ns−1\nS\nk\n.(1)\nProof:In a sharding system withSshards, for a trans-\naction involvingksteps, where1≤k≤A, it includes\nk+1accounts (including duplicate ones) that are distributed to\nSshards uniformly and randomly. To calculate the probability\nthat the number of frames for the transaction is exactlys,\nwe need two following steps. First, we need to pickk+1−s\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "3582IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\naccount from all accounts except the first one. For each of\nthese accounts, its related shard is the same as the related\nshard of its previous account, thus the step including it and its\nprevious account can be deleted. Second, to satisfy that there\naresframes, the first frame can belong toSpossible shards.\nBecause two consecutive frames should belong to different\nshards, the remaining frames can belong toS−1possible\nshards. Thus, the probability that a transaction involvingk\nsteps hassframes can be computed as\nPr(X=s)=\n(\nk\nk+1−s\n)\nS(S−1)\ns−1\nS\nk+1\n=\n(\nk\nk+1−s\n)\n(S−1)\ns−1\nS\nk\n.(2)\nBased on Eq. (2) and the distribution of transactions involv-\ning different number of accountsα, we can get Eq. (1).\u0002\nThe most intuitive result shown by the theorem is that when\nthere are more transactions with many steps, the proportion of\ntransactions with many frames increases.\nAs shown in Fig. 7(b), we illustrate the frame distribution\nfor a sharding system with 8 shards which is derived from\nthe transaction distribution in Fig. 7(c). We emphasize that\nthe above calculation is an approximated method because the\nduplicate accounts in a transaction are not considered. Besides,\nthe frame distributionβcan also be calculated via a simple\nsampling simulation from the transaction distribution.\nB. Node Model\nIn P\nYRAMID,thereareNnodes, each of which has\ndifferent hardware capacity ofcomputation, communication\nand storage. It determines the maximum layer a node can\nbe located in. It is because, as discussed in §IV, the nodes\nin a b-shard are required to store and verify the state and\ntransactions of the related i-shards. Thus, to prevent the\nthroughput of b-shards from significantly degrading, a b-shard\nbridging more i-shards requires a higher hardware capacity of\nnodes.\nTo determine the maximum number of nodes in different b-\nshards, we define the hardware capacity of nodeiash\ni\nwhich\nindicates the bottleneck among the computation, communica-\ntion and storage of nodei. To compute the hardware capacity,\nwe first define a hardware requirement for the nodes in i-shard\nasH\n1\n,suchas10GB for storage,1MBit/s bandwidth, and\n2.40GHZ CPU. Most of blockchain systems have such a\nhardware requirement.\n1\nThen, the hardware requirement for\nb-shards bridging two i-shards will be defined as a higher\nvalueH\n2\n, and so forth for the remainder of the b-shards.\nThe requirement for b-shards bridging most i-shards isH\nL\n.\nThe hardware capacity of a node can be set as the highest\nhardware requirement of shards it meets. Finally, we can get\nthe maximum nodes able to be in b-shards bridgingii-shards\nasN\ni\n. Besides, we assume that all nodes are able to be located\nin i-shards thusN\n1\n=N.Wedefineanode distributionas\nN={N\n1\n,N\n2\n,···,N\nL\n}\n1\nhttps://ethereum.org/en/developers/docs/nodes-and-clients/#requirements\nC. Consensus Model\nWe model the consensus in the layered sharding based\non [33] which models several BFT consensus protocols\nincluding PBFT, Zyzzyva, and Quorum in a non-sharding\nblockchain. In the layered sharding, the transaction throughput\nof each shard depends on two key parameters, i.e.,block size\nKandblock intervalT, as follows.\nThe first one is the number of bytes can be contained in a\nblock, which determines the number of transactions in a block.\nMoreover, we define the average size of transactions asχ.\nNote that transactions with different number of steps have the\nsame size. It is because except the first step, the other steps is\ninternal, which means they result from the execution and are\nnot stored in the blockchain [34].\nThe second one is the average time required for a shard\nto commit a new block, which is mainly composed of the\nconsensus latency. As discussed in §IV-D, the consensus of\nlayered sharding is composed of three phases of collective\nsigning. Each collective signing includes two round-trips, i.e.,\none for data distribution and the other for signature aggrega-\ntion, over the communication tree between the leader and the\nother nodes, such as [29]. Thus, the consensus latency depends\non the practical network environment, e.g., the number of\nnodes in a shard, the propagation method in the network, and\nthe rate of generating and verifying signatures for each node.\nD. Security Model\nAccording to §V, a layered sharding system is secure when\nthere are no more thanv<\n1\n3\nfraction of malicious nodes in\nevery shard. Thus, we can model the probability for forming\nan unsafe layered sharding system as follows.\nWe first defineXas a random variable serving as the\nnumber of malicious nodes assigned to a shard.n=N/S\nindicates the number of nodes in each shard. Once the number\nof malicious nodes in a shard exceedn/3, the shard can be\ndeem to be unsafe. Finally, based on cumulative binomial\ndistribution function [12], the probability for forming an\nunsafe shard can be approximated as\nP[X≥\u0005n/3\u0006]=\nn\n∑\nx=\u0002n/3\u0003\n(\nn\nx\n)\nf\nx\n(1−f)\nn−x\n.(3)\nNext, to bound the failure probability of the whole system,\nwe calculate the union bound overSshards. Besides, we adopt\na security parameterλto limit the probability. Therefore,\na system can be regarded as safe enough if\nSP[X≥\u0005n/3\u0006]<2\n−λ\n.(4)\nA higherλcan guarantee a safer layered sharding system.\nFor instance, letλ=4, then the system is secure if the\nprobability is less than2\n−4\n. Besides, the cumulative hyperge-\nometric distribution-based method for calculating the failure\nprobability [12] is also applicable.\nE. Problem Formulation\nA sharding strategy in P\nYRAMIDcan be defined as a layer\ndistributiond={d\n1\n,d\n2\n,···,d\nL\n},whered\n1\ndenotes the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3583\nnumber of i-shards, otherd\ni\ndenotes the number of b-shards\nbridgingishards and\n∑\n1≤i≤L\nd\ni\n=S. According to §IV-D,\na b-shard ind\ni\ncan process cross-shard transactions involving\nishards at most. Furthermore, for a cross-shard transaction\ninvolving more thanishards, the b-shard can process itsi\nframes at most using the relay mechanism. Therefore, the\nmaximum transaction throughput of a layered sharding system\ncan be computed as\nTPS\nlayer\n=\n\u0007K/χ\b\nT\n(d\n1\n(β\n1\n+\nβ\n2\n2\n+···+\nβ\nB\nB\n︸\n︷︷︸\n(1)\n)\n+\n∑\n2≤i≤L\nd\ni\n(\nB\n∑\ns=1\nβ\ns\n(\ni\nS\n)\ns−1\n︸︷︷︸\n(2)\n+\nB\n∑\ns=2\nβ\ns\ns−1\n∑\nj=1\nj\ns\n(\ni\nS\n)\nj−1\nS−i\nS\n)\n︸\n︷︷︸\n(3)\n),(5)\nin which (1) considers the transactions to be processed by\nthe i-shards and (2) and (3) consider the transactions to be\nprocessed by the b-shards.\ni\nS\ndenotes the probability that the\nrelated shard of a frame in the transaction is included in the\nb-shard ind\ni\n. (2) is for the transactions that can be committed\nin one round and (3) is for the transactions whosejframes\ncan be committed in one round.\nIn addition, for traditional sharding, each cross-shard trans-\naction related tokshards needs to be divided intok\nsub-transactions at least. Thus, the maximum transaction\nthroughput of a traditional sharding system withSshards is\nTPS\ntradition\n=\nS\u0005K/χ\u0006\nT\n(β\n1\n+\nβ\n2\n2\n+···+\nβ\nB\nB\n). Suppose there\nare more cross-shard transactions involving more shards in the\nsystem. In that case, the transaction throughput of traditional\nsharding systems shows more serious deterioration than that\nof the layered sharding, which means the layered sharding\nachieves better scalability.\nGiven the frame distributionβ, the node distributionN,\nand the security parameterλ, the selection of optimal sharding\nstrategydcan be formulated as follows\nmax\nd\nTPS\nlayer\n(6)\ns.t.\n∑\nl≤i≤L\nd\ni\n≤\nN\nl\nn\n,∀1≤l≤L(7)\nSP[X≥\u0005n/3\u0006]<2\n−λ\n(8)\nd\ni\n∈N,∀d\ni\n∈d.(9)\nThe constraint (7) indicates thatthe sharding strategy can-\nnot exceed the hardware capacity of nodes in the system.\nThe constraint (8) indicates the strategy should guarantee\nthat the system is secure. The main difficult in solving the\nproblem is that it is integer programming problem and the\nconstraints (7) and (8) are not linear (recall thatn=N/Sand\n∑\n1≤i≤L\nd\ni\n=S.)\nTo solve the problem, we first analyze the constraint (8) as\nfollows. Observe that in most sharding systems with thousands\nof nodes [11], [12], [35], the shard numberSis no more\nthan 64 in practice, becausethe security parameterλis often\nroughly set as a big number for high security. Considering\nthat the shard number is a small number, we can enumerate\nit. Once the shard numberSis given, the problem reduces to\na linear integer programming as follows\nmax\nd\nTPS\nlayer\n(10)\ns.t.\n∑\nl≤i≤L\nd\ni\n≤\nN\nl\nN\nS,∀1≤l≤L(11)\n∑\n1≤i≤L\nd\ni\n=S(12)\nd\ni\n∈N,∀d\ni\n∈d,(13)\nwhich can be efficiently solved by well-developed branch-and\ncut algorithms [36] or dynamic programming [37].\nVII. E\nXTENSION TOUTXO MODEL\nIn this section, we extend PYRAMIDto a UTXO model\nwhich is widely adopted by blockchains for cryptocurrencies\nsuch as Bitcoin [1] and Litecoin [38].\nIn a sharding system for the account/balance model, each\nshard stores a proportion of accounts and their balances\n(see §III-C.) In comparison, in a sharding system for the\nUTXO model [11], [12], [15], each shard stores a set of\ntransactions, especially the unspent transactions. For a new\ntransaction, if its inputs are distributed in multiple shards, it is\na cross-shard one. We refer to these shards as itsinput shards.\nFor the cross-shard block structure in the UTXO model,\nbecause the transactions are not in the form of sender\nand receiver, the body of a cross-shard block includes\nthe cross-shard transactions whose input shards are its\nrelated shards. For example, the block shown in Fig. 4\nincludes the cross-shard transactions whose input shards are\ni-shard A or B.\nThe cross-shard cooperative consensus runs as follows. In a\nsystem shown in Fig. 3, assume that there are two unspent\ntransactions stored in i-shard A and B, respectively. For a\ncross-shard transaction including these two transactions as\ninputs, b-shard C validates the transaction, packs it into a\ncross-shard block, and commits it with the cooperation of\ni-shard A and B, which is the same as the procedure in\n§IV-D. Moreover, to avoiddouble-spending, each output of\nthe transaction is stored in either i-shard A or B. Thus, in the\nblock, each transaction needs to assign an indicator for each\noutput to denote the responsible i-shard.\nThe  relay  mechanism  in  §IV-F  is  designed  for  the\naccount/balance model. To transplant it to the UTXO model,\nwe can include the transactions, whose input shards do not all\nbelong to the b-shard, in the outbound transaction list. Besides,\nwe can also use transfer mechanism originating in [12] which\nis designed for the UTXO model. To apply it in the layered\nsharding, we need some minor and compatible modification\nas follows. First, similar to the relay mechanism, each node\nshould be a light node for all shards. Second, for each cross-\nshard transaction, one of its input shards is chosen asmain\ninput shardand the others aresub input shards. The main input\nshard can be the shard storing the most number of inputs for\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "3584IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nthe transaction or a random shard. Third, each sub input shard\ntransfers its stored inputs to the main shard by committing\nan internal transaction to represent the ownership transfer and\nthen notifies the main input shard by sending the inputs and\nthe corresponding Merkle tree path to the nodes in the main\ninput shard. Finally, after the input transfer is completed, the\nmain shard can commit the transaction using the consensus in\n§IV-D since it stores all inputs for the transaction.\nVIII. E\nVALUATION\nA. Implementation\nWe implement a prototype of P\nYRAMIDin Go [39] based\non Ethereum [40]. For the intra-shard consensus, we adopt a\ncollective signature-based BFT in Harmony [41]. The com-\nmunication among nodes or shards is based on libp2p [42].\nFor the scheduler in the transaction pool, each shard first\nprocesses the pending transactions with the oldest creation\ntime and most related shards. We adopt LINGO 19.0 for the\nlinear integer programming in the optimization framework for\nlayered sharding. Besides, we also implement two prototypes\nof traditional sharding. For a fair comparison, they also adopts\nthe BFT consensus adopted by P\nYRAMIDas their underlying\nconsensus. The difference between these two prototypes is the\ncross-shard transaction processing. The first one uses the relay\nmechanism in Monoxide [13] and the second one uses the\ntransfer mechanism in RapidChain [12]. Their main ideas are\nreferred to in §IX-C.\nB. Experimental Setup\nSimilar to most running blockchain testbeds, the bandwidth\nof all connections between nodes are set to 20 Mbps and\nthe links are with a latency of 100 ms in our testbed. The\ntestbed is composed of 16 Amazon EC2 machines, each of\nwhich is a c4.2xlarge instance with 8 vCPUs and 15GB RAM.\nWe generate a transaction set with a step of3. Besides, based\non the data provided by XBlock [22], we generate two datasets\nwith the average step of7.48and2.93to simulate Ethereum\nand Bitcoin, respectively. The security parameterλin §VI-D\nis set as17, which means the failure probability needs to\nsmaller than2\n−17\n≈7.6·10\n−6\n, i.e., one failure in about\n359 years for one-day epochs. According to §VI-B, we adopt\na log-normal distribution withσ=0.5andμ=0.7,1,1.3to\nsimulate three different node distributionsN\nlow\n,N\nmedium\nandN\nhigh\n, respectively. The superscript denotes the level of\naverage hardware capacity in the distribution. For example,\nN\nhigh\nhas the most nodes able to be located in b-shards among\nthe three distributions.\nC. Transaction Throughput & Latency\nFig. 8 shows the transaction throughput in TPS for the tradi-\ntional sharding and layered sharding with different shard num-\nber and node distribution. We can see that the layered sharding\nimproves the transaction throughput by1.5∼3.2Xagainst\nthe two traditional sharding prototypes and the improvement\nis more significant for the higher level of node distribution\nsince there are more b-shards. Furthermore, the average value\nFig. 8.   Transaction throughput for layered sharding with different shard\nnumber and node distribution.\nFig. 9.  Latency for layered sharding with different shard number and node\ndistributions.\nofΔTPS/ΔSin the layered sharding is about0.99,which\nmeans the TPS scales out as the number of shards includ-\ning i-shards and b-shards increase. In conclusion, P\nYRAMID\nexhibits linear scalability, which is better than the traditional\nsharding, and achieves up to3821TPS when there are\n20shards. Besides, the throughput of Rapidchain is slightly\nlower than that of Monoxide. It is because in our implementa-\ntion, Rapidchain needs a sub transaction for each account and\nMonoxide needs a sub transaction for each frame.\nFig. 9 shows the confirmation latency for the traditional\nsharding and layered sharding. The confirmation latency is\nanother performance metric that denotes the delay between\nthe time that a transaction is issued by a user and the time\nthat the transaction is committed to the blockchain. For a\nfair comparison, we adjust the transaction demand in different\nnumbers of shards to make their latency close. From the\nfigure, we can see that P\nYRAMIDyields a reduction in latency\nby59%∼92%in comparison with the traditional sharding\nsystems. This is because the cooperative cross-shard consensus\nin the layered sharding can commit a cross-shard transaction\nin less consensus rounds.\nD. Storage Overhead\nFig. 10 shows the storage size per node for the traditional\nsharding and the layered sharding with different node dis-\ntribution when there are 17 shards. The results include the\nmaximum, average and minimum storage size for the nodes\nafter processing 10 millions transactions. In the figure, the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3585\nFig. 10.  Trade-off of transaction throughput and storage overhead for layered\nsharding with different node distribution.\nFig. 11. Transaction throughput and failure probability for different malicious\nnode fraction in a layered sharding system with 17 shards.\nnumber above the bars and the number above the green line\ndenote the increasing times of throughput and average storage\nsize compared with Rapidchain, respectively. From the figure,\nwe can observe that although the layered sharding improves\nthe transaction throughput, it requires more storage for the\nsystem. For example, for the medium level of node distribution\nN\nmedium\n, it improves the transaction throughput to2.32times\nat the cost of3.24times of average storage overhead. Next,\nthe maximum storage size indicates the storage size of nodes\nin the b-shards bridging the most number of i-shards. The\nminimum storage size indicates the storage size of nodes\nin the i-shards or the b-shards bridging the least number of\ni-shards. From the figure, we can see that a higher level\nof node distribution has a higher throughput, but all the\nmaximum, average and minimum storage size are increased.\nHowever, the storage sacrifice is well worth the performance\nimprovement due to the following reasons. First, the storage is\nnot the main bottleneck in most sharding blockchain systems\nsince there are many state-compaction mechanism such as\ncheckpoint mechanism [11], [43]. Second, as discussed in\n§VI-B, blockchain nodes can be heterogeneous in practice,\nwhich means they have different storage space. The layered\nsharding aims to fully utilize the storage of the blockchain\nnodes instead of demanding redundant storage.\nE. Security\nFig. 11 shows the performance of the layered sharding with\ndifferent percentage of malicious nodes. To satisfy the security\nrequirement mentioned in §VIII-B, the failure probability\ncomputed by Eq. (4) should be smaller than the thresh-\nold2\n−17\n, i.e., the green dotted line illustrated in the figure.\nFig. 12.   Real and estimated transaction throughput for optimal sharding\nstrategy with different node number in the same node distributionN\nhigh\n.\nWe can observe that the layered sharding system is secure\nwhen the percentage of malicious nodes is less than 16%.\nMoreover, when there are more malicious nodes in the system,\nthe performance is worse. This is because within the secure\nthreshold, although a malicious node cannot tamper with the\ndata, it may waste a consensus round when it is a leader.\nIn other words, our consensus in the layered sharding can\nguarantee that the blocks proposed by malicious nodes will\nbe detected and aborted.\nF. Sharding Strategy\nFig. 12 shows the real and estimated throughput of the\nglobal optimal sharding strategy. Given the transaction dis-\ntribution, node distribution and security parameter, LINGO\ncan solve the linear integer programming problem and obtain\nthe global optimal solution in the optimization framework.\nFrom the figure, we can see that the real throughput and\nthe estimated one exhibit roughly identical patterns when the\nnumber of nodes increase. However, the real throughput is\nlower than the estimated one, the reason of which is twofold.\nFirst, due to the constraints of security and resource, some\ni-shards do not have the corresponding b-shards. However,\nEq. (5) computes the throughputby the probability approach\nand does not consider the uneven distribution of the b-shard.\nSecond, the shards in the low layers can become the bottleneck\nof the throughput in practice. In other words, for a cross-shard\ntransaction, some of its frames are quickly committed by the\nb-shards in the high layers, but the remaining frames need to\nqueue in the i-shards or b-shards in the low layers.\nMoreover, we randomly generate40sharding strategies\nunder the same node distributionN\nmedium\nand security guar-\nantee and their transaction throughput is illustrated in Fig. 13.\nFrom the figure, we can see that the transaction throughput\nof the optimal strategy is27%,118%,and376%higher than\nthe maximum, average, and minimum value of these random\nsharding strategies, respectively.\nG. Workload\nWe further evaluate the performance of the layered sharding\nfor several workloads with different proportion of cross-shard\ntransactions and different number of transaction steps and the\nresults are illustrated in Fig. 14 and Fig. 15.\nAs shown in Fig. 14, when the transactions have more steps,\nthe throughput of all sharding systems is reduced. This is\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "3586IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 13.  Transaction throughput for different sharding strategy in the same\nnode distributionN\nmedium\n.\nFig. 14.  Transaction throughput for different number of transaction steps in\na layered sharding system with 17 shards.\nbecause a transaction with more steps may have more frames\nafter the accounts are sharded according to §VI-A. Since the\nb-shards in the layered sharding can commit more frames\nin one consensus round, it has a better performance than\nthe traditional sharding. For the workload of Ethereum and\nBitcoin, P\nYRAMIDimproves the throughput by up to90%and\n184%compared with the traditional sharding, respectively.\nAs shown in Fig. 15, when there are no cross-shard transac-\ntions, both the traditional sharding and P\nYRAMIDcan process\na similar TPS. This is because, in this case, all transactions are\ninternal transactions that can be committed in one consensus\nround in any sharding scheme. Moreover, increasing the per-\ncentage of cross-shard transactions significantly reduces the\nthroughput of traditional sharding but only slightly decreases\nor even increases that of P\nYRAMID. This is because the\nstrengths of b-shards can fully work when meeting cross-shard\ntransactions. When there are more cross-shard transactions, the\nthroughput improvement brought by the b-shards in P\nYRAMID\ncompensates for the overhead of cross-shard transactions.\nIX. R\nELATEDWORK\nA. Centralized Sharding Blockchain\nRSCoin [44] is the first sharding blockchain system to\nsupport a scalable cryptocurrency whose monetary supply\ncan be controlled by a central bank and whose transactions\nare validated by the mintettes. Each mintette is a member\nauthorized by the central bank, thus RSCoin is a centralized\nsystem and does not work under the Byzantine environment\nlike a public blockchain.\nFig. 15.  Transaction throughput for different ratio of cross-shard transactions\nin a layered sharding system with 17 shards.\nB. Partial Sharding Blockchain\nELASTICO  [10]  is  the  first  decentralized  sharding\nblockchain system. Each node needs to solve a PoW puzzle\nto join the system. Then, the nodes are distributed to different\nshards based on the least-significant bits of the solution. Every\nshard is responsible to validate a set of transactions and\nachieves consensus based on PBFT. Then, a final shard verifies\nall the transactions receivedfrom shards into a global block\nwhich will be then broadcast to and stored in all nodes in the\nsystem. Although ELASTICO achieves decentralization and\nsharding for verification, it does not achieve sharding for stor-\nage and bandwidth. It is thus calledpartial sharding. Although\nthere do not exist cross-shard transactions in the system since\neach node stores complete information of the system, nodes\nsuffer from heavy storage and bandwidth overhead.\nBesides, CoSplit [17] is a static program analysis for\nblockchain sharding and is built on top of a similar partial\nsharding blockchain named Zilliqa [19]. It is used to infer\nownership constraints and commutativity for smart contracts\nand then concurrently execute transactions in different shards\nwithout conflict to maximize parallelism among shards.\nC. Complete Sharding Blockchain\nTo further alleviate the overhead of nodes in the blockchain,\na number of researches focus oncomplete sharding,i.e.,\nsharding for transaction verification, storage and communica-\ntion. The complete sharding, however, brings the challenge of\ncross-shard transactions and requires cross-shard mechanisms.\nOmniledger [11] is the first complete sharding blockchain\nsystem. It adopts a client-driven mechanism for cross-shard\ntransactions. To commit a UTXO-based transaction, a client\nfirst asks proofs from all input shards and then sends these\nproofs to all output shards. If any shards reject to provide proof\nfor a transaction, the commitment of transactions will be failed\nand other shards will roll back the transaction. To support\nsharding for generic smart contracts, Chainspace [14] is then\npresented. For privacy, clients need to form a checker program\nfor each of their smart contract. All transactions are executed\nby the client and the blockchain nodes are only responsible to\nverify the result provided by the client based on the checkers.\nTo commit a UTXO-based transaction, the client sends the\ntransaction to all input shards and the inputs shards collaborate\nto run a two-phase commit protocol. However, the above\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "HONG et al.: SCALING BLOCKCHAIN VIA LAYERED SHARDING3587\ntwo client-driven mechanisms put extra burden on typically\nlightweight user nodes and are vulnerable to denial-of-service\n(DoS) attacks by malicious users.\nRapidChain [12] adopts a shard-driven mechanism for\ncross-shard transactions. For each cross-shard transaction, the\ninput shards first transfer all involved UTXOs to the output\nshard by sub-transactions. Then, the cross-shard transaction\ncan be transformed into single-shard transaction and processed\nin the output shard. Monoxide [13] proposes a relay mecha-\nnism for account-based transactions. Each cross-shard trans-\naction will be divided into a sequence of sub-transactions.\nEach sub-transaction includes the operations involved accounts\nin one shard. An additional relay transaction is used as a\ninter-shard message when processing from a sub-transaction\nto another sub-transaction, i.e., from a shard to another shard.\nThe cross-shard mechanisms inthe above complete sharding\nsystems can guarantee the atomicity and consistency of cross-\nshard transactions, but the cost to commit them is multiplied.\nIt is because their basic idea is todivide each cross-shard trans-\naction needs into several sub-transactions. Then, all related\nsub-transactions need to be validated and executed during the\nconsensus. This seriously degrades the sharding performance\nin terms of throughput and confirmation latency.\nRecently, there are some works for the challenge of cross-\nshard transactions. For example, OptChain [45] proposes a\ntransaction placement method for sharding systems. Its main\nidea is to place both related and soon-related transactions\ninto the same shards, which can reduce the number of\ncross-shard transactions as well as temporally balances the\nworkload between shards. Although the method is based on\nthe complete sharding, it can be migrated to the layered\nsharding by considering that the partition of transactions can\noverlap, which can be considered in our future work. Tao et al.\npresent a two-layer sharding system [46]. In layer 1, each\nshard only processes internal transactions. In layer 2, there\nis a unique shard named MaxShard that stores the complete\ninformation, i.e., all blockchains, of the system. Thus, all\ncross-shard transactions can be validated and processed in the\nMaxShard directly. However, the two-layer sharding can put\na huge burden on nodes in layer 2. The idea of our layered\nsharding shares a similar idea with Tao et al. [46] but has a\nmore hierarchical sharding structure to distribute the burden\namong layers.\nD. New Achievements\nOur previous work [35] proposes a layered blockchain\nsharding, based on which, this paper has designed several\nfollowing technologies to optimize this sharding scheme. First,\nin our previous work, the setting of the layered sharding strat-\negy is heuristic and random, which cannot fully make use of\nthe potential of layered sharding. To solve the problem, we the-\noretically analyze the factors influencing the performance of\nlayered sharding and present an optimization framework for\nan optimal layered sharding strategy with the constraint of\nsystem security and node resource. The experimental results\nshow that the optimal strategy computed by our framework can\nincrease the throughput by118%on average. Moreover, our\nprevious work only studies the account/balance model for the\ntransactions. Considering that most of cryptocurrencies such\nas Bitcoin and Litecoin adopt a UTXO model, we extend our\nsolution to a UTXO model.\nX. C\nONCLUSION\nThis  paper  presented  PYRAMID,  a  layered  sharding\nblockchain system that achieves both linear scalability and\nefficient cross-shard transactions processing. P\nYRAMIDallows\nshards to overlap for a layered structure. The shards in\nthe high layer (i.e., b-shards) can validate and process the\ncross-shard transactions involving the shards in the low layer\n(i.e., i-shards). We proposed a cooperative cross-shard consen-\nsus to enable b-shards to commit the cross-shard transactions\nwithout conflict and with the guarantee of security. We devel-\noped an optimization framework for layered sharding by mod-\nelling the characteristics of transactions, node, security, and\nconsensus in P\nYRAMID. Based on our experiments, PYRAMID\nimproves the transaction throughput by1.5∼3.2X against the\ntraditional sharding works and achieves about3821TPS when\nthere are20shards. In particular, in the workload with a higher\npercentage of cross-shard transactions and more transaction\nsteps, P\nYRAMIDhas a better performance improvement.\nA\nCKNOWLEDGMENT\nThe authors thank the anonymous reviewers of IEEE JOUR-\nNAL ONSELECTEDAREAS INCOMMUNICATIONS,which\nhelped improve the paper.\nR\nEFERENCES\n[1] S.  Nakamoto.Bitcoin:  A  Peer-to-Peer  Electronic  Cash  System.\nAccessed:  Jan.  25,  2022.  [Online].  Available:  https://bitcoin.org/\nbitcoin.pdf\n[2] G. Wood.Ethereum: A Secure Decentralised Generalised Transac-\ntion Ledger. Accessed: Jan. 25, 2022. [Online]. Available: https://\nethereum.github.io/yellowpaper/paper.pdf\n[3] E. Androulaki et al., “Hyperledger Fabric: A distributed operating\nsystem for permissioned blockchains,” inProc. 13th EuroSys Conf.\nNew York, NY, USA: Association for Computing Machinery, 2018,\npp. 1–15.\n[4] K. Francisco and D. Swanson, “The supply chain has no clothes:\nTechnology adoption of blockchain for supply chain transparency,”\nLogistics, vol. 2, no. 1, p. 2, Jan. 2018.\n[5] A. A. Mamun, F. Yan, and D. Zhao, “BAASH: Lightweight, efficient,\nand reliable blockchain-as-a-service for HPC systems,” inProc. Int.\nConf. for High Perform. Comput., Netw., Storage Anal.New York, NY,\nUSA: Association for Computing Machinery, Nov. 2021, pp. 1–18.\n[6] M. Li et al., “Bringing decentralized search to decentralized services,” in\nProc. 15th USENIX Symp. Operating Syst. Design Implement. (OSDI),\nJul. 2021, pp. 331–347.\n[7] M. J. Amiri, D. Agrawal, and A. El Abbadi,SharPer: Sharding Per-\nmissioned Blockchains Over Network Clusters. New York, NY, USA:\nAssociation for Computing Machinery, 2021, pp. 76–88.\n[8] Z. Hong, S. Guo, R. Zhang, P. Li, Y. Zhan, and W. Chen, “Cycle:\nSustainable off-chain payment channel network with asynchronous\nrebalancing,” inProc. 52nd Annu. IEEE/IFIP Int. Conf. Dependable\nSyst. Netw. (DSN), Jun. 2022, pp. 1–13.\n[9] G. Wang, Z. J. Shi, M. Nixon, and S. Han, “SoK: Sharding on\nblockchain,” inProc. 1st ACM Conf. Adv. Financial Technol., Oct. 2019,\npp. 41–61.\n[10] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Saxena,\n“A secure sharding protocol for open blockchains,” inProc. ACM\nSIGSAC Conf. Comput. Commun. Secur., Oct. 2016, pp. 17–30.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "3588IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\n[11] E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, E. Syta, and\nB. Ford, “OmniLedger: A secure, scale-out, decentralized ledger via\nsharding,” inProc. IEEE Symp. Secur. Privacy (SP), May 2018,\npp. 583–598.\n[12] M. Zamani, M. Movahedi, and M. Raykova, “RapidChain: Scaling\nblockchain via full sharding,” inProc. ACM SIGSAC Conf. Comput.\nCommun. Secur., Oct. 2018, pp. 931–948.\n[13] J. Wang and H. Wang, “Monoxide: Scale out blockchains with asyn-\nchronous consensus zones,” inProc. 16th USENIX Symp. Networked\nSyst. Design Implement. (NSDI), 2019, pp. 95–112.\n[14] M.  Al-Bassam,  A.  Sonnino,S.  Bano,  D.  Hrycyszyn,  and\nG. Danezis, “Chainspace: A shardedsmart contracts platform,” 2017,\narXiv:1708.03778.\n[15] H. Dang, T. T. A. Dinh, D. Loghin,E.-C. Chang, Q. Lin, and B. C. Ooi,\n“Towards scaling blockchain systems via sharding,” inProc. Int. Conf.\nManag. Data, Jun. 2019, pp. 123–140.\n[16] J. Zhang, Z. Hong, X. Qiu, Y. Zhan, S. Guo, and W. Chen, “SkyChain:\nA deep reinforcement learning-empowered dynamic blockchain sharding\nsystem,” inProc. 49th Int. Conf. Parallel Process. (ICPP).NewYork,\nNY, USA: Association for Computing Machinery, Aug. 2020, pp. 1–11.\n[17] G. Pîrlea, A. Kumar, and I. Sergey,Practical Smart Contract Sharding\nWith Ownership and Commutativity Analysis. New York, NY, USA:\nAssociation for Computing Machinery, 2021, pp. 1327–1341.\n[18] J. Hellings and M. Sadoghi, “ByShard: Sharding in a byzantine envi-\nronment,”Proc. VLDB Endowment, vol. 14, no. 11, pp. 2230–2243,\nJul. 2021.\n[19] Zilliqa Team.Zilliqa. Accessed: Jan. 25, 2022. [Online]. Available:\nhttps://www.zilliqa.com/\n[20] Ethereum.Shard Chains. Accessed: Jan. 25, 2022. [Online]. Available:\nhttps://ethereum.org/en/eth2/shard-chains/\n[21] K. Chodorow,Scaling MongoDB: Sharding, Cluster Setup, and Admin-\nistration. Sebastopol, CA, USA: O’Reilly Media, 2011.\n[22] P. Zheng, Z. Zheng, J. Wu, and H.-N. Dai, “XBlock-ETH: Extracting\nand exploring blockchain data from Ethereum,”IEEE Open J. Comput.\nSoc., vol. 1, pp. 95–106, 2020, doi:10.1109/OJCS.2020.2990458.\n[23] M. Castro and B. Liskov, “Practical Byzantine fault tolerance,” in\nProc. 3rd Symp. Operating Syst. Design Implement. (OSDI), 1999,\npp. 173–186.\n[24] Y. Zhu, Z. Zhang, C. Jin, A. Zhou, and Y. Yan, “SEBDB: Semantics\nempowered blockchain database,” inProc. IEEE 35th Int. Conf. Data\nEng. (ICDE), Apr. 2019, pp. 1820–1831.\n[25] J. Liang, Z. Qin, S. Xiao, L. Ou, and X. Lin, “Efficient and secure\ndecision tree classification for cloud-assisted online diagnosis services,”\nIEEE Trans. Dependable Secure Comput., vol. 18, no. 4, pp. 1632–1644,\nJul. 2021.\n[26] S. Micali, M. Rabin, and S. Vadhan, “Verifiable random functions,” in\nProc. 40th Annu. Symp. Found. Comput. Sci., 1999, pp. 120–130.\n[27] D. Boneh, J. Bonneau, B. Bünz, and B. Fisch, “Verifiable delay func-\ntions,” inProc. Annu. Int. Cryptol. Conf.Cham, Switzerland: Springer,\n2018, pp. 757–788.\n[28] E. K. Kogias, P. Jovanovic, N. Gailly, I. Khoffi, L. Gasser, and B. Ford,\n“Enhancing bitcoin security and performance with strong consistency\nvia collective signing,” inProc. 25th USENIX Secur. Symp., Austin,\nTX, USA, Aug. 2016, pp. 279–296.\n[29] E. Syta et al., “Keeping authorities ‘honest or bust’ with decentralized\nwitness cosigning,” inProc. IEEE Symp. Secur. Privacy (SP), May 2016,\npp. 526–545.\n[30] D. Boneh, B. Lynn, and H. Shacham, “Short signatures from the Weil\npairing,” inAdvances in Cryptology—ASIACRYPT,C.Boyd,Ed.Berlin,\nGermany: Springer, 2001, pp. 514–532.\n[31] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse attacks\non bitcoin’s peer-to-peer network,” inProc. 24th USENIX Secur. Symp.,\nWashington, DC, USA, Aug. 2015, pp. 129–144.\n[32] P. Zheng, Z. Zheng, J. Wu, and H.-N. Dai, “XBlock-ETH: Extracting\nand exploring blockchain data from ethereum,”IEEE Open J. Comput.\nSoc., vol. 1, pp. 95–106, 2020.\n[33] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Performance\noptimization for blockchain-enabled industrial Internet of Things (IIoT)\nsystems: A deep reinforcement learning approach,”IEEE Trans. Ind.\nInformat., vol. 15, no. 6, pp. 3559–3570, Jun. 2019.\n[34] T. Chen et al., “Understandingethereum via graph analysis,” inProc.\nIEEE Conf. Comput. Commun. (INFOCOM), Apr. 2018, pp. 1–9.\n[35] Z. Hong, S. Guo, P. Li, and W. Chen, “Pyramid: A layered sharding\nblockchain system,” inProc. IEEE INFOCOM Conf. Comput. Commun.,\nMay 2021, pp. 1–10.\n[36] R. Hemmecke, M. Köppe, J. Lee, and R. Weismantel,Nonlinear Integer\nProgramming. Berlin, Germany: Springer, 2010, pp. 561–618.\n[37] D. P. Bertsekas et al.,Dynamic Programming and Optimal Control.\nBelmont, MA, USA: Athena Scientific, 2011.\n[38] Project Development Team.Litecoin—Open Source P2P Digital Cur-\nrency. Accessed: Jan. 25, 2022. [Online]. Available: https://litecoin.org/\n[39] Google.The Go Programming Language. Accessed: Jan. 25, 2022.\n[Online]. Available: https://golang.org/\n[40] Ethereum.Go Ethereum. Accessed: Jan. 25, 2022. [Online]. Available:\nhttps://github.com/ethereum/go-ethereum\n[41] Harmony.Harmony. Accessed: Jan. 25, 2022. [Online]. Available:\nhttps://github.com/harmony-one/harmony\n[42] Libp2p.The Go Implementation of the Libp2p Networking Stack.\nAccessed:  Jan.  25,  2022.  [Online].  Available:  https://github.com/\nlibp2p/go-libp2p\n[43] G. Avarikioti, E. Kokoris-Kogias, and R. Wattenhofer, “Divide and\nscale: Formalization of distributed ledger sharding protocols,” 2019,\narXiv:1910.10434.\n[44] G. Danezis and S. Meiklejohn, “Centrally banked cryptocurrencies,”\n2015,arXiv:1505.06895.\n[45] L. N. Nguyen, T. D. T. Nguyen, T.N. Dinh, and M. T. Thai, “OptChain:\nOptimal transactions placement for scalable blockchain sharding,” in\nProc. IEEE 39th Int. Conf. Distrib. Comput. Syst. (ICDCS), Jul. 2019,\npp. 525–535.\n[46] Y. Tao, B. Li, J. Jiang, H. C. Ng, C. Wang, and B. Li, “On sharding\nopen blockchains with smart contracts,” inProc. IEEE 36th Int. Conf.\nData Eng. (ICDE), Apr. 2020, pp. 1357–1368.\nZicong  Hong(Graduate Student Member, IEEE)\nreceived the B.Eng. degree in software engineering\nfrom the School of Data and Computer Science,\nSun Yat-sen University. He is currently pursuing the\nPh.D. degree with the Department of Computing,\nThe Hong Kong Polytechnic University. His current\nresearch interests include blockchain, edge/cloud\ncomputing, and federated learning.\nSong  Guo(Fellow, IEEE) is currently a Full Pro-\nfessor at the Department of Computing, The Hong\nKong Polytechnic University. His research interests\ninclude edge AI, machine learning, mobile com-\nputing, and distributed systems. He has published\nmany papers in top venues with wide impact in\nthese areas and was recognized as a Highly Cited\nResearcher (Clarivate Web of Science). He holds\na Changjiang Chair Professorship awarded by the\nMinistry of Education of China. He is a fellow of the\nCanadian Academy of Engineering and a fellow of\nthe IEEE Computer Society. He was an IEEE ComSoc Distinguished Lecturer\nand a member of IEEE ComSoc Board of Governors. He was a recipient\nof over a dozen Best Paper Awards from IEEE/ACM conferences, journals,\nand technical committees. He is the Chair of IEEE Communications Society\n(ComSoc) Space and Satellite Communications Technical Committee. He has\nalso served as the chair for organizing and technical committees of many\ninternational conferences. He is the Editor-in-Chief of IEEE O\nPENJOURNAL\nOF THE\nCOMPUTERSOCIETY. He has served for IEEE Computer Society\non Fellow Evaluation Committee and has been named on editorial board of\na number of prestigious international journals like IEEE T\nRANSACTIONS\nON\nPARALLEL ANDDISTRIBUTEDSYSTEMS, IEEE TRANSACTIONS ON\nCLOUDCOMPUTING, and IEEE TRANSACTIONS ONEMERGINGTOPICS IN\nCOMPUTING.\nPeng  Li(Senior Member, IEEE) received the B.S.\ndegree from the Huazhong University of Science\nand Technology, China, in 2007, and the M.S.\nand Ph.D. degrees from The University of Aizu,\nJapan, in 2009 and 2012, respectively. He is cur-\nrently a Senior Associate Professor at The Univer-\nsity of Aizu. He has authored or coauthored over\n100 papers in major conferences and journals. His\nresearch interests includewired/wireless networking,\ncloud/edge computing, the Internet-of-Things, and\ndistributed AI systems. He is an Editor of IEEE\nO\nPENJOURNAL OF THECOMPUTERSOCIETYandIEICE Transactions on\nCommunications.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 11:59:43 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain via Layered Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Scaling Blockchain via Layered Sharding",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118160429+05'30'",
          "ModDate": "D:20221121172747-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213350",
            "dc:title": "Scaling Blockchain via Layered Sharding",
            "dc:subject": "Blockchainscalabilityshardingcross-shard transactions",
            "dc:creator": "Zicong HongSong GuoPeng Li",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3575",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213350",
            "prism:volume": "40",
            "prism:endingpage": "3588",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 14
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "Benzene: Scaling Blockchain With\nCooperation-Based Sharding\nZhongteng Cai, Junyuan Liang, Wuhui Chen,Member, IEEE, Zicong Hong,\nHong-Ning Dai\n,Senior Member, IEEE, Jianting Zhang, and Zibin Zheng,Fellow, IEEE\nAbstract—Sharding has been considered as a prominent approach to enhance the limited performance of blockchain. However, most\nsharding systems leverage a non-cooperative design, which lowers the fault tolerance resilience due to the decreased mining power as\nthe consensus execution is limited to each separated shard. To this end, we present Benzene, a novel sharding system that enhances\nthe performance by cooperation-based sharding while defending the per-shard security. First, we establish a double-chain architecture\nfor function decoupling. This architecture separates transaction-recording functions from consensus-execution functions, thereby\nenabling the cross-shard cooperation during consensus execution while preserving the concurrency nature of sharding. Second, we\ndesign a cross-shard block verification mechanism leveraging Trusted Execution Environment (TEE), via which miners can verify\nblocks from other shards during the cooperation process with the minimized overheads. Finally, we design a voting-based consensus\nprotocol for cross-shard cooperation. Transactions in each shard are confirmed by all shards that simultaneously cast votes,\nconsequently achieving an enhanced fault tolerance and lowering the confirmation latency. We implement Benzene and conduct both\nprototype experiments and large-scale simulations to evaluate the performance of Benzene. Results show that Benzene achieves\nsuperior performance than existing sharding/non-sharding blockchain protocols. In particular, Benzene achieves a linearly-improved\nthroughput with the increased number of shards (e.g., 32,370 transactions per second with 50 shards) and maintains a lower\nconfirmation latency than Bitcoin (with more than 50 shards). Meanwhile, Benzene maintains a fixed fault tolerance at 1/3 even with the\nincreased number of shards.\nIndex Terms—Blockchain, sharding, scalability, function decoupling, consensus algorithm\nÇ\n1INTRODUCTION\nA\nSa decentralized ledger storing historical transactions,\nblockchain can be regarded as a massive decentralized\ndatabase. Blockchain has been considered as a disruptive tech-\nnology reshaping industrial and business sectors due to its\ndecentralization, transparency,traceability, and immutability\n[1], [2]. However, blockchain systems such as Bitcoin and Ether-\neum have poor performance in terms of low transaction\nthroughput and high latency, compared with conventional cen-\ntralized payment systems. For example, Bitcoin can process 7\nTransactions Per Second (TPS) with a 10-minute latency while\ncentralized payment systems such as Visa can handle thou-\nsands of transactions per second with real-time confirmation [3].\nThe poor performance hinders blockchain systems from a wide\nadoption in practice. There have been a myriad of attempts for\nscaling up blockchain systems [4], [5], [6], [7], [8], [9]. One of the\nmost popular and practical approaches to enhance blockchains\nissharding[10]. The basic idea of sharding is to divide the entire\nnetwork into different subsets(i.e., shards). Consequently,\nworkloads of the entire system, including computation, com-\nmunication, and storage, are distributed among shards to be\nexecuted in parallel. As a result, the throughput of a block-\nchain-sharding system can be significantly improved with the\nincreased number of shards [11].According to consensus algo-\nrithms being adopted, sharding approaches can be further cate-\ngorized into Byzantine-Fault-Tolerance (BFT) shards (e.g.,\nOmniLedger [12] and RapidChain [13]) and Proof-of-Work\n(PoW) shards (e.g., Monoxide [14]).\n1.1  Motivation\nLimitations of Existing Sharding Schemes.Most sharding\napproaches mainly adopt anon-cooperativedesign, in which\nan independent consensus reaches in each shard without\nreliance on other shards. As a result, participants of the con-\nsensus protocol are only limited to nodes belonging to a\n\u0001Zhongteng Cai, Junyuan Liang, and Wuhui Chen are with the School of\nComputer Science and Engineering, Sun Yat-sen University, Guangzhou\n510006, China.\nE-mail: {caizht3, liangjy53}@mail2.sysu.edu.cn, chenwuh@mail.sysu.edu.\ncn.\n\u0001Zicong Hong is with Hong Kong Polytechnic University, Hong Kong\nSAR, China. E-mail: zicong.hong@connect.polyu.hk.\n\u0001Hong-Ning Dai is with the Department of Computer Science, Hong Kong\nBaptist University, Hong Kong. E-mail: hndai@ieee.org.\n\u0001Jianting Zhang is with the Department of Computer Science, Purdue Uni-\nversity, West Lafayette, IN 47907 USA. E-mail: zhan4674@purdue.edu.\n\u0001Zibin Zheng is with the School of Software Engineering, Sun Yat-sen Uni-\nversity, Zhuhai, Guangdong Province 519082, China. E-mail: zhzibin@mail.\nsysu.edu.cn.\nManuscript received 21 January 2022; revised 13 October 2022; accepted 27\nNovember 2022. Date of publication 13 December 2022; date of current ver-\nsion 27 December 2022.\nThe work was supported in part by the National Key Research and Develop-\nment Plan under Grant 2021YFB2700302, in part by the National Natural\nScience Foundation of China under Grant 62172453, in part by the National\nNatural  Science  Foundation  of  Guangdong  province  under  Grants\n2022A1515010154, 6142006200403, and XM2021XT1084, in part by the\nMajor Key Project of PCL under Grant PCL2021A06, in part by the Program\nfor Guangdong Introducing Innovative and Entrepreneurial Teams under\nGrant 2017ZT07X355, and in part by the Pearl River Talent Recruitment\nProgram under Grant 2019QN01X130.\n(Corresponding author: Wuhui Chen.)\nRecommended for acceptance by R. Tolosana.\nDigital Object Identifier no. 10.1109/TPDS.2022.3227198\nIEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023639\n1045-9219©2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee ht_tps://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "single shard\n1\n. Although non-cooperative sharding schemes\nrelief workloads imposing on each node compared with\nnon-sharding systems, they also confront critical security\nconcerns. First, non-cooperative sharding leads to a lower\nfault tolerance due to the separation of honest participants.\nCompared with attacking the entire non-sharding system, it\nis easier for an adversary to attack a single shard in a shard-\ning system (also known as1% attack[15]). Consequently,\nthe fault tolerance resilience of a sharding system is lower\nthan that of a non-sharding system when adopting the same\nconsensus algorithm. With respect to BFT-based sharding\nschemes, to ensure that each shard can satisfy the intra-\nshard fault tolerance with high probability (e.g., 99%), the\nsharding system is subject to a lower total fault tolerance.\nFor instance, OmniLedger [12] has 33% intra-shard fault tol-\nerance and 25% total fault tolerance. Regarding PoW-based\nsharding schemes, since honest mining power is divided\ninto isolated shards, the adversary is allowed to conduct 1%\nattack by focusing its mining power on a single shard [14].\nAs proved in Theorem 1 (in Section 5.1.1), the system fault\ntolerance decreases from 1/2 in non-sharding Bitcoin to 1/\n(s+1) in the non-cooperative sharding system, wheresrep-\nresents the number of shards. The root cause of the\ndecreased  fault  tolerance  resilience of  non-cooperative\nsharding schemes lies in the separation of honest partici-\npants, thereby leading to the decreased mining power.\nSecond, security challenges further hinder the full opti-\nmization of the system performance. For example, the BFT-\nbased sharding requires the reconfiguration of periodic\nepochs to prevent a single shard from being captured by a\nslowly adaptive adversary [12]; this demands extra time\ncosts and in turn weakens the system performance [13].\nMoreover, blocks in a PoW-based sharding system need to\nwait for more sequential blocks compared with non-shard-\ning systems, since the separation of mining power leads to a\nhigher probability for a single block being orphaned.\nTo tackle these challenges, we investigate acooperation-\nbased sharding. The basic idea of cooperation-based sharding\nis to let different shards cooperate with each other to con-\nfirm transactions while preserving parallelism. In other\nwords, each shard reaches a consensus with the participa-\ntion of mining power from other shards. Such cooperation\nincreases the number of participants in the consensus,\nthereby enhancing the per-shard security.\nChallenges in Cooperation-Based Sharding.Realizing the coop-\neration-based sharding, however, poses the following non-\ntrivial challenges. (1)How to design a cooperation-based sharding\narchitecture to realize cross-shard cooperation while preserving par-\nallelism?The architecture in previous non-cooperative shard-\ning systems cannot efficiently support the cooperation among\nshards. The cooperation-based sharding demands a novel\ndesign, which can enable efficient cross-shard cooperation\nwhile preserving parallelism. (2)How to conduct cross-shard ver-\nification with low per-node overheads?To enable cooperation\namong shards, nodes need to verify blocks from other shards.\nA trivial approach is to store all historical transactions of other\nshards for block verification, thereby causing considerable\nstorage overheads. Such overheads need to be reduced to\nachieve a scalable sharding solution. (3)How to design a cooper-\nation-based consensus protocol to assure the per-shard security?The\ncooperation-based sharding needs to design a consensus pro-\ntocol utilizing the mining power from multiple shards while\nnot compromising the system performance.\n1.2  Main Results and Contributions\nOur Solutions.To tackle these challenges, we present a novel\nscalable sharding system, namelyBenzene, analogous to the\nplanar ring structure of the chemical “Benzene”. Our Ben-\nzene realizes the cross-shard cooperation with the following\nnovelties. (1)Benzene decouples system functions to enable coop-\neration while preserving parallelism. Previous sharding sys-\ntems [12], [13], [14] couple the functions of both transaction\nrecording and consensus execution together. Differently, in\nBenzene, functions of transaction recording and consensus\nexecution are separated from each other. Transaction record-\ning is conducted by each shard independently, and consen-\nsus execution is conducted by all shards in cooperation.\nMoreover, we decouple the blockchain structure to support\ndifferent functions. In Benzene, we design a novel double-\nchain architecture, which consists of i)proposer chains\nassigned for independent transaction recording in each\nshard and ii)vote chainsassigned for cooperation-based con-\nsensus. Proposer chains record transactions, while vote\nchains are mainly composed of lightweight block headers.\nSuch a design enables lightweight cooperation while pre-\nserving the concurrency nature of sharding. (2)Benzene\ndesigns cross-shard block-verification mechanism based on Trusted\nExecution Environment (TEE). TEEs [16], [17] can be deployed\nin each shard to provide cross-shard block-verification serv-\nices. Nodes can directly verify validation proofs provided by\nTEEs rather than verifying original proposer blocks (i.e.,\nblocks in proposer chains) from other shards. It is worth\nmentioning that nodes in the blockchain network do not\nhave to trust all TEEs as some of them might be compro-\nmised by the adversary. Conversely, honest nodes can check\nthe validity of validation proofs so as to improve the reliabil-\nity. (3)Benzene designs a cooperation-based consensus protocol\nbased on cross-shard voting. Proposer blocks that have been\nauthenticated by cross-shard verification are voted by vote\nblocks (i.e., blocks in vote chains), which are generated in all\nshards. The proposer block with the most number of votes in\neach shard will be considered as the consensus result. Such a\nprotocol introduces more mining power into a single shard,\nthereby enhancing the per-shard security. Besides, cross-\nshard transactions are confirmed in related shards sequen-\ntially. They are first confirmed in the originated shard, sent\nto the targeted shard along with related validation proofs,\npackaged again in a proposer block and finally get confirmed\nin the targeted shard. Forks may occur once a cross-shard\ntransaction is aborted in the originated shard to preserve\natomicity, but such a situation occurs quite rarely when the\ntransaction is embedded deep enough in the originated\nshard.\nMain Results.We implement Benzene and conduct both\nintensive prototype experiments and simulations to evalu-\nate its performance with a comparison with the state-of-\nthe-art sharding/non-sharding schemes. For a high-level\n1.Although different shards may process cross-shard transactions\n(such as [13]), they do not cooperate in confirming blocks of each indi-\nvidual shard.\n640IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "presentation, we mainly categorize existing schemes into 1)\ntraditional non-sharding (such as Bitcoin), 2) voting-based\nnon-sharding (such as Prism [18]), 3) non-cooperative\nsharding and 4) Monoxide [14]. Table 1 shows a comparison\nof Benzene with these representative approaches. Benzene\nachieves 32,370 TPS and confirms each block with 13\nsequential blocks when there are 50 shards (details on the\nexperimental results to be given in Section 6). Moreover,\nBenzene assures a fixed fault tolerance of 1/3 while distrib-\nuting the storage overheads among all shards. By contrast,\nother approaches cannot achieve a comparable performance\nto Benzene. The major reason is explained as follows.\nAlthough the voting-based non-sharding achieves a higher\nthroughput and lower confirmation latency than Bitcoin-\nlike systems (traditional non-sharding systems) through\nfunction decoupling, it imposes the same computation and\nstorage overheads on each node, thereby leading to poor\nscalability. Meanwhile, although the non-cooperative shard-\ning scales up traditional non-sharding systems by dividing\nthe computation and storage overheads, it is subject to a\nlonger confirmation interval and a decreased fault tolerance\ndue to the separation of honest mining power. Monoxide\nintroduces Chu-ko-nu mining, which allows miners to mine\nblocks for multiple shards, to protect single shards. How-\never, it requires miners to store and verify blocks of other\nshards, thereby increasing per-node overhead. Differing\nfrom the above approaches, Benzene combines both shard-\ning and function decoupling technologies, and designs ligh-\nweight cooperation protocol, to implement cooperation-\nbased sharding, consequently achieving a considerable\nimprovement in terms of the throughput and preserving a\nfixed fault tolerance with the increment of shards.\nContributions.The main contributions of this paper are\nsummarized as follows:\n\u0001Double-Chain Sharding Architecture.We present the dou-\nble-chain architecture to enable efficient cross-shard\ncooperation. We separate transaction-recording from\nconsensus-execution so as to execute them at different\nblockchains. Such a design enables cross-shard cooper-\nation in Benzene without affecting independent trans-\naction recording processes in each shard.\n\u0001TEE-Assisted Cross-Shard Verification.We leverage TEEs\nto  provide  cross-shard  block-verification  services,\nthereby relieving the communication and storage over-\nheads required by cross-shard cooperation. We reduce\ntheper-nodeoverheadswithout compromising secu-\nrity and decentralization.\n\u0001Cooperation-Based Consensus.We present a coopera-\ntion-based consensus protocol to assure the per-\nshard security and enhance the system performance.\nIn our protocol, transactions in each shard are con-\nfirmed by vote blocks which are generated in parallel\namong all shards. This design enhances the fault tol-\nerance of a single shard and reduces the confirma-\ntion latency.\n\u0001Experiment Evaluation.We conduct both prototype\nexperiments and simulations to evaluate the perfor-\nmance of Benzene. Our results show that the through-\nput of Benzene is linearly improved with the number\nof shards increasing to 200 and achieves 32,370 TPS\nwith 50 shards. Moreover, Benzene achieves a lower\nconfirmation latency than the traditional non-shard-\ning system with a fixed fault tolerance of 1/3, when\nthere are more than 50 shards.\nThe rest part of this paper is organized as follows. In Sec-\ntion 2, we introduce previous studies related with this\npaper. Section 3 presents system model and adversary\nmodel of our Benzene. Section 4 describes the system design\nof Benzene in detail. Security analysis and performance\nanalysis of our system are given in Section 5. Experimental\nsetup and evaluation results are proposed in Section 6.\nFinally, we conclude our work in Section 7.\n2RELATEDWORK\n2.1  Blockchain-Sharding System\nA number of blockchain-sharding systems have been pro-\nposed and investigated [19], [20], [21], [22], [23], [24], [25]. In\nparticular, Elastico [26] partitions the network into several\ncommittees to process transactions in parallel while relying on\na final committee to agree on a global result. However, since\neach committee in Elastico uses a non-scalable PBFT [27] con-\nsensus as its intra-committee consensus, it limits a committee\nin a small scale and also leads to a high failure probability [12].\nOmniLedger [12] designs a scalable BFT-based consensus\nalgorithm, namely ByzCoinX, to increase the size of each\nshard, consequently reducingthe failure probability. How-\never, OmniLedger is still subject to 33% intra-shard fault toler-\nance and 25% total fault tolerance, which is the same as\nElastico [13]. To increase the fault tolerance, RapidChain [13]\nruns an intra-shard BFT-based consensus with 50% fault toler-\nance in a synchronous network though such an approach is\nonly suitable for a small-scale shard. By contrast, Benzene can\nguarantee the high node scalability with PoW-based consen-\nsus [28]. Dang et al. [29] apply sharding to permissioned\nTABLE 1\nComparison of Benzene With Other Sharding/Non-Sharding Blockchain Protocols\nProtocolsThroughput\n(TPS)\nConfirmation\nInterval\nFault\nTolerance\nStorageScalabilityFunction\nDecoupling\nTraditional non-sharding (Bitcoin)2,780151/2X✗✗\nVoting-based non-sharding\n(Prism)\n6,17031/2X✗✓\nNon-cooperative sharding9,330891=ðsþ1ÞX=s✓✗\nMonoxide9,260151/2X✓✗\nBenzene (this paper)32,370131/3X=s✓✓\n#of nodes = 2,000; Fault tolerance = 1/4;#of shards =s; Total storage overhead =X.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING641\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "blockchain system, thereforeachieves a high performance.\nSpecifically, it assumes that each node has a trusted hardware\nfor maintaining logs of consensus messages, therefore ensures\nthat BFT protocols can achieve higher fault tolerance to avoid\na single shard from being compromised. By contrast, Benzene\nsupport permissionless environment and do not require every\nminer to have a trusted hardware.\nSome recent works concentrate on optimizing block-\nchain sharding systems in specific application scenarios.\nFor instance, Chainspace [20] and Tao et al. [21] focus on\nsupporting smart contracts upon the sharding infrastruc-\nture, while the latter one explores methods to minimize\ncross-shard overheads. CoSplit [24] maximizes the degree\nof parallelization when transactions in a sharding system\nmanipulate on the same states of smart contracts. Ether-\neum proposed a Danksharding scheme based on Proof-of-\nStake consensus, in which there are no disjoint shards. Vali-\ndators check the availability of the same block through Data\nAvailability Sampling, so they do not have to download the\nwhole contents of the block to check its availability. In com-\nparison, validators in Benzene are still partitioned into dis-\njoint shards and verify the whole contents of blocks, but can\nstill be adopted in a system, which mainly concentrates on\nchecking the availability of the data.\nHowever, most approaches mentioned above are non-\ncooperative sharding, in which the consensus in each\nshard is reached independently by disjoint sets of nodes.\nAlthough Monoxide [14] proposes Chu-ko-nu Mining\nbased on PoW mechanism to allow nodes to participate in\nthe consensus process of other shards, it requires more\nper-node storage overheads or centralized nodes, to guar-\nantee its security. By contrast, our Benzene imposes fewer\noverheads and meanwhile does not rely on any centralized\nnodes to preserve security.\n2.2  TEE in Blockchain\nAs an isolated environment in processor, a TEE can protect the\nprivacy and ensure the integrity of both data and codes\ninside [30]. Typical examples of TEEs include Intel SGX [31],\nARM Trustzone [32], etc. Numerous studies have introduced\nTEEs into the blockchain system. The functionalities of TEEs in\nblockchain systems include acting as random sources and sup-\nporting privacy-preserving applications, etc. Take BITE [33] an\nexample, in which TEEs verify transactions for light clients\nwithout revealing privacy. Meanwhile, Dang et al. [29] utilize\nIntel SGX in a BFT-based sharding system to serve for shard\nformation and consensus. Teechain [34] leverages TEEs to\neliminate misbehaving parties and establish a more perform-\nant payment channel network. Other proposals such as [35],\n[36], [37] leverage TEEs to support the execution of smart con-\ntracts. For instance, Ekiden [35] proposes an off-chain contract\nexecution method, through which smart contracts are executed\nin TEEs with privacy protection. It is worth mentioning that\nTEEs in our Benzene are responsible for verifying blocks.\nRecent studies have investigated approaches to address\nchallenges when incorporating TEEs into blockchains [34],\n[38], [39]. Some attacks targeting at TEEs, e.g., rollback\nattacks [40], may threaten the security guarantees of TEE-\nblockchain systems [34]. Similar to TEE-based contract exe-\ncution engines, Benzene needs to avoid security challenges\nlike rollback attacks. In particular, Benzene designs the\nappropriate TEE deployment and blockchain-based super-\nvision to protect TEE security. As a result, Benzene does not\nrequire participants to trust all TEEs, thereby eliminating\nthe cost of preserving consistency among multiple TEEs.\n3SYSTEM ANDADVERSARYMODEL\n3.1  System Model\nWe assume an open peer-to-peer network that allows all\nnodes to join or leave at any time. The entire network is\ndivided intosshards. Each joining node that initially gener-\nates an address is randomly assigned to a shard. The block-\nchain maintainsaccountsowned by users. Each account\nrecords some states, like the balance value. Each account\nbelongs to a specific shard. Users can generate transactions\nto manipulate these accounts. We denote a transaction by\nTxhS; t; D; ni, which represents thenth transaction gener-\nated by source accountSconducting operationstupon des-\ntination accountD. The operations can be token transfer,\nstate manipulation, etc. Assume thatSbelongs to ShardA.\nIf accountDalso belongs to ShardA, then such a transaction\nis alocal transaction; otherwise, it is across-shard transaction.\nSome of the nodes in the network are equipped with TEE\nhardware.\n3.2  Adversary Model\nAdversaries can initiate several typical attacks. Consider an\nadversary who occupies a specific fraction of the total min-\ning power [41]. The adversary can decide what to do with\nthe information received from the network [18] and how to\nmake use of its own mining power (e.g., focusing its mining\npower on a specific shard to conduct 1% attack [14]). More-\nover, the adversary can deploy TEEs on its nodes and offer\nverification services to miners in the same shard. Such TEEs\ncan be correctly initialized. But the adversary may decide\nwhat messages received by TEEs, or restart TEEs and pro-\nvide correctly-encrypted yet stale states (i.e., conducting\nrollback attacks) to disturb its execution results [39]. In con-\nclusion, the adversary can mislead TEEs to generate execu-\ntion results with states deviated from the newest consensus\nresults.\n4COOPERATION-BASEDSHARDINGSYSTEM\n4.1  System Overview\nBenzene is a novel blockchain sharding system with a coop-\neration-based consensus protocol. Fig. 1 depicts key compo-\nnents of Benzene. Benzene is composed of a double-chain\narchitecture, in which each shard maintains two types of\nblockchains to conduct two decoupled functions: 1) pro-\nposer chains record transactions and 2) vote chains conduct\ncooperation-based consensus. To realize cross-shard coop-\neration, each shard conducts cross-shard verification to ver-\nify proposer blocks of other shards. Tasks of authenticating\nblock contents are delegated to TEEs, thereby incurring\nfewer storage and computation overheads at ordinary\nnodes. The cooperation-based consensus is realized through\ncross-shard voting. Each shard confirms proposer blocks\naccording to vote blocks generated in all shards. We first\nelaborate on key components of Benzene as follows.\n642IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "Double-Chain Architecture.Benzene enables cross-shard\ncooperation by function decoupling on top of the double-\nchain architecture. In particular, Benzene decouples the\ntransaction-recording functions from the consensus-execu-\ntion functions byproposer chainsandvote chains, respec-\ntively. Each shard has one proposer chain and one vote\nchain. Proposer chains are composed ofproposer blocksthat\nrecord transactions related to the same shard. Vote chains\nare composed ofvote blocks, which participate in cross-shard\nvoting consensus protocol to confirm proposer blocks on\nproposer chains. We will further elaborate on the double-\nchain architecture in Section 4.2.\nCross-Shard Verification.To accomplish cooperation-based\nconsensus, miners in a shard have to affirm the correctness\nof proposer blocks in other shards. Benzene designs a cross-\nshard  verification  mechanism  integrated  with  TEEs\ndeployed by nodes that are willing to provide authentica-\ntion services. TEEs verify proposer blocks of the same shard\nand give validation proofs. Both headers of proposer blocks\nand validation proofs are broadcast among all shards. Min-\ners in other shards conduct cross-shard verification through\nverifying proofs produced by TEEs before generating vote\nblocks. With the adoption of TEEs, miners in other shards\nare not necessary to verify block contents themselves but\nverify the validation proofs instead. Therefore, they do not\nneed to store the complete historical transaction records of\nother shards so that storage overheads can be saved. Sec-\ntion 4.3 will describe the cross-shard verification mecha-\nnism in detail.\nCross-Shard Voting Consensus.The aim of cross-shard\nvoting consensus is to confirm a unique proposer block in\neach shard according to vote blocks that have been mined\nin all shards. The cross-shard voting consensus consists of\nthree phases: (1)transaction-recording phase, (2)vote-genera-\ntion phase, and (3)block-confirmation phase. In the transaction-\nrecording phase, proposer blocks recording transactions are\ngenerated by miners. More than one proposer blocks may\nbe simultaneously generated in each shard (like BlockA\nand BlockBof Shard 1 in Fig. 1), thereby incurring forks,\nwhich will nevertheless be resolved by vote blocks later.\nTEEs verify newly-mined proposer blocks, and validation\nproofs generated by TEEs will be sent to the entire network,\nas depicted by blue dotted arrows in Fig. 1. In the vote-gen-\neration phase, miners verify validation proofs from all\nshards to check the validity of proposer blocks, without the\nneed for downloading whole block contents, and mine vote\nblocks so as to vote for one proposer block in each shard, as\ndepicted by red arrows in Fig. 1. Vote blocks are also\nbroadcast across the entire network. In the block-confirma-\ntion phase, the proposer block containing the most number\nof votes within each shard is confirmed (e.g., the BlockBin\nShard 1). Each shard synchronizes vote chains from all\nshards to recognize the voting results at the sameheight(i.e.,\nthe distance from a block to the genesis block). A unani-\nmous distributed ledger is thus generated out of the con-\nfirmed proposer block.\nCross-shard voting consensus enhances the fault toler-\nance of a single shard while preserving high performance.\nThe enhanced fault tolerance mainly owes to the mining\npower brought by vote blocks into every single shard.\nMeanwhile, vote blocks are also generated in a parallel so as\nto greatly reduce the confirmation latency compared with\nBitcoin that confirms a block with sequential blocks on a sin-\ngle chain [18], [42]. Section 4.4 will give a thorough descrip-\ntion of cross-shard voting consensus protocol.\n4.2  Double-Chain Architecture for Function\nDecoupling\nBenzene separates functions of transaction recording and\nconsensus execution that are coupled together in traditional\nblockchains like Bitcoin so to achieve cross-shard coopera-\ntion. Decoupled functions are conducted by a double-chain\narchitecture. In the double-chain architecture, each shard\nmaintains two blockchains: a proposer chain and a vote\nchain. A proposer chain records transactions in its shard\nconcurrently while a vote chain cooperates with other vote\nchains to confirm blocks on the proposer chain. The pro-\nposer chain of ShardIis denoted byPC\nI\nwithPC\nI\nh\nbeing\nthe block at heighth. Similarly,VC\nI\ndenotes the vote chain\nin ShardIwithVC\nI\nh\nbeing itshth block, where a term with a\nwidehat represents the header of a block or a chain of block\nheaders (e.g.,\nd\nVC\nI\nh\nand\nd\nVC\nI\n). Some related characteristics\nare summarized in Table 2.\n4.2.1  Proposer Chain\nBeing responsible for recording transactions in each shard, a\nproposer chain is composed of proposer blocks linked by\nback-hashes. After receiving and verifying transactions in\nthe same shard, a miner can pack transactions in the form of\na Merkle tree and find a nonce that fulfills the PoW target to\nmine a valid proposer block. The PoW target is shared\namong diverse shards. Multiple proposer blocks may exist\nin a shard at the same time similar to the occurrence of forks\nin Bitcoin though they will later be resolved by the coopera-\ntion-based consensus. We specify an unconfirmed proposer\nFig. 1. The architecture of Benzene.\nTABLE 2\nBlockchain Characteristics\nPC\nI\n=VC\nI\nThe proposer chain / vote chain in the\nIth shard.\nPC\nI\nh\n=VC\nI\nh\nThe proposer block / vote block at\nheight h onPC\nI\n=VC\nI\n.\nPC\nI\nh;i\nTheith proposer block at height h on\nPC\nI\n(fork exists).\nd\nPC\nI\nh\n=\nd\nPC\nI\n=\nd\nVC\nI\nh\n=\nd\nVC\nI\nThe header of the referred block or\nblockchain.\nsThe total number of shards.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING643\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "block asPC\nK\nh;i\n, withKbeing the shard index,hbeing the\nblock height, andibeing the index among proposer blocks\nwith the sameKandh. Take Fig. 2 as an example, in which\ntwo proposer blocksPC\nN\nh;1\nandPC\nN\nh;2\n(at the same height)\nare mined in ShardN. Proposer blocks are then verified by\nTEEs and their headers (e.g.,\nd\nPC\n1\nh\nto\nd\nPC\nN\nh;2\n) are broadcast to\nall remaining shards to receive votes from Shard 1 to Shard\nN. Each shard also maintains headers of the proposer chains\nof other shards to record consensus results.\n4.2.2  Vote Chain\nVote chains enable cross-shard cooperation among all\nshards through voting upon proposer chains. A vote chain\nis composed of linked vote blocks, which are generated\nthrough the PoW process. A vote block represents a vote\nuponsheaders of proposer blocks, each of which belongs to\na unique shard among allsshards. Fig. 2 depicts that the lat-\nest vote blockVC\n1\nh\nin Shard 1 casts votes upon headers of pro-\nposer blocks in all shards, i.e., from\nd\nPC\n1\nh\nof Shard 1 to\nd\nPC\nN\nh;1\nof ShardN. The vote block constructs a Merkle tree based on\nthe hash values of headers ofsproposer blocks. The Merkle\nroot is included in the vote block header. If a fork occurs on a\nvote chain, it will be resolved according to the longest-chain-\nrule similar to Bitcoin [43], [44]. Although a single vote chain\nmay be reversed by the attacker, it will have little effect on\nthe proposer chain, since the proposer chain relies on the\noverall effects contributed by all vote chains. We will prove\nlater in Section 5.2.1 that the overall effect of multiple vote\nchains can make each proposer chain have shorter confirma-\ntion latency compared with Bitcoin to achieve the same\nreversal probability when there are more than 40 shards.\nVote blocks are broadcast to the whole network to help each\nshard acknowledge the consensus results. Since each vote\nblock is negligible in size (i.e., a vote block is much smaller\nthan a proposer block as in Section 5.2.3), it will not affect the\nscalability of the system. Each shard maintains allsvote\nchains to verify the latest vote blocks and make historical\nconsensus results auditable.\n4.3  Cross-Shard Verification Mechanism\nIn the cooperation-based architecture of Benzene, an hon-\nest miner has to guarantee the validation of proposer\nblocks in other shards before casting votes on them. In\nother words, a cross-shard verification is necessary. A triv-\nial approach to achieve this goal is to store blockchain\nrecords of other shards and verify proposer block contents\nthemselves while it causes considerable overheads since\nminers have to store all historical transactions and verify\nproposer blocks from all shards. To reduce both computa-\ntion and storage overheads, we adopt TEEs to provide\nvalidation proofs for achieving the cross-shard block-\nverification.\n4.3.1  Security Challenges of TEE\nHowever, the direct incorporation of TEEs into block-\nchains also poses two challenges in assuring the correct-\nness  of  the  cross-shard  verification:  (C1)The  weak\navailability of TEEssince a TEE can be crashed by its owner\nat any time; (C2)The fragile guarantee of the latest blockchain\nstate. First, a TEE may suffer from the rollback attack due\nto the execution of the stale states [40], [45], consequently\nviolating its execution results [39], [40]. Consider a case\nthat a TEE has updated its state stored in the disk with\nsuccessively confirmed proposer blocks. When the TEE is\nrestarted by the adversary, the run-time memory is\ncleared and the TEE requires the latest state. The adver-\nsary then provides a stale state (though correctly sealed),\nthereafter making further verification results deviate\nfrom the current consensus results. Second, even for TEEs\nnot being restarted by the adversary, they may also exe-\ncute on an incorrect state. For instance, a TEE may be pro-\nvided with an orphaned block so that it maintains an\noutdated or incorrect state, which is not consistent with\nthe latest consensus result.\n4.3.2  Design of Verification Mechanism\nWe design a cross-shard verification mechanism, which\ntackles the above challenges of TEEs. Our solutions can be\nsummarized into the following aspects.\nAn Appropriate TEE Deployment to Address C1. We lever-\nage Intel SGX [31] for the implementation of TEE. In partic-\nular, a miner deploys Intel SGX on its node. As an isolated\ncontainer of codes, theenclavein Intel SGX is initialized\nwith the blockchain states and verification codes. The key\npair is generated for the further encryption process. Intel\nSGX ensures a correct initialization of given codes through\nremote attestation [38], [46], [47]. Both attestation results\nand public keys of TEEs are publicly available so that the\nexecution of TEEs will not deviate from the pre-defined\nverification codes after verifying attestation results since\nthe integrity of initial codes in TEEs is ensured (not tam-\npered by the adversary). Meanwhile, all these TEEs can\nverify blocks independently with locally stored states, con-\nsequently allowing miners to obtain verification services\nfrom an arbitrary number of TEEs. Moreover, this design\nalsoguaranteesthefaulttolerancebecauseofthefollowing\nrefinements. (a) Each TEE can be interchangeable (e.g.,\nreplacing a failed TEE) by adopting a stateless design.\nTEEs require the latest states of blockchain when verifying\nproposer blocks. Further, a proof-of-publication can ensure\nthat the state has been confirmed by the consensus proto-\ncol [35]. (b) Miners can require the latest states of the\nrelated accounts from the targeted shard and then manu-\nally verify proposer block contents even when TEE serv-\nices are not accessible.\nSupervision-Based Verification to Tackle C2.The basic idea\nof supervision-based verification is to allow miners in other\nshards to distinguish suspicious validation proofs from\nFig. 2. Proposer chains and vote chain.\n644IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "correct ones even though TEEs cannot guarantee to always\nfetch the latest state. The process of supervision-based veri-\nfication is depicted in Fig. 3. Each time a proposer block that\nis successfully mined will be forwarded to the TEE of the\nsame shard for verification (Step\n\u0001\n1\n). The TEE checks\nwhether a proposer block is valid according to both pre-\nloaded codes and locally maintained states. If such a block\nis valid, the TEE returns a digital signature as its validation\nproof (Step\n\u0001\n2\n). The miner then sends the header of its pro-\nposer block and the validation proof to all shards (Step\n\u0001\n3\n).\nPreloaded verification codes require the TEE to include the\nhash values of the latest proposer block headers in the vali-\ndation proof. Since the header of the latest proposer block is\nbroadcast and maintained by the whole network, all nodes\ncan verify its hash value independently (Step\n\u0001\n4\n). If the\nhash value in the TEE signature is consistent with locally\nstored records, then miners will trust this block and vote for\nit. Otherwise, the block may be authenticated with the out-\ndated or orphaned state and will consequently be rejected\nby honest miners.\n4.4  Cross-Shard Voting Consensus Protocol\nThe cross-shard voting consensus protocol aims to confirm\nboth local transactions and cross-shard transactions.\n4.4.1  Confirming Local Transactions\nThe basic goal of consensus protocol is to decide one unique\nproposer block in each shard. For each ShardI(I¼1;\n2;\u0003\u0003\u0003;s), the cooperation-based consensus decides a unique\nproposer blockPC\nI\nh\nat the heighthwith given vote blocks\nVC\n1\nh\n,VC\n2\nh\n,\u0003\u0003\u0003,VC\ns\nh\n. Proposer blockPC\nI\nh\nat heighthin turn\ngives a unique order of transactions in ShardI. Algorithm 1\nand Fig. 4 describes the three major phases of the consensus\nprotocol.\nAlgorithm 1.Cooperation-Based Consensus Protocol\n1)Transaction-Recording\na)  Miner in ShardIgeneratesPC\nI\nh;i\nbased onPC\nI\nh\u00041\n;\nb)  SendsPC\nI\nh;i\nto a TEE deployed in ShardI;\nc)  The TEE returns a validation proof;\nd)  Broadcasts the proposer block header\nd\nPC\nI\nh;i\nand its\nvalidation proof to all shards.\n2)Vote-Generation\na)  Miner receives sets of proposer block headers and\ntheir validation proofs from all shards;\nb)  Verifies each proposer block header\nd\nPC\nK\nh;i\naccording\nto its validation proof and header of the proposer\nchain\nd\nPC\nK\n(K¼1;2;\u0003\u0003\u0003;s);\nc)  Picks a valid proposer block from each shard to\nminesVC\nI\nh\n;\nd)  BroadcastsVC\nI\nh\namong the entire network.\n3)Block-Confirmation\na)  Miner receives vote blocks from all shards;\nb)  Verifies vote blockVC\nK\nh\nwith locally stored proposer\nblock headers and vote chainVC\nK\n(K¼1;2;\u0003\u0003\u0003;s);\nc)  Calculates how many votes are received by proposer\nblocks in each shard, and the one with the most num-\nber of votes will be confirmed;\nd)  Miners and TEEs in each ShardIexecute all related\ntransactions ordered by proposer blockPC\nI\nh\n.\nTransaction Recording.In this phase, miners package\ntransactions, mine proposer blocks, send these proposer\nblocks to TEEs for verification, and finally send information\nneeded for cross-shard verification to other shards. After\nreceiving transactions related to the same shard, a miner in\nShardIgenerates proposer blockPC\nI\nh;i\nand sends it to a\nTEE for verification. The TEE returns a validation proof if\nthe block is valid. The validation proof also contains the\nhash values of the latest headers of the confirmed proposer\nblock (e.g.,\nd\nPC\nI\nh\u00041\n) stored in the TEE to prove that states in\nthe TEE have been updated to the latest version. Both the\nproposer block header\nd\nPC\nI\nh;i\nand its proof are propagated\namong the entire network. Multiple proposer blocks may be\nauthenticated and broadcast simultaneously since more\nthan one TEEs are working in parallel. Fig. 4a shows that\ntwo proposer blocksPC\n1\nh;1\nandPC\n1\nh;2\nare authenticated in\nShard 1. Both of them are then to be possibly confirmed by\nvote blocks.\nFig. 3. TEE verification process.\nFig. 4. The cooperation-based consensus protocol.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING645\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "Vote Generation.In this phase, miners verify proofs of\nproposer blocks from all shards and generate vote blocks to\ncast votes on these proposer blocks. After the transaction-\nrecording phase, miners will receive headers of valid pro-\nposer blocks\nd\nPC\nK\nh;i\n(K¼1;2;\u0003\u0003\u0003;s) and their validation\nproofs from all shards. Each miner can independently verify\nd\nPC\nK\nh;i\nand its validation proof with the locally-stored head-\ners of proposer chains and the locally-stored TEE key. Spe-\ncifically, the miner will check whether the hash values of\nthe latest confirmed proposer blocks which are included in\nthe validation proof is consistent with its local records. Each\nminer picks one proposer block header from each shard. A\nset of chosen headers are formed and a new vote blockVC\nI\nh\nis mined accordingly. Such a vote block casts votes upon\ntotallysproposer block headers, each of which comes from\na different shard. Consider Fig. 4b as an example, in which\nthe vote block in Shard 1 (i.e.,VC\n1\nh\n) votes for\nd\nPC\n1\nh;2\nwhile\nbothVC\n2\nh\nin Shard 2 andVC\n3\nh\nin Shard 3 vote for\nd\nPC\n1\nh;1\ninstead. Vote blocks will then be broadcast globally.\nBlock Confirmation.In this phase, miners receive vote\nblocks from all shards, and confirm the proposer block,\nwhich has gained the most number of votes. After receiving\nvote blocksVC\nK\nh\n(K¼1;2;\u0003\u0003\u0003;s) from each shard, miners\nverify it through locally-stored headers of proposer blocks\nand the vote chainVC\nK\n. For example, miners check whether\nproposer blocks’ headers included in the vote blockVC\nK\nh\nare\nauthenticated and whether the predecessor ofVC\nK\nh\nis valid.\nUpon receiving headers of proposer blocks and vote blocks,\nevery node can calculate how many votes are gained by\neach proposer block header; the number of votes is at most\ns. For the set of all proposer block headers in ShardK\n(K¼1;2;\u0003\u0003\u0003;s) at heighth, the header with the most num-\nber of votes will be confirmed and appended to the pro-\nposer chainPC\nK\n. For instance, as shown in Fig. 4c,PC\n1\nh;1\ngets two votes whilePC\n1\nh;2\ngets only one, therebyPC\n1\nh;1\nbeing confirmed and appended toPC\n1\n. If multiple proposer\nblocks have the same number of votes, then the proposer\nblock with the smallest hash value will be determined as\nthe consensus result. Miners and TEEs can then update\nlocally-stored ledgers by executing transactions ordered by\nthe proposer block of the same shard.\nFork Resolution.Another issue is fork resolution. The con-\nfirmed proposer block at each height can always be unique\nif no fork occurs on vote chains. However, the occurrence of\nforks on vote chains can affect the consensus results. For\nexample, in Fig. 5, a fork exists on the vote chainVC\n2\nand\ninfluences the consensus result on the proposer chainPC\n1\n.\nPC\n1\nh;1\ngains two votes:VC\n1\nh\nandVC\n2\nh;1\n.PC\n1\nh;2\nalso gains two\nvotes:VC\n2\nh;2\nandVC\n3\nh\n. We have to solve the fork onVC\n2\nand\nthen decide which proposer block gains the most number of\nvotes. We first separate thefirst confirmationfrom thefinal\nconfirmation. The first confirmation is the status that vote\nblocks of all shards at the same height have been generated\nthough a fork may exist on vote chains. Thus, a proposer block\nhas the probability to be orphaned later even if it gains more\nvotes than others at present. But the system will not halt. After\nthe first-confirmation, miners will continue to generate new\nproposer blocks and vote blocks, even if forks may exist on\nvote chains. We adopt the longest-chain rule to address forks\nsimilar to Bitcoin and Prism [18]. For example, in Fig. 5,VC\n2\nh;1\nis on the longest chain. As a result,VC\n2\nh;2\nis discarded and\nPC\n1\nh;1\nhas the highest number of votes. We define that a pro-\nposer block isfinal-confirmedwhen each vote block at the same\nheight is followed by at leastzsequential blocks. The longest\nchain followed byzsequential blocks ensures that the vote\nblock will not be reversed with a high probability, thereby in\nturn limiting the reversal probability of proposer chains.\nTransaction confirmation is also advised not to be earlier than\nthe final confirmation of the related proposer block. The selec-\ntion ofzvalue will be given in Section 5.2.1.\n4.4.2  Confirming Cross-Shard Transactions\nIn Benzene, the cross-shard transaction processing aims at\nachievingeventual atomicitywith a two-phase confirmation.\nThe confirmation of a cross-shard transaction can be seen as\nthe execution of two phases: the first phase manipulates\nstates in the source shard and the second phase manipulates\nstates in the destination shard. Eventual atomicity indicates\nthat such two phases will be finished by incentivized miners\neventually and therefore atomicity is preserved [14].\nFig. 6 depicts the procedure of confirming cross-shard\ntransactions. During the first phase, cross-shard transac-\ntions are recorded in a proposer block (e.g.,PC\n1\nh\nin Fig. 6) in\nthe source shard and are confirmed for the first time (Steps\n\u0001\n1\n-\n\u0001\n2\n). After that, cross-shard transactions, along with their\nMerkle tree paths in the proposer block are sent to the desti-\nnation shard (Step\n\u0001\n3\n). The miner in Shard 2 affirms that\nthose cross-shard transactions have been collected in a con-\nfirmed proposer block and then collects them in a new pro-\nposer block (Step\n\u0001\n4\n). If such proposer block (e.g.,PC\n2\nhþn\nin\nFig. 6) is confirmed in the consensus protocol (Step\n\u0001\n5\n), then\ncross-shard transactions are also confirmed.\nFig. 5. Fork resolution.\nFig. 6. Processing cross-shard transactions.\n646IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "Such two phases are accomplished asynchronously. We\ncan optimistically expect that cross-shard transactions can\nfinally be confirmed in the destination shard and therefore\nall two phases are finished, since all miners are motivated\nby incentives to package all transactions, which are valid\nbut are not yet included on chain, similar to other PoW-\nbased systems like Bitcoin [14], [43]. Even when the\nproposer block containing a cross-shard transaction is\norphaned in the destination shard, such a cross-shard trans-\naction may be packaged later by other proposer blocks and\nhence may be confirmed again afterwards, which still satis-\nfies the Eventual Atomicity.\nIf a fork leads to the failure of the first phase (i.e., a corre-\nsponding proposer block recording the cross-shard transac-\ntion is orphaned), the second phase will also fail, which is\naccomplished by invalidating the previous block and creat-\ning a new fork. Miners can check whether a fork occurs in\nother shards and whether cross-shard transactions are still\nvalid, since they can record block headers of other shards to\ncheck the longest chain and can verify whether TEE proofs\nwhich authenticated cross-shard transactions are still based\non the valid states. Miners will rollback their ledger states,\nwhich can be accelerated by checkpoint blocks similar to\n[14]. Such a rollback rarely occurs as long as we require that\na cross-shard transaction has to be embedded in the source\nshard deep enough before confirming it in the destination\nshard.\nWe can optimize the confirmation process of cross-shard\ntransactions by processing them in batches. We design a\nnew type of block called atransaction block. A transaction\nblock packages transactions with the same source shard and\nthe same destination shard. For instance, a transaction block\nmay record cross-shard transactions from ShardAtowards\nShardB. Transaction blocks are not organized in a chain\nstructure. Instead, transaction blocks are organized in a\nMerkle Tree and included in a proposer block. Transaction\nblocks can be verified by TEEs to accomplish cross-shard\nverification. Each time a proposer block is confirmed in the\nsource shard, transaction blocks included in it will be\nsent to their destination shard, along with their paths in\nthe Merkle Tree and validation proofs so as to accom-\nplish the verification and confirmation process of cross-\nshard transactions.\n5SYSTEMANALYSIS\n5.1  Security Analysis\n5.1.1  Fault Tolerance Analysis\nWe assume that an adversary intends to reverse the consen-\nsus results. In the non-cooperative sharding system, the\nadversary will attempt to mine a longer fork on the chain of\na single shard. In Benzene, the adversary has to confirm\nanother proposer block by mining longer vote chains among\nhalf of the shards. We prove that Benzene achieves a fixed\nfault tolerance while the non-cooperative sharding suffers\nfrom the decreased fault tolerance with the increased num-\nber of shards.\nTheorem 1.The fault tolerance of the non-cooperative sharding\nsystem is\n1\nsþ1\nwithsbeing the number of shards, while Benzene\nachieves\n1\n3\nwith any number of shards.\nProof.The system fault tolerance of the non-cooperative\nsharding system depends on the relative mining power of\nthe adversary distributed on a single chain in a shard.\nAssume that the mining power controlled by the adver-\nsaryM\nA\noccupiesbfraction of the total mining powerM\nin the entire network, i.e.,M\nA\n¼bM. Denoting the mining\npower of honest miners byM\nH\n, we haveM\nH\n¼ð1\u0004bÞM.\nWe then calculate the average mining power imposed on\na chain by the adversary and honest miners with equa-\ntions given as follows,\nM\nH\n¼\nM\nH\ns\n¼\nð1\u0004bÞM\ns\n;(1a)\nM\nA\n¼\nM\nA\n1\n¼bM:(1b)\ntu\nLetpbe the probability that an honest miner mines the\nlatest block on the chain of a specific shard, andqbe the\nprobability that the adversary mines it. On a specific chain,\nq\np\nis equal to the proportion ofM\nA\ntoM\nH\n. We then have:\nq\np\n¼\nM\nA\nM\nH\n¼\nbs\n1\u0004b\n:\n(1c)\nWhen\nq\np\n>1, the attacker can always reverse the consensus\nresults from any historical block in a period that is long\nenough. When\nq\np\n\u00051, we getb\u0005\n1\nsþ1\n, which apparently\ndecreases with the increased number of shards.\nBy contrast, the system fault tolerance of Benzene\ndepends on the relative mining power of the adversary dis-\ntributed on vote chains. Denoting the mining power con-\ntrolled by the adversary byM\n0\nA\n, we haveM\n0\nA\n¼bM\n0\n.\nDenoting the mining power of honest miners byM\n0\nH\n,we\nhaveM\n0\nH\n¼ð1\u0004bÞM\n0\n. Assume that the honest mining\npower is equally distributed amongsvote chains, while\nmalicious mining power is equally distributed amongs=2\nvote chains. On each vote chain targeted by the adversary,\nthere isM\n0\nH\n=shonest mining power and\nM\n0\nA\ns=2\nmalicious min-\ning power. We can calculate the mining power proportion\nby following the same methods. Particularly, we have:\nM\n0\nH\n¼\nM\n0\nH\ns\n¼\nð1\u0004bÞM\n0\ns\n;(2a)\nM\n0\nA\n¼\nM\n0\nA\ns=2\n¼\n2bM\n0\ns\n;(2b)\nq\n0\np\n0\n¼\nM\n0\nA\nM\n0\nH\n¼\n2b\n1\u0004b\n:(2c)\nWhen\nq\n0\np\n0\n\u00051, we haveb\u0005\n1\n3\n, indicating that Benzene can\ntolerate at most\n1\n3\nadversarial mining power, which does not\ndepend on the number of shards.tu\n5.1.2  TEE Security\nWe now prove that the integrity of the distributed ledger of\nBenzene is ensured even with attacks aiming at TEEs.\nAttackers can be any nodes in the network attempting to\ncompromise any deployed TEE. We mainly consider that\nthe adversary attempts to compromise the TEE deployed on\nits own node since it is the most possible way to successfully\nlaunch an attack. The owner of the targeted TEE can launch\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING647\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "two types of attacks: (A1) The adversary tries to crash the\nTEE or hold the communication messages to make verifica-\ntion proofs be inaccessible; (A2) The adversary conducts the\nrollback attack or sends invalid blocks to the TEE with an\nexpectation that the TEE will generate a verification proof\nincompatible with the current consensus results.\nTo address (A1), miners can fetch verification results from\nother accessible TEEs as mentioned in Section 4.3.2. Mean-\nwhile, consensus participants in other shards can also down-\nload historical transactions to verify proposer block contents.\nTo tackle (A2), miners can pick out invalid proofs through\nverifying the included hash values of the latest states. After\nsynchronizing vote chains and headers of proposer chains\nfrom all shards, miners can keep tracking the consensus\nresults in all shards. Since the attacker cannot tamper with\nverification codes encapsulated in the enclave, the hash val-\nues of states that have been stored in the compromised TEE\nand been deviated from the consensus results will be discov-\nered in the proof, as mentioned in Section 4.3.2. As a result,\nproposer blocks with invalid proofs will not be voted by hon-\nest participants. Thus, the distributed ledger will not be\naffected.\n5.2  Performance Analysis\n5.2.1  Confirmation Latency\nIn Benzene, forks on vote chains can lead to the orphaned\nproposer blocks. Forks can be resolved by the longest chain\nrule as mentioned in Section 4.4. To make the probability of\na proposer block being orphaned in the future be as low as\n\u0002, we wait until all the vote blocks at the same height are fol-\nlowed by successivezblocks. The time period ofzblock\nintervals is referred to as theconfirmation latency. We now\nmeasure the selection ofzwith the given proportion of\nadversarial mining powerband the number of shardss.\nAssumingb¼0:25, we can calculate the reversal probabil-\nityPfor the vote block that isz-deep according to the fol-\nlowing equation as given by [43]:\nP¼1\u0004\nX\nz\nk¼0\n\u0003\nk\ne\n\u0004\u0003\nk!\n1\u0004\n\u0002\nq\np\n\u0003\nðz\u0004kÞ\n\u0004\u0005\n:(3)\nThe reversal probability of a proposer block when all related\nvote blocks insshards arez-deep is as follows:\n\u0002¼\nX\ns\ni¼\ns\n2\ns\ni\n\u0002\u0003\nP\ni\nð1\u0004PÞ\ns\u0004i\n:(4)\nTable 3 presents the results of the minimizedzwith\n\u000240:001. We observe from Table 3 thatzdrops assraises.\nThe value ofzin Bitcoin with the same parameters (i.e.,b¼\n0:25,\u0002¼0:001) is 15, which is larger thanzin Benzene\nwhens>40. Although sharding weakens the security of\neach shard and in turn affects the confirmation latency, the\ncross-shard cooperation provides a comparable and even\nlower confirmation latency compared with non-sharding\nsystems.\n5.2.2  Bandwidth Consumption\nThe TEE verification reduces the network-bandwidth con-\nsumption in the cooperation-based protocol. LetPC\nA\nbe a\nproposer block in ShardAand\nd\nPC\nA\nbe its header. Proposer\nblockPC\nA\nis propagated within ShardA, consequently con-\nsuming the inner-shard bandwidth. AfterPC\nA\nbeing verified\nby a TEE and attached with a validation proof, both its\nheader\nd\nPC\nA\nand the validation proof are propagated to the\nwhole network. This process thus consumes the inter-shard\nbandwidth. The vote block is also globally broadcast. Since\nd\nPC\nA\n, validation proof, and vote blocks are small in terms of\nsize, they consume less bandwidth compared with proposer\nblocks. Meanwhile, cross-shard transactions and their Mer-\nkle proofs are only sent to their destination shards rather\nthan being broadcast among the whole network, thereby\nreducing the consumption of inter-shard bandwidth. For\nexample, a proposer block with 4,000 transactions is about\n1MB. In comparison, broadcasting cooperation-related data,\nincluding TEE proofs and vote blocks, consumes about 87KB\nwith 50 shards. Therefore, lightweight cooperation-based\ndata will not significantly consume cross-shard bandwidth.\n5.2.3  Storage Consumption\nMost of the storage in each shard is consumed by shard-spe-\ncific contents, such as the state of accounts, vote chainVC\nI\n,\nand proposer chainPC\nI\n. Fewer contents are required to be\nduplicated among all shards compared with shard-specific\nones. Considering the storage in ShardI, nodes have to\nstore vote chainsVC\nK\nin remainingðs\u00041Þshards to vali-\ndate consensus results, and headers ofðs\u00041Þproposer\nchains\nd\nPC\nK\nto confirm cross-shard transactions. Blockchain\nstorage can be further reduced to2sblocks by adopting a\nsimilar design to [48], in which each chain is compacted to a\nsingle latest block. Key values of TEEs in all shards are also\nstored to verify validation proofs of proposer blocks.\nAccording to our analysis, proposer blocks containing all\nreferred transactions consume more than 13,000 KB, while\nvote blocks consume less than 10 KB when there are 20\nshards, much smaller than proposer blocks. Although the\nvote block size also grows with the increased number of\nshards, its storage overhead can be ignored compared with\nproposer blocks.\n6EVALUATION\nWe conduct both prototype experiments and large-scale\nsimulations to evaluate the performance of the proposed\nBenzene in a wide range of the network size.\n6.1  Experimental Setup\nWe first implement a prototype of our Benzene and conduct\nexperiments to evaluate its performance. In particular, we\nconstruct a blockchain prototype system based on four\nhigh-performance servers with up to 100 node instances.\nMeanwhile, we implement TEE verification codes in Intel\nSGX, which is deployed at a computer with 2.80 GHz CPU\nwith SGX-enabled BIOS support. Typically, a blockchain\nTABLE 3\nVote Block Confirmation Latency\nNumber of shards20   30   40   50   100   200   500\nMinimizedz17   15   14   13    1198\n648IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "system can be abstracted and divided into four layers:\napplication layer, data layer, consensus layer and network\nlayer [49]. In the application layer, we implement functions\nof maintaining accounts. Each account stores balance values\nof users, and are manipulated according to confirmed trans-\nactions transferring tokens between accounts. In the data\nlayer, we implement data structures of transactions and two\ntypes of blockchains. Each transaction includes an input\naddress, an output address, and the value of transferred\ntokens. The size of each transaction is 250 bytes. We choose\nECDSA to create digital signatures and SHA-256 in the\nhashlib package as the hash function linking blocks. Each\nproposer block contains 20,000 transactions on average.\nEach vote block packages proposer block headers and gen-\nerates a Merklre Tree with the merkletools package. In the\nconsensus layer, we implement the cooperation protocol\nbased on the PoW consensus. Participants perform mining\nprocess to mine the valid proposer blocks and vote blocks,\nand decide the consensus results according to the voting-\nbased algorithm. In the network layer, we implement block-\nchain network. We use multi-threading in Python to imple-\nment nodes working in parallel and we use MPI (Message\nPassing Interface) for Python to ensure the communication\nbetween miners. Nodes are randomly assigned to different\nshards according to their addresses. Each node mines blocks\nand requires TEE verification services to conduct cross-\nshard verification. Moreover, each node maintains a mem-\nory pool to store valid but yet unconfirmed blocks to accel-\nerate the verification process, similar to Bitcoin [43]. We\nfollow some typical configurations. The bandwidth of each\nnode is 30Mbps and the end-to-end latency is 100 ms. The\nblock interval for each block is about 15 seconds [14].\nWe implement two blockchain system prototypes for\ncomparing with our Benzene. In particular, we implement\na non-cooperative sharding scheme, namelyNon-Coop\nSharding, which is a PoW-based sharding system with the\nexclusion of the cross-shard cooperation. In Non-Coop\nSharding, miners only process transactions of the same\nshard and maintain a single chain in each shard. Mean-\nwhile, we also implement a non-sharding scheme, namely\nNon-Sharding, which confirms transactions with multiple\nvote chains mining in parallel, similar to the consensus\nprotocol in Prism [18]. In Non-Sharding, there are one pro-\nposer chain and multiple vote chains in the system. The\nnumber of vote chains is equal to the number of shards in\nBenzene for fair comparison. In prototype experiments,\neach shard of Benzene contains 5 nodes and 1 TEE. Regard-\ning Non-Coop Sharding, the 1/4 fault tolerance limitation\ncauses only 2 shards being allowed according to our analy-\nsis in Section 5.1.1.\nWe also conduct simulations to further evaluate the per-\nformance of Benzene and other baselines with up to 2,500\nnodes and 500 shards. We simulate three baseline schemes:\nMonoxide, Non-Coop Sharding and Non-Sharding (Prism).\nBenzene and Monoxide distribute 5 nodes in each shard\nwhile Non-Coop Sharding has two shards to achieve the\nsame 1/4 fault tolerance as Benzene. The simulated network\nhas the same settings (e.g., bandwidth, latency, and block\nsize) as the prototype experiments. We simulate the random\nblock creation and TEE verification processes to get a precise\nestimation of the execution time. The block interval is\nre-tuned to 20 seconds to cover the time of both block genera-\ntion and TEE verification. The end-to-end latency also fol-\nlows random distribution with its mean being 0.1 sec [14],\nand the latency for transactions being broadcast to all shards\nincreases logarithmically with the number of nodes [50].\n6.2  Scalability Evaluation\nWe want to evaluate the scalability of Benzene and answer\nthe following question:\n\u0001Can Benzene achieve better performance as the num-\nber of shards increases?\nTo answer this question, we measure the throughput and\nlatency in both prototype experiments and simulations,\nwith the increased number of shards.\nThroughput.We first evaluate the system throughput in\nprototype experiments. We measure TPS of Benzene with 4,\n8, 12, 16, and 20 shards; each shard contains 5 nodes and 1\nTEE. When measuring the practical throughput, we avoid\nrepeatedly counting on the duplicated transactions in pro-\nposer blocks and cross-shard transactions. Fig. 7 shows that\nTPS of Benzene can linearly scale with the increased num-\nber of shards. For example, Benzene achieves 11,810 TPS\nwith 20 shards. To evaluate the scalability of Benzene in a\nlarge scale network, we evaluate its throughput by simula-\ntions. The number of shards is increased from 4 to 500 with\neach shard containing 5 miners and 1 TEE. Results in Fig. 8\ndemonstrate that the throughput of Benzene can scale\nalmost linearly with the enlarged network, e.g., achieving\n40\u0006increment from 4 shards to 200 shards. This further\ndemonstrates that Benzene can achieve a highly-scalable\nthroughput despite the slightly-increased cross-shard com-\nmunication overhead. Moreover, we measure the perfor-\nmance of Benzene beyond 200 shards and observe that the\nincrement of throughput starts to stop at around 400 shards.\nFig. 7. Throughput in prototype experiments.\nFig. 8. Throughput evaluated by simulations.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING649\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "This is because we assume that the number of deployed\nTEEs is limited in simulations, therefore leading to a maxi-\nmal number of blocks that can be verified per second.\nFirst-Confirming Latency.In Benzene, each proposer block\nhas to be confirmed by vote blocks, each of which has to\nwait for sequential vote blocks before being finally con-\nfirmed. The first-confirming latency is the time interval\nfrom the time when a proposer block is successfully mined\nto the time when it receives enough vote blocks at the same\nheight. Fig. 9 shows the average first-confirming latency in\nprototype experiments and error bars show the maximal\nand  minimal  first-confirming  latency.  First-confirming\nlatency increases with the increased number of shards. This\nis reasonable since more shards lead to a larger network\nand in turn require more time in block propagation.\nConfirmation Latency.The confirmation latency is the time\ninterval from the time when a proposer block is mined to\nthe time when it is finally confirmed by sequentialzvote\nblocks. Giving a fixed low probability\u0002of the proposer\nchain being reversed, the value ofzdepends on the number\nof shardssas well as the fault tolerancebwhere the calcula-\ntion ofzvalue can be referred to Section 5.2.1. We measure\nthe confirmation latency withb¼1=4,\u0002¼0:001and the dif-\nferent number of shards. Fig. 10 shows average confirma-\ntion latency in prototype experiments and error bars show\nthe maximal and minimal confirmation latency. The confir-\nmation latency shows fluctuation since the value ofz\ndecreases while the network propagation latency increases.\nMoreover, to reveal how the latency varies in a broader\nrange of the network size, we measure the confirmation\nlatency from 4 to 200 shards through simulations. We also\ncompare the confirmation latency of Benzene with that of\nBitcoin in simulations. Fig. 11 shows that the confirmation\nlatency drops at first while maintaining a stable level when\nthe number of shards increases to hundreds. This is mainly\nowed to the decreasedzvalue. Moreover, when there are\nmore than 50 shards, Benzene can achieve a lower confirma-\ntion latency compared with the Bitcoin-like system. This\nis because Bitcoin requiresz¼15while Benzene with 50\nshards achievesz¼13and further drops to about 9 as the\nnumber of shards increases to 200 when\u0002¼0:001and\nb¼0:25.\nTakeaway.The throughput of Benzene will increase line-\narly from 4 shards to 200 shards. Besides, the confirmation\nlatency will remain at a stable level.\n6.3  Performance Comparison\nWe want to compare the performance of Benzene with other\nbaselines and answer the following question:\n\u0001Can Benzene achieve better performance than other\nbaselines while preserving the same fault tolerance?\nThroughput Comparison in Prototype Experiments.We com-\npare our Benzene with Non-Coop Sharding, and Non-\nSharding schemes in terms of TPS with the same fault-toler-\nance value 1/4 and the same number of nodes. We conduct\nexperiments on Benzene with 8, 10, 12, and 14 shards.\nFig. 12 plots the results of prototype experiments. Due to\nthe latency caused by the TEE verification, TPS of Benzene\nis slightly lower than that of Non-Coop Sharding at the\nbeginning. But, Benzene obtains a more rapid improvement\nwhen the number of nodes increases, e.g., achieving a\nhigher TPS with 50 nodes than both Non-Coop Sharding\nand Non-Sharding. This is because Benzene can scale to\nmore shards while preserving security, therefore achieving\nbetter performance. In comparison, Non-Coop Sharding\ncannot be fully scaled due to its decreasing fault tolerance.\nAlthough the performance of Non-Sharding may be slightly\nincreased with more nodes, such increase is not comparable\nwith the performance enhancement brought by sharding.\nFig. 9. First confirming latency in prototype experiments.\nFig. 10. Confirmation latency in prototype experiments.\nFig. 11. Confirmation latency in simulations.\nFig. 12. Throughput comparison in prototype experiments.\n650IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "Throughput Comparison in Simulations.Moreover, we also\nevaluate Benzene with a comparison with other baselines in\na larger scale network with a fixed fault tolerance through\nsimulations. All approaches are tested under 150, 200, 250,\nand 300 nodes while preserving 1/4 fault tolerance. As\nshown in Fig. 13, the TPS of Benzene scales up much faster\nthan those of other approaches, whose TPS just slightly\nincreases with the increased number of nodes. This is\nmainly because Benzene can scale up to more shards with-\nout compromising security while Non-Coop Sharding can-\nnot. Monoxide can scale to more shards, but it requires\nminers to download and verify blocks from other shards,\nmaking its performance similar to Non-Coop Sharding.\nAlthough Non-Sharding adopting the voting-based consen-\nsus can increase the throughput and reduce the latency,\nsuch performance improvement is not comparable with the\nimprovement brought by sharding schemes. Benzene com-\nbines the advantages of both voting-based consensus and\nsharding schemes at the same time, thereby achieving a bet-\nter performance.\nAverage Waiting Time for Transactions.We compare the\naverage latency of a transaction from the generation (i.e.,\nbeing submitted by users to the network) to the first confir-\nmation among four simulated approaches: Benzene, Monox-\nide, Non-Coop Sharding, and Non-Sharding. Such latency\ncan reflect the system efficiency of processing transactions.\nAll four approaches are tested with 50 nodes. We generate\ntransactions under the varied transaction frequency, i.e.,\nfrom 1,000 transactions per second to 10,000 transactions per\nsecond. Fig. 14 shows that the latency in all four approaches\nremains stable initially, and continuously increases when the\ntransaction-generation frequency exceeds a specific level.\nThis is because when the transaction-generation frequency is\nhigher than the system processing capacity, a group of the\ngenerated transactions have to wait in transaction pools,\nthereby prolonging the latency of being packed. Further,\nNon-Sharding first reaches its performance bottleneck, fol-\nlowed by Non-Coop Sharding and Monoxide. By contrast,\nBenzene is the last one reaching the bottleneck owing to its\nfully-utilized capacity even when more than 6,000 transac-\ntions are submitted to the network per second.\nStorage and Bandwidth.We compare the average storage and\nbandwidth consumption per transaction and per node of Ben-\nzene with those of other baselines. In simulations, we divide the\ntotal storage and bandwidth consumption among the whole net-\nwork by the total amount of transactions and the number of\nnodes. Such a metric can describe how many additional resour-\nces are required when a new transaction is submitted to the sys-\ntem. Moreover, we divide such average consumption to that of a\nnon-sharding scheme to illustrate how many times of reduction\na sharding system can achieve by distributing storage and band-\nwidth overheads among shards.All baselines are tested from 5\nnodes to about 100 nodes. Both Figs. 15 and 16 demonstrate that\nBenzene requires less than 1/4 of the average storage and band-\nwidth consumption compared with non-sharding schemes, and\nachieves lower resource consumption compared with other\nsharding schemes. Reasons behind these observations are as fol-\nlows. In non-sharding Prism, the storage and bandwidth con-\nsumption are equally imposed on all nodes. When the number\nof nodes increases, the average storage and bandwidth con-\nsumption remain stable. Non-Coop Sharding partitions such\nworkloads into shards. However,such reduction is limited since\nit cannot scale to more shards when the number of nodes\nincreases due to its weak fault tolerance. In Monoxide, miners in\none shard store, verify, and pack transactions in other shards to\nprotect the per-shard security. In other words, Monoxide\nincreases the storage and bandwidth overheads to preserve\nsecurity. By contrast, Benzene can partition storage and band-\nwidth workloads into shards as far as possible when the number\nof nodes increases, without adding considerable overheads to\npreserve security.\nFig. 13. Throughput comparison in simulations.\nFig. 14. Average latency of submitted transactions.\nFig. 15. Average storage consumption reduction.\nFig. 16. Average bandwidth consumption reduction.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING651\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "Takeaway.Users can scale Benzene to numerous shards while\npreserving a fixed fault tolerance. Moreover, Benzene can\neffectively distribute the storage and bandwidth overhead\namong shards. Therefore, Benzene can achieve better perfor-\nmance with less resource consumption compared with other\nbaselines.\n6.4  Parameter Evaluation\nWe want to answer the following question:\n\u0001How will the performance metric of Benzene vary\nwhen we change some parameter settings?\nBlock Interval.To measure the impact of the block interval\non TPS, we measure the TPS according to different intervals\nof the proposer block creation in prototype experiments. We\nsimulate the block creation process to fulfill the adjustment of\nblock creation interval. Our experiments are conducted under\n4, 8 and 16 shards. Fig. 17 plots the TPS versus the block inter-\nval. The experimental results show that the throughput\nslightly decreases when the block interval extends. This is\nbecause miners have to spend more time on generating a valid\nproposer block for a longer block interval, thereby limiting the\ncomputation capacity consumed on packing transactions.\nHowever, such impact can almost be ignored when the inter-\nval increases from 10 seconds to 25 seconds. Moreover, more\nshards lead to a higher TPS; this is consistent with our obser-\nvation mentioned above.\nBandwidth.We also measure the varied throughput under\ndifferent bandwidth configurations through simulations.\nFig. 18 shows that the throughput of Benzene with 100\nshards increases from about 20,000 TPS to 40,000 TPS when\nthe per-node bandwidth raises from 5 Mb/s to 30 Mb/s.\nTakeaway.The throughput of Benzene can be increased\nwhen the block interval decreases or the bandwidth increases.\nUsers can select parameters to balance the trade-off between\nthe performance and the security/costs.\n6.5  Security Evaluation\nWe evaluate the security of Benzene with regard to forks on\nblockchains [51]. We aim to evaluate the security of Benzene\nby answering the following question:\n\u0001Can Benzene preserve security by ensuring a low\nfork rate?\nFork Rate Without Attackers.First, we evaluate the fork\nrate on proposer chains with varied block intervals in simu-\nlations. The fork rate is calculated by dividing the number\nof forks to the number of block intervals [52]. Fig. 19 illus-\ntrates that the fork rate decreases when the block interval\nprolongs. Fewer than 20% of consensus epochs will have\nforks with 20 shards when the block interval is 20 seconds.\nMoreover, more shards lead to a higher fork rate since it\ntakes more time to broadcast blocks and thus increases the\nprobability of another valid proposer block being success-\nfully mined. But this ephemeral phenomenon is acceptable\nsince forks will soon be resolved by vote blocks.\nProbability of Successful Attack.Moreover, we evaluate the\nfork on proposer chains caused by adversarial attacks with\nvaried fraction of malicious mining power in simulations.\nMalicious nodes can focus their mining power on half of the\nvote chains to cause a fork on the proposer chain. We mea-\nsure the probability that such an attack occurs with different\nvalues of attacker fraction and the varied number of shards.\nEach vote block has to wait for sequential 6 blocks before\nbeing confirmed, i.e., the same as Bitcoin. An attack is suc-\ncessfully conducted only when more than half of the vote\nblocks are orphaned since the attacker mines a longer chain.\nFig. 20 shows that the attack probability is limited to a\nlow level (almost 0 when less than 22% mining power is\nFig. 17. Throughput under varied block interval.\nFig. 18. Throughput under different bandwidth.\nFig. 19. Fork rate with varied block interval.\nFig. 20. Attack rate with varied attacker fraction.\n652IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "malicious, and only 0.05 when the attacker fraction is 0.26)\nand increases when approaching 1/3 fault tolerance. More-\nover, the existence of more shards leads to a lower probabil-\nity of Benzene being attacked; this is consistent with our\nprevious analysis in Section 5.\nTakeaway.For honest participants, the fork rate can be\nreduced as the block interval increases. Besides, the proba-\nbility of an adversary successfully launching attacks by\nreversing consensus results is low when less than 26% min-\ning power is malicious.\n7CONCLUSION\nWe propose Benzene, a sharding protocol based on cross-\nshard cooperation to enhance system security and perfor-\nmance. Unlike previous sharding approaches, Benzene\nallows multiple shards to cooperate with each other in the\nconsensus protocol, consequently enhancing the system\nfault tolerance. Benzene has three key novel designs: i) a\ndouble-chain architectureto separate the transaction-record-\ning function from the consensus-execution function, ii) a\ncross-shard verification mechanismwith TEEs to minimize per-\nnode overhead, iii) avoting-based consensusto realize cross-\nshard cooperation upon the task of consensus-execution.\nWith double-chain architecture, each shard can record\ntransactions independently while participating in consensus\nexecution of other shards. Miners in each shard verify\nblocks from other shards with the minimized overhead, and\ncast votes to confirm those blocks in the voting-based con-\nsensus. Such a design enables a fully scaling of the system\nwhile achieving a fixed 1/3 fault tolerance. Moreover, vot-\ning-based  consensus  provides  a  shorter  confirmation\nlatency compared with previous single-chain PoW-based\nprotocols (e.g., Nakamoto protocol). Experiments show that\nthe throughput of Benzene can be linearly improved (i.e.,\n32,370 TPS with 50 shards) with the number of shards\nincreasing to 200. Moreover, Benzene can achieve a lower\nconfirmation  latency  than  non-sharding  Bitcoin  while\nachieving the same security guarantee, even when the\nsharding technique weakens the system fault tolerance.\nFinally, Benzene requires less storage and bandwidth con-\nsumption on defending per-shard security, and maintains a\nlow fork probability since voting-based consensus limits the\noccurrence of forks.\nREFERENCES\n[1]  M. J. Amiri, D. Agrawal, and A. E. Abbadi, “Caper: A cross-appli-\ncation permissioned blockchain,”Proc. VLDB Endow., vol. 12,\nno. 11, pp. 1385–1398, 2019.\n[2]  Z. Zheng, S. Xie, H. Dai, X. Chen, and H. Wang, “An overview of\nblockchain  technology:  Architecture,  consensus,  and  future\ntrends,” inProc. IEEE Int. Congr. Big Data, 2017, pp. 557–564.\n[3]  G. Danezis and S. Meiklejohn, “Centrally banked cryptocurrencies,”\ninProc.Symp.Netw.Distrib.Syst.Secur.Symp., 2016, pp. 1–14.\n[4]  H. A. Kalodner, S. Goldfeder, X. Chen, S. M. Weinberg, and E. W.\nFelten, “Arbitrum: Scalable, private smart contracts,” inProc. 27th\nUSENIX Secur. Symp., 2018, pp. 1353–1370.\n[5]  I. Eyal, A. E. Gencer, E. G. Sirer, and R. V. Renesse, “Bitcoin-NG: A\nscalable blockchain protocol,” inProc. 13th Usenix Conf. Netw. Syst.\nDes. Implementation, 2016, pp. 45–59.\n[6]  Y. Gilad, R. Hemo, S. Micali, G. Vlachos, and N. Zeldovich,\n“Algorand: Scaling byzantine agreements for cryptocurrencies,”\ninProc. 26th Symp. Operating Syst. Princ., 2017, pp. 51–68.\n[7]  T. Crain, C. Natoli, and V. Gramoli, “Red belly: A secure, fair and\nscalable open blockchain,” inProc. IEEE 42nd Symp. Secur. Privacy,\n2021, pp. 466–483.\n[8]  Y. Buchnik and R. Friedman, “Fireledger: A high throughput\nblockchain  consensus  protocol,”  inProc.  VLDB  Endowment,\nvol. 13, no. 9, pp. 1525–1539, 2020.\n[9]  H. Huang, W. Kong, S. Zhou, Z. Zheng, and S. Guo, “A survey of\nstate-of-the-art on blockchains: Theories, modelings, and tools,”\nACM Comput. Surv., vol. 54, no. 2, pp. 1–42, 2021.\n[10] G. Wang, Z. J. Shi, M. Nixon, and S. Han, “SoK: Sharding on\nblockchain,” inProc. 1st ACM Conf. Adv. Financial Technol., 2019,\npp. 41–61.\n[11] J. Hellings and M. Sadoghi, “Byshard: Sharding in a byzantine\nenvironment,”Proc. VLDB Endowment, vol. 14, pp. 2230–2243,\n2021.\n[12] E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, E. Syta, and B.\nFord, “OmniLedger: A secure, scale-out, decentralized ledger via\nsharding,” inProc. IEEE Symp. Secur. Privacy, 2018, pp. 583–598.\n[13] M. Zamani, M. Movahedi, and M. Raykova, “RapidChain: Scaling\nblockchain via full sharding,” inProc. ACM SIGSAC Conf. Comput.\nCommun. Secur., 2018, pp. 931–948.\n[14] J. Wang and H. Wang, “Monoxide: Scale out blockchains with\nasynchronous consensus zones,” inProc. 16th USENIX Symp.\nNetw. Syst. Des. Implementation, 2019, pp. 95–112.\n[15] V. Buterin, “Ethereum sharding faq,” 2019. Accessed: April 01,\n2021. [Online]. Available: https://github.com/ethereum/wiki/\nwiki/ShardingFAQ\n[16] F. McKeen et al., “Innovative instructions and software model for\nisolated execution,” inProc. 2nd Int. Workshop Hardware Architec-\ntural Support Secur. Privacy, 2013, Art. no. 10.\n[17] V. Costan, I. A. Lebedev, and S. Devadas, “Sanctum: Minimal\nhardware extensions for strong software isolation,” inProc. 25th\nUSENIX Secur. Symp., 2016, pp. 857–874.\n[18] V. Bagaria, S. Kannan, D. Tse, G. Fanti, and P. Viswanath, “Prism:\nDeconstructing the blockchain to approach physical limits,” inProc.\nACM SIGSAC Conf. Comput. Commun. Secur., 2019, pp. 585–602.\n[19] Z. Hong, S. Guo, P. Li, and C. Wuhui, “Pyramid: A layered shard-\ning blockchain system,” inProc. IEEE Int. Conf. Comput. Commun.,\n2021, pp. 1–10.\n[20] M. Al-Bassam, A. Sonnino, S. Bano, D. Hrycyszyn, and G. Dane-\nzis, “Chainspace: A sharded smart contracts platform,” inProc.\n25th Annu. Netw. Distrib. Syst. Secur. Symp., 2018, pp. 1–15.\n[21] Y. Tao, B. Li, J. Jiang, H. C. Ng, C. Wang, and B. Li, “On sharding\nopen blockchains with smart contracts,” inProc. IEEE 36th Int.\nConf. Data Eng., 2020, pp. 1357–1368.\n[22] S. Li, M. Yu, C.-S. Yang, A. S. Avestimehr, S. Kannan, and P. Vis-\nwanath, “Polyshard: Coded sharding achieves linearly scaling\nefficiency and security simultaneously,” inProc. IEEE Int. Symp.\nInf. Theory\n, 2020, pp. 203–208.\n[23] M. J. Amiri, D. Agrawal, and A. El Abbadi,SharPer: Sharding Per-\nmissioned Blockchains Over Network Clusters. New York, NY, USA:\nAssociation for Computing Machinery, 2021, pp. 76–88.\n[24] G. P\n^\nırlea, A. Kumar, and I. Sergey, “Practical smart contract\nsharding with ownership and commutativity analysis,” inProc.\n42nd ACM SIGPLAN Int. Conf. Program. Lang. Des. Implementation,\n2021, pp. 1327–1341.\n[25] P. Zheng, Q. Xu, Z. Zheng, Z. Zhou, Y. Yan, and H. Zhang,\n“Meepo: Sharded consortium blockchain,” inProc. IEEE 37th Int.\nConf. Data Eng., 2021, pp. 1847–1852.\n[26] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Sax-\nena, “A secure sharding protocol for open blockchains,” inProc.\nACM SIGSAC Conf. Comput. Commun. Secur., 2016, pp. 17–30.\n[27] M. Castro and B. Liskov, “Practical byzantine fault tolerance,” in\nProc. 3rd Symp. Operating Syst. Des. Implementation, 1999, pp. 173–186.\n[28] M. Vukoli\n\u0002\nc, “The quest for scalable blockchain fabric: Proof-of-\nwork versus. bft replication,” inProc. Int. Workshop Open Problems\nNetw. Secur., 2015, pp. 112–125.\n[29] H. Dang, T. T. A. Dinh, D. Loghin, E.-C. Chang, Q. Lin, and B. C.\nOoi, “Towards scaling blockchain systems via sharding,” inProc.\nInt. Conf. Manage. Data, 2019, pp. 123–140.\n[30] J. Behl, T. Distler, and R. Kapitza, “Hybrids on steroids: SGX-\nbased high performance BFT,” inProc. 12th Eur. Conf. Comput.\nSyst., 2017, pp. 222–237.\n[31] V. Costan and S. Devadas, “Intel SGX Explained,”IACR Cryptol.\nePrint Arch., vol. 2016, 2016, Art. no. 86.\n[32] T. Alves, “Trustzone : Integrated hardware and software security,”\nInform. Quarterly, vol. 3, pp. 18–24, 2004.\nCAI ETAL.: BENZENE: SCALING BLOCKCHAIN WITH COOPERATION-BASED SHARDING653\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 15
      }
    }
  },
  {
    "pageContent": "[33] S. Matetic, K. W\n€\nust, M. Schneider, K. Kostiainen, G. Karame, and\nS. Capkun, “BITE: Bitcoin lightweight client privacy using trusted\nexecution,” inProc. 28th USENIX Secur. Symp., 2019, pp. 783–800.\n[34] J. Lind, O. Naor, I. Eyal, F. Kelbert, E. G. Sirer, and P. Pietzuch,\n“Teechain: A secure payment network with asynchronous blockchain\naccess,” inProc. 27th ACM Symp. Operating Syst. Princ., 2019, pp. 63–79.\n[35] R. Cheng et al., “Ekiden: A platform for confidentiality-preserv-\ning, trustworthy, and performant smart contracts,” inProc. IEEE\nEur. Symp. Secur. Privacy, 2019, pp. 185–200.\n[36] P. Das et al., “Fastkitten: Practical smart contracts on bitcoin,” in\nProc. 28th USENIX Secur. Symp., 2019, pp. 801–818.\n[37] M. Brandenburger, C. Cachin, R. Kapitza, and A. Sorniotti,\n“Trusted computing meets blockchain: Rollback attacks and a\nsolution for hyperledger fabric,” inProc. IEEE 38th Symp. Reliable\nDistrib. Syst., 2019, pp. 324–333.\n[38] Y. Yan, “Confidentiality support over financial grade consortium\nblockchain,” inProc. ACM SIGMOD Int. Conf. Manage. Data, 2020,\npp. 2227–2240.\n[39] M. Brandenburger, C. Cachin, R. Kapitza, and A. Sorniotti,\n“Blockchain and trusted computing: Problems, pitfalls, and a\nsolution for hyperledger fabric,” 2018,arXiv:1805.08541.\n[40] S. Matetic et al., “Rote: Rollback protection for trusted execution,” in\nProc. 26th USENIX Secur. Symp. USENIX Secur., 2017, pp. 1289–1306.\n[41] H. Yu, I. Nikolic, R. Hou, and P. Saxena, “OHIE: Blockchain Scaling\nMade Simple,” inProc. IEEE Symp. Secur. Privacy, 2020, pp. 90–105.\n[42] G. Wang, S. Wang, V. K. Bagaria, D. Tse, and P. Viswanath,\n“Prism removes consensus bottleneck for smart contracts,” in\nProc. IEEE Crypto Valley Conf. Blockchain Technol., 2020, pp. 68–77.\n[43] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”\n2008. [Online]. Available: http://bitcoin.org/bitcoin.pdf\n[44] A. Dembo et al., “Everything is a race and nakamoto always\nwins,” inProc. ACM SIGSAC Conf. Comput. Commun. Secur., 2020,\npp. 859–878.\n[45] M. Brandenburger and C. Cachin, “Challenges for combining\nsmart contracts with trusted computing,” inProc. 3rd Workshop\nSyst. Softw. Trusted Execution, 2018, pp. 20–21.\n[46] G. Chen, Y. Zhang, and T.-H. Lai, “Opera: Open remote attes-\ntation for intel’s secure enclaves,” inProc. Proc. ACM SIGSAC\nConf. Comput. Commun. Secur., 2019, pp. 2317–2331.\n[47] I. Anati, S. Gueron, S. Johnson, and V. Scarlata, “Innovative technol-\nogy for cpu based attestation and sealing,” inProc. 2nd Int. Workshop\nHardware Architectural Support Secur. Privacy, 2013, Art. no. 7.\n[48] B. Bunz, L. Kiffer, L. Luu, and M. Zamani, “Flyclient: Super-light\nclients for cryptocurrencies,” inProc. IEEE Symp. Secur. Privacy,\n2020, pp. 928–946.\n[49] H. Chen, M. Pendleton, L. Njilla, and S. Xu, “A survey on ether-\neum systems security: Vulnerabilities, attacks, and defenses,”\nACM Comput. Surv., vol. 53, no. 3, pp. 1–43, 2020.\n[50] A. Montresor, “Gossip and epidemic protocols,”Wiley Encyclope-\ndia Elect. Electron. Eng., vol. 1, pp. 1–15, 2017.\n[51] G. Bissias and B. N. Levine, “Bobtail: Improved blockchain secu-\nrity with low-variance mining,” inProc. Symp. Netw. Distrib. Syst.\nSecur., 2020, pp. 1–16.\n[52] C. Decker and R. Wattenhofer, “Information propagation in the\nbitcoin network,” inProc. IEEE P2P Proc., 2013, pp. 1–10.\nZhongteng Caireceived the BS degree from the\nUniversity of Electronic Science and Technology\nof China, Chengdu, China, in 2020. He is cur-\nrently working toward the MS degree with Sun\nYat-sen University, Guangzhou, China. His cur-\nrent research interests include blockchain tech-\nnologies and consensus algorithms.\nJunyuan Liangreceived the MS degree from Sun\nYat-sen University, Guangzhou, China, in 2022.\nHe is currently working toward the PhD degree\nwith Sun Yat-sen University. He is working on\nedge computing and blockchain system, in partic-\nular on storage, payment channel network and\nsharding in blockchain.\nWuhui Chen(Member, IEEE) received the bach-\nelor’s degree from Northeast University, She-\nnyang, China, in 2008, and the master’s and PhD\ndegrees from the University of Aizu, Aizu–Waka-\nmatsu, Japan, in 2011 and 2014, respectively.\nFrom 2014 to 2016, he was a Research Fellow\nwith the Japan Society for the Promotion of Sci-\nence, Japan. From 2016 to 2017, he was a\nResearcher with the University of Aizu. He is cur-\nrently an associate professor with Sun Yat-Sen\nUniversity, Guangzhou, China. His research inter-\nests include edge/cloud computing, cloud robot-\nics, and blockchain.\nZicong HongreceivedtheBEngdegreeinsoftware\nengineering with the School of Data and Computer\nScience, Sun Yat-sen University. He is currently\nworking toward the PhD degree in the Department\nof Computing, Hong Kong Polytechnic University.\nHis current research interest includes Blockchain,\nGame Theory, Internet of Things, and Edge/Cloud\nComputing.\nHong-Ning Dai(Senior Member, IEEE) received\nthe PhD degree in computer science and engi-\nneering from the Department of Computer Sci-\nence and Engineering, Chinese University of\nHong Kong. He is currently with the Department\nof Computer Science, Hong Kong Baptist Univer-\nsity, Hong Kong, as an Associate Professor. His\ncurrent research interests include blockchain and\nthe Internet of Things. He has served as associ-\nate editors ofIEEE Transactions on Intelligent\nTransportation Systems,IEEE Transactions on\nIndustrial Informatics,IEEE Systems Journal, andIEEE Access.Heisa\nmember of the ACM.\nJianting Zhangreceived the bachelor’s and mas-\nter’s degrees from Sun Yat-Sen University, China,\nin 2019 and 2022, respectively. He is currently\nworking toward the PhD degree with Purdue Uni-\nversity. His research interest focus on blockchain,\nsmart contracts, and consensus algorithms.\nZibin Zheng(Fellow, IEEE) is currently a professor\nand the Deputy Dean with the School of Software\nEngineering, Sun Yat-sen University, Zhuhai, China.\nHe authored or coauthored more than 200 interna-\ntional journal and conference papers, including one\nESI hot paper and six ESI highly cited papers.\nAccording to Google Scholar, his papers have more\nthan 15 000 citations. His research interests include\nblockchain, software engineering, and services\ncomputing. He was the BlockSys’19 and Collabora-\nteCom16 General Co-Chair, SC2’19, ICIOT18 and\nIoV14 PC Co-Chair. He is a Fellow of the IET. He was the recipient of several\nawards, including the Top 50 Influential Papers in Blockchain of 2018, the\nACM SIGSOFT Distinguished Paper Award with ICSE2010, the Best Stu-\ndent Paper Award with ICWS2010.\n\"\nFor more information on this or any other computing topic,\nplease visit our Digital Library atwww.computer.org/csdl.\n654IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL. 34, NO. 2, FEBRUARY 2023\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 15,2024 at 07:10:20 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Scaling Blockchain With Cooperation-Based Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Benzene: Scaling Blockchain With Cooperation-Based Sharding",
          "Subject": "IEEE Transactions on Parallel and Distributed Systems;2023;34;2;10.1109/TPDS.2022.3227198",
          "Creator": "Arbortext Advanced Print Publisher 10.0.1062/W Unicode",
          "Producer": "iLovePDF",
          "CreationDate": "D:20221228112414+05'30'",
          "ModDate": "D:20240415071339Z"
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 16
      }
    }
  },
  {
    "pageContent": "Towards Scaling Blockchain Systems via Sharding\nHung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin\nEe-Chien Chang, Qian Lin, Beng Chin Ooi\nNational University of Singapore\n{hungdang,dinhtta,dumitrel,changec,linqian,ooibc}@comp.nus.edu.sg\nABSTRACT\nExisting   blockchain   systems   scale   poorly   because   of   their\ndistributed  consensus  protocols.  Current  attempts  at  improv-\ning  blockchain  scalability  are  limited  to  cryptocurrency.  Scal-\ning  blockchain  systems  under  general  workloads  (i.e.,  non-\ncryptocurrency applications) remains an open question.\nIn this work, we take a principled approach to apply sharding,\nwhich is a well-studied and proven technique to scale out databases,\nto blockchain systems in order to improve their transaction through-\nput at scale. This is challenging, however, due to the fundamental\ndifference in failure models between databases and blockchain. To\nachieve our goal, we first enhance the performance of Byzantine\nconsensus protocols, by doing so we improve individual shards’\nthroughput. Next, we design an efficient shard formation protocol\nthat leverages a trusted random beacon to securely assign nodes\ninto shards. We rely on trusted hardware, namely Intel SGX, to\nachieve high performance for both consensus and shard formation\nprotocol. Third, we design a general distributed transaction protocol\nthat ensures safety and liveness even when transaction coordina-\ntors are malicious. Finally, we conduct an extensive evaluation of\nour design both on a local cluster and on Google Cloud Platform.\nThe results show that our consensus and shard formation protocols\noutperform state-of-the-art solutions at scale. More importantly,\nour sharded blockchain reaches a high throughput that can handle\nVisa-level workloads, and is the largest ever reported in a realistic\nenvironment.\n1  INTRODUCTION\nBlockchain  systems  offer  data  transparency,  integrity  and  im-\nmutability in a decentralized and potentially hostile environment.\nThese strong security guarantees come at a dear cost to scalabil-\nity, for blockchain systems have to rely on distributed consensus\nprotocols which have been shown to scale poorly, both in terms of\nnumber of transactions per second (tps) and number of nodes [21].\nA number of works have attempted to scale consensus proto-\ncols, the ultimate goal being able to handle average workloads of\ncentralized systems such as Visa. One scaling approach is to ex-\nploit trusted hardware [2,4,10]. However, its effectiveness has\nnot been demonstrated on data-intensive blockchain workloads.\nThe second approach is to use sharding, a well-studied and proven\ntechnique to scale out databases, to divide the blockchain network\ninto smaller committees so as to reduce the overhead of consensus\nprotocols. Examples of sharded blockchains include Elastico [33],\nOmniLedger [27] and RapidChain [49]. These systems, however,\nare limited to cryptocurrency applications in an open (or permis-\nsionless) setting. Since they focus on a simple data model, namely\nthe unspent transaction output (UTXO) model, these approaches\ndo not generalize to applications beyond Bitcoin.\nA\nReplication\nTransaction Management\nReplicationReplication\nAABBBCCC\n(a) Distributed databases.\nBFT consensus\nTransaction Management\nAAAA\nAAAA\nAAAA\nBFT consensus\nBBBB\nBBBB\nBBBB\nBFT consensus\nCCCC\nCCCC\nCCCC\nShard \nformation\n........\n....\n(b) Sharded blockchains.\nFigure 1: Sharding protocols in traditional databases vs.\nblockchains.\nIn this paper, we take a principled approach to extendsharding\nto permissioned blockchain systems. Existing works on sharded\nblockchains target permissionless systems and focus on security.\nHere, our focus is on performance. In particular, our goal is to de-\nsign a blockchain system that can support a large network size\nequivalent to that of major cryptocurrencies like Bitcoin [41] and\nEthereum  [13].  At  the  same  time,  it  achieves  high  transaction\nthroughput that can handle the average workloads of centralized\nsystems such as Visa, which is around2,000−4,000transactions per\nsecond [11]. Finally, the system supports any blockchain application\nfrom domains such as finance [3], supply chain management [23]\nand healthcare [36], not being limited to cryptocurrencies.\nSharding protocols have been extensively studied in distributed\ndatabase systems. A sharding protocol must ensure both atomic-\nity and isolation of transaction execution. State-of-the-art proto-\ncols [22,40,48,50] aim to improve performance for distributed\ntransactions in geo-replicated settings. However, they cannot be\ndirectly extended to blockchain systems, due to a fundamental differ-\nence in the failure models that databases and blockchains consider.\nTraditional databases assume the crash-failure model, in which a\nfaulty node simply stops sending and responding to requests. On\nthe other hand, blockchain systems operate in a more hostile envi-\nronment, therefore they assume a stronger failure model, namely\nByzantine failure, to account for malicious attackers. Figure 1 high-\nlights the differences between distributed databases and sharded\nblockchains.\nThe distinction in failure models leads to three challenges when\napplying database sharding techniques to blockchains. First, high-\nperformance consensus protocols used in distributed databases [29,\n42], cannot be applied to blockchains. Instead, blockchains rely on\nByzantine Fault Tolerance (BFT) consensus protocols which have\n1\narXiv:1804.00399v4  [cs.DC]  12 Mar 2019",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "been shown to be a scalability bottleneck [21]. Thus, the first chal-\nlenge is to scale BFT consensus protocols. Second, in a distributed\ndatabase any node can belong to any shard, but a blockchain must\nassign nodes to shards in a secure manner to ensure that no shard\ncan be compromised by the attacker. The second challenge, there-\nfore, is to achieve secure and efficient shard formation. Third, the\ndistributed database relies on highly available transaction coordi-\nnators to ensure atomicity and isolation, but coordinators in the\nblockchain may be malicious. Consequently, the third challenge is\nto enable secure distributed transactions even when the coordinator\nis malicious.\nWe tackle the first challenge, that of improving BFT consen-\nsus protocols, by leveraging trusted execution environment (TEE)\n(e.g., Intel SGX [35]) to eliminate equivocation in the Byzantine\nfailure model. Without equivocation, existing BFT protocols can\nachieve higher fault tolerance with the same number of nodes (i.e.,\na committee ofnnodes can tolerate up to\nn−1\n2\nnon-equivocating\nByzantine failures, as opposed to\nn−1\n3\nfailures in the original threat\nmodel [10,17,30]). We introduce two major optimizations to the\nTEE-assisted BFT consensus protocol to lower its communications\noverhead, which further improves the system throughput at scale.\nWe leverage the TEE to design an efficient and secure shard\nformation protocol, addressing the second challenge. More specifi-\ncally, we implement a trusted randomness beacon inside the TEE\nto generate unbiased random values in a distributed setting, which\nachieves significant speed-up over existing cryptographic proto-\ncols [38,44]. Furthermore, we exploit the increased fault tolerance\nof our TEE-assisted BFT consensus protocol to reduce the shard\nsize. In particular, to tolerate an attacker who controls25%of the\nnetwork, our sharding protocol requires80-node committees as\nopposed to600-node committees used in related works [27, 33].\nWe tackle the final challenge, that of enabling distributed trans-\nactions for general blockchain applications, by using two classic\nprotocols, namely two-phase locking (2PL) and two-phase commit\n(2PC). They ensure isolation and atomicity for cross-shard trans-\nactions. Furthermore, they support any data model, as opposed to\nUTXO-optimized protocols that do not generalize [49] beyond Bit-\ncoin. To prevent malicious transaction coordinators from causing\ninfinite blocking as in Omniledger [27], we design a protocol that\nruns the 2PC’s coordination logic as a BFT replicated state machine.\nIn summary, this paper makes the following contributions:\n•To the best of our knowledge, we are the first to present\na sharded blockchain that supports workloads other than\ncryptocurrency and is able to scale to few thousands of trans-\nactions per second.\n•We present our design of a sharded blockchain consisting\nof three key novelties: (i) optimizations that improve the\nperformance of the consensus protocol running within each\nindividual shard, (ii) an efficient shard formation protocol,\nand (iii) a secure distributed transaction protocol that handles\ncross-shard, distributed transactions.\n•We conduct extensive, large-scale experiments to evaluate\nthe performance of our design. We run our experiments\non a local cluster with100nodes and on a realistic setup\nconsisting of over1400Google Cloud Platform (GPC) nodes\ndistributed across8regions. On GPC setup, we achieve a\nthroughput of over3,000transactions per second which, to\nthe best of our knowledge, is the largest ever reported in a\nrealistic environment.\nThe remaining of this paper is structured as follows. Section 2\nprovides background on database sharding techniques, blockchain\nconsensus protocols, and Intel SGX. Section 3 describes the key\nchallenges in extending database sharding to blockchain. Section 4\ndiscusses how we improve the underlying consensus protocol run-\nning in each individual shard. Section 5 discusses the committee\nformation protocol. Section 6 presents our distributed transaction\nprotocol. Section 7 reports the performance of our design. In Sec-\ntion 8 we discuss the related work, before concluding in Section 9.\n2  PRELIMINARIES\n2.1  Sharding in Databases\nTraditional database systems achieve scalability by dividing the\ndatabase states into independent shards (or partitions). By distribut-\ning the workload over multiple shards, the overall capacity of the\nsystem increases. Sharding requires coordination to ensure ACID\nproperties for transactions that access multiple shards. Two impor-\ntant coordination protocols are distributed commit such as two-\nphase commit (2PC) which ensures atomicity, and concurrency\ncontrol such as two-phase locking (2PL) which achieves isolation.\nIn this paper, we use the termshardingto refer to the combination\nof replication and partitioning as shown in Figure 1a. This architec-\nture is adopted by recent distributed database systems to achieve\nfault tolerance and scalability [22]. Each partition is replicated over\nmultiple replicas, and its content is kept consistent by consensus\nprotocols [29,42]. Transaction management and consensus proto-\ncols can be combined more judiciously, as opposed to layering one\non top of another, to achieve better performance [40, 48, 50].\nSharding in database systems assumes crash-failure model, in\nwhich a faulty node stops sending and responding to requests.\nThere are three important implications of this assumption. First,\nefficient consensus protocols catered for crash-failure model can\nbe used to achieve high performance. Second, creating a shard is\nsimple. For example, a node can be assigned to a shard based on its\nlocation. Third, the coordinators that drive coordination protocols\nare fully trusted.\n2.2  Blockchains Consensus Protocols\nBlockchain is essentially a distributed, append-only ledger that\nstores a sequence of transactions. The blocks are chained together\nby cryptographic hash pointers. The blockchain is maintained by\na set of mutually distrusting nodes (a.k.a. replicas or validators).\nThese nodes run a consensus protocol to ensure the blockchain’s\nconsistency under Byzantine (or arbitrary) failures. This is in con-\ntrast to distributed databases whose threat model does not account\nfor Byzantine failures or malicious users [20].\nBlockchain consensus protocols should achieve bothsafetyand\nlivenessdespite Byzantine failures. Safety means that honest (non-\nByzantine) nodes agree on the same value, whereas liveness means\nthat these nodes eventually agree on a value. Two major classes of\nblockchain consensus protocols are Byzantine Fault Tolerance and\nNakamoto consensus.\n2",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "Byzantine Fault Tolerant (BFT) protocols.Practical Byzan-\ntine Fault Tolerance (PBFT) [15], the most well-known BFT protocol,\nconsists of three phases: apre-preparephase in which the leader\nbroadcasts requests aspre-preparemessages, thepreparephase\nin which replicas agree on the ordering of the requests viaprepare\nmessages, and thecommit phasein which replicas commit to the\nrequests and their order viacommitmessages. Each node collects a\nquorum ofpreparemessages before moving to the commit phase,\nand executes the requests after receiving a quorum ofcommitmes-\nsages. A faulty leader is replaced via theview changeprotocol. The\nprotocol usesO(N\n2\n)messages forNreplicas. ForN≥3f+1, it\nrequires a quorum size of2f+1to tolerateffailures. It achieves\nsafety in asynchronous networks, and liveness in partially synchro-\nnous networks wherein messages are delivered within an unknown\nbut finite bound. More recent BFT protocols [32] extend PBFT to\noptimize for the normal case (without view change).\nNakamoto consensus protocols.Proof-of-Work (PoW) [41],\nas used in Bitcoin, is the most well-known instance of Nakamoto\nconsensus. The protocol randomly selects a leader to propose the\nnext block. Leader selection is a probabilistic process in which a\nnode must solve a computational puzzle to claim leadership. The\nprobability of solving the puzzle is proportional to the amount of\ncomputational power the node possesses over the total power of\nthe network. The protocol suffers from forks which arise when\nmultiple nodes proposes blocks roughly at the same time. It has\nlow throughput, but can scale to a large number of nodes.\nNakamoto consensus protocols quantify Byzantine tolerance\nin terms of the cumulative resources belonging to the Byzantine\nnodes (e.g., fraction of the total computational power). Their safety\ndepends not only on the Byzantine threshold, but also on network\nlatency. Under a fully synchronous network, safety is guaranteed\nagainst50%Byzantine attackers [41]. However, this threshold drops\nquickly in a partially synchronous network, going below33%when\nthe latency is equal to the block time [43].\n2.3  Trusted Execution Environment (TEE)\nOne approach to improve BFT protocols is to assume a hybrid fail-\nure model in which some components are trusted and only fail by\ncrashing, while others behave in a Byzantine manner. This model is\nrealized by running the trusted components inside a TEE. One im-\nportant security guarantees of TEE is that it ensures the integrity of\nthe protected components, so that the attackers cannot tamper with\ntheir execution and cause them to deviate from the prescribed pro-\ntocols. Our work uses Intel Software Guard Extensions (SGX) [35]\nto provision the TEE. But we note that our design can work with\nother TEE instantiations (e.g., TrustZone [8], Sanctum [18]).\nEnclave protection.Intel SGX provides TEE support in the\nform ofhardware enclave. An enclave is a CPU-protected address\nspace which is accessibleonlyby the code within the enclave (i.e.,\nthe trusted component). Multiple enclaves can be instantiated by\nnon-privileged user processes. The enclaves are isolated from each\nother, from the operating system (OS) and from other user processes.\nThe enclave code, however, can invoke OS services such as IO and\nmemory management.\nAttestation.A user can verify if a specific TEE is correctly\ninstantiated and running at a remote host via a remote attestation\nprotocol [9]. Once the enclave in question has been initiated, the\nCPU computes ameasurementof this enclave represented by the\nhash of its initial state. The CPU then signs the measurement with\nits private key. The user can verify the signed message, and then\ncompare the measurement against a known value.\nData sealing.The TEE can persist its state to non-volatile mem-\nory via the data sealing mechanism, which allows for recovery\nafter crash failures. An enclavesealsits data by first requesting the\nCPU for a unique key bound to its measurement, then encrypting\nthe data before storing it on persistent storage. This mechanism\nensures the data can only be decrypted by the enclave that sealed\nit. However, enclave recovery is subject to rollback attacks wherein\nan attacker (e.g., the malicious OS) provides properly sealed but\nstale data to the enclave [34].\nOther   cryptographic   primitives.SGXprovides\nsgx_read_randandsgx_get_trusted_timefunctions    to\nthe  enclave  processes.  The  former  generates  unbiased  random\nnumbers, the latter returns the elapsed time relative to a reference\npoint.\n3  OVERVIEW\nIn this section, we discuss our goals and illustrate them with a\nrunning example. We detail the challenges in realizing these goals\nand present our sharding approach. Finally, we describe the system\nmodel and security assumptions.\n3.1  Goals\nThe design of a highly scalable blockchain must meet the following\nthree goals: (i) support a large network size equivalent to that of\nmajor cryptocurrencies like Bitcoin and Ethereum, (ii) achieve high\ntransaction throughput that can handle the average workloads of\ncentralized systems such as Visa, and (iii) support general workloads\nand applications beyond cryptocurrencies. The resulting blockchain\nwill enable scale-out applications that offer the security benefits of\na decentralized blockchain with a performance similar to that of\na centralized system. To better motivate and illustrate our design,\nwe use the following example throughout the paper.\nRunning example.Consider a consortium of financial institutions\nthat offer cross-border financial services to their customers. They\nimplement a blockchain solution that provides a shared ledger for\nrecording transactions which can be payments, asset transfers or\nsettlements. Unlike Bitcoin or Ripple [3], there is no native currency\ninvolved. The ledger is distributed and its content is agreed upon by\nconsortium members via distributed consensus. Given the amount\nof money at stake, the blockchain solution must be tolerant to\nByzantine failures, so that group members are protected against\nattacks that compromise the ledger in order to double-spend or to\nrevoke transactions. As the consortium can admit new members,\nthe system should not assume any upper bound on the consortium\nsize. Finally, the blockchain must be able to support high request\nrates and deliver high transaction throughput.\n3.2  Challenges and Approach\nBuilding a blockchain system that achieves all three goals above at\nthe same time is challenging. To have high transaction throughput\n(second goal), it is necessary to build on top of a permissioned\n3",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "blockchain. But such a blockchain uses BFT protocols which do\nnot scale to a large number of nodes, thus contradicting the first\ngoal. As a result, one challenge is to reconcile the first two goals by\nmaking BFT protocols more scalable. We note that scalability here\nmeans fault scalability, which means that protocol’s performance\ndegrades gracefully as the number of tolerated failures increases.\nWe address this challenge by using trusted hardware to remove\nthe attacker’s ability to equivocate. Specifically, we use a hardware-\nassisted PBFT protocol that requires onlyN=2f+1replicas to\ntolerateffailures. We implement this protocol on top of Hyper-\nledger’s PBFT implementation and further improve its scalability\nby introducing two protocol-level optimizations that reduce the\nnumber of message broadcasts, and an implementation-specific\noptimization that avoids dropping important messages.\nWe cannot achieve the first two goals by improving BFT proto-\ncols alone, because there is a limit on scalability due to the quadratic\ncommunication cost ofO(N\n2\n). Our approach is to apply the data-\nbase sharding technique to partition the network and the blockchain\nstates into smaller shards, where each shard is small enough to run\na BFT protocol. In distributed databases, nodes can be assigned\nto shards randomly or based on their location. But in blockchain,\nthe process of assigning nodes to shards, calledshard formation,\nmust be done carefully to ensure security because each shard can\nonly tolerate a certain number of Byzantine failures. In particular,\ngiven a network ofNnodes, a fractionsof which are Byzantine,\nshard formation must guarantee with overwhelming probability\nthat no shard of sizen≪Ncontains more thanfByzantine nodes\nover the entire lifetime of the system\n1\n. The relationship betweenf\nandndepends on the consensus protocol. The challenge here is to\nperform shard formation securely and efficiently. Existing solutions\nuse expensive cryptographic protocols and the resulting shards\nare large. In contrast, we leverage TEE to implement an efficient\ntrusted randomness beacon that serves as the random source for\nthe shard formation. Furthermore, our fault-scalable PBFT protocol\nallows for shards of smaller size. This leads to higher throughput\nper shard, and more shards given the same network size.\nAs in distributed databases, sharding requires coordination pro-\ntocols for cross-shard (or distributed) transactions. Two important\nproperties of coordination protocols aresafetywhich means atomic-\nity and isolation, andlivenesswhich means the transaction will even-\ntually abort or commit. The challenge in realizing our third goal is to\ndesign a coordination protocol that supports non-UTXO distributed\ntransactions, while achieving safety and liveness even when the\ncoordinator is malicious. Existing sharded blockchains [27,33,49]\ndo not fully address this challenge, as we elaborate later in Section 6.\nOur approach is to use the classic 2PC and 2PL protocols to ensure\nsafety, and run 2PC in a Byzantine tolerant shard to avoid malicious\nblocking. This coordination protocol works for all blockchain data\nmodels and applications.\nThe key components of our design are summarized in Figure 1b.\nFirst, our shard formation protocol securely partitions the network\ninto multiple committees, thereby allowing the system throughput\nto scale with the number of nodes in the system. This protocol relies\non a trusted randomness beacon implemented inside a TEE for\nefficiency. Second, each shard runs our scalable BFT protocol which\n1\nIt must be the case that\nf\nn\n≤sin order for this requirement to be met.\nachieves high throughput at scale by combining TEE with other\noptimizations. Finally, layered on top of the shards is a distributed\ntransaction protocol that achieves safety and liveness for general\nblockchain applications.\n3.3  System and Threat Model\nSystem model.\nWe consider a blockchain system ofNnodes, with\na fractionsof the network under the attacker’s control, while the\nremaining fraction is honest. The shard formation protocol parti-\ntions the nodes intokcommittees, each consisting ofn≪Nnodes.\nEach committee can tolerate at mostf<nByzantine nodes. The\ncommittees maintain disjoint partitions of the blockchain states (i.e.,\nshards). Unless otherwise stated, the network is partially synchro-\nnous, in which messages sent repeatedly with a finite time-out will\neventually be received. This is a standard assumption in existing\nblockchain systems [27, 33].\nIn the running example above, suppose the consortium com-\nprises400institutions, among which100members actively collude\nso that they can revoke transactions that transfer their assets to the\nremaining institutions. In such a case,N=400ands=25%. Sup-\npose further that the consortium partitions their members into four\nequally-sized committees, thenn=100. Each committeeownsa par-\ntition of the ledger states. The committee members run a consensus\nprotocol to process transactions that access the committee’s states.\nIf PBFT is used, each committee can tolerate at mostf=\nn−1\n3\n=\n33\nByzantine nodes.\nEvery node in the system is provisioned with TEEs. We leverage\nIntel SGX in our implementations, but our design can work with\nany other TEE instantiations, for example hardware-based TEEs\nsuch as TrustZone [8], Sanctum [18], TPMs [5], or software-based\nTEEs such as Overshadow [16].\nThreat model.The attacker has full control of the Byzantine nodes.\nIt can read and write to the memory of any running process, even\nthe OS. It can modify data on disk, intercept and change the con-\ntent of any system call. It can modify, reorder and delay network\nmessages arbitrarily. It can start, stop and invoke the local TEE en-\nclaves with arbitrary input. However, its control of the enclaves is\nrestricted by the TEE threat model described below. The attacker is\nadaptive, like in Elastico [33] and OmniLedger [27], meaning that it\ncan decide which honest nodes to corrupt. However, the corruption\ndoes not happen instantly, like in Algorand [37], but takes some\ntime to come into effect. Furthermore, the attacker can only corrupt\nup to a fraction ofsnodes at a time. It is computationally bounded\nand cannot break standard cryptographic assumptions. Finally, it\ndoes not mount denial-of-service attacks against the system.\nThe threat model for TEE is stronger than what SGX currently\noffers. In particular, SGX assumes that the adversary cannot com-\npromise the integrityandconfidentiality of protected enclaves. For\nTEE, we also assume that integrity protection mechanism is se-\ncure. But there is no guarantee about confidentiality protection,\nexcept for a number of important cryptographic primitives: attes-\ntation, key generation, random number generation, and signature.\nIn other words, enclaves have no private memory except for ar-\neas related to its private keys, i.e., they run in a seal-glassed proof\nmodel where their execution is transparent [45]. This model admits\nrecent side-channel attacks on SGX that leak enclave data [12].\n4",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "171931435567\nN\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\ntps\nThroughput\n1248163264\n#Clients\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\ntps\nThroughput\nHL\nTendermint\nQuorum (Raft)\nQuorum (IBFT)\nFigure 2: Comparison of BFT protocols with varying number\nof nodes and clients.\nAlthough attacks that leak attestation and other private keys are\nexcluded [46], we note that there exist both software and hardware\ntechniques to harden important cryptographic operations against\nside channel attacks.\n4  SCALING CONSENSUS PROTOCOLS\n4.1  Scaling BFT Consensus Protocol\nPBFT, the most prominent instance of BFT consensus protocols,\nhas been shown not to scale beyond a small number of nodes\ndue to its communication overhead [21]. In the running example,\nthis means each committee in the consortium can only comprise\ndozens of institutions. Furthermore, the probability of the adversary\ncontrolling more than a third of the committee is high when the\ncommittee size is small. Our goal is to improve both the protocol’s\ncommunication overhead and its fault tolerance.\nWhy PBFT?\nThere   are   several   BFT   implementations   for\nblockchains. PBFT is adopted by Hyperledger. Tendermint [28]\n– a variant of PBFT – is used by Ethermint and Cosmo. Istanbul\nBFT (IBFT) is adopted by Quorum. Raft [42], which only tolerates\ncrash failures, is implemented by Coco to tolerate Byzantine fail-\nures by running the entire protocol inside Intel SGX [4]. Figure 2\ncompares the throughputs of these BFT implementations, where we\nuse Raft implementation in Quorum as an approximation for Coco\nwhose source code is not available. Due to space constraint, we only\nhighlight important results here, and include detailed discussion\nin Appendix C.2. PBFT consistently outperforms the alternatives\nat scale. The reason is that PBFT design permits pipelined execu-\ntion, whereas IBFT and Tendermint proceed in lockstep. Although\npipelined execution is possible in Raft, this property is not exploited\nin Quorum. From this observation, we base our sharded blockchain\ndesign on top of Hyperledger, and focus on improving PBFT.\nReducing the number of nodes.\nIf a consensus protocol can\nprevent Byzantine nodes from equivocating (i.e., issuing conflict-\ning statements to different nodes), it is possible to tolerate up to\nf=\nN−1\n2\nnon-equivocating Byzantine failures out ofNnodes [17].\nEquivocation can be eliminated by running the entire consensus\nprotocol inside a TEE, thereby reducing the failure model from\nByzantine to crash failure [4]. We do not follow this approach, how-\never, because it incurs a large trusted code base (TCB). A large TCB\nis undesirable for security because it is difficult, if not impossible\nto conduct security analysis for the code base, and it increases the\nnumber of potential vulnerabilities [6]. Instead, we adopt the pro-\ntocol proposed by Chunet al.[17] which uses a small trusted log\nabstraction called attested append-only memory to remove equivo-\ncation. The log is maintained inside the TEE so that the attacker\ncannot tamper with its operations. We implement this protocol on\ntop of Hyperledger Fabric v0.6 using SGX, and call it AHL (Attested\nHyperLedger).\nAHL maintains different logs for different consensus message\ntypes (e.g.,pre-prepare,prepare,commit). Before sending out\na new message, each node has to append the message’s digest\nto the corresponding log. The proof of this operation contains\nthe signature created by the TEE, and is included in the message.\nAHL requires all valid messages to be accompanied by such proof.\nEach node collects and verifiesf+1preparemessages before\nmoving to the commit phase, andf+1commitmessages before\nexecuting the request. AHL periodically seals the logs and writes\nthem to persistent storage. This mechanism, however, does not\noffer protection against rollback attacks [34]. We describe how to\nextend AHL to guard against these attacks in Appendix A.\nOptimizing communications.Our evaluation of AHL in Sec-\ntion 7 shows that it fails to achieve the desired scalability. We ob-\nserve a high number of consensus messages being dropped, which\nleads to low throughput when the network size increases. From\nthis observation, we introduce two optimizations to improve the\ncommunications of the system, and refer to the resulting imple-\nmentation as AHL+.\nFirst, we improve Hyperledger implementation which uses the\nsame network queue for both consensus and request messages. In\nparticular, we split the original message queue into two separated\nchannels, each for a different type of message. Messages received\nfrom the network contain metadata that determines their types and\nare forwarded to the corresponding channel. This separation pre-\nvents request messages from overwhelming the queue and causing\nconsensus messages to be dropped.\nSecond, we note that when a replica receives a user request,\nthe PBFT protocol specification states that the request is broadcast\nto all nodes [14]. However, this is not necessary as long as the\nrequest is received at the leader, for the leader will broadcast the\nrequest again during thepre-preparephase. Therefore, we remove\nthe request broadcast. The replica receiving the request from the\nclient simply forwards it to the leader. We stress that this is a design-\nlevel optimization.\nWe also consider another optimization adopted by Byzcoin [26],\nin which the leader collects and aggregates other nodes’ messages\ninto a single authenticated message. Each node forwards its mes-\nsages to the leader and verifies the aggregated message from the\nlatter. As a result, the communication overhead is reduced toO(N).\nThis design, called AHLR (AttestedHyperLedgerRelay), is imple-\nmented on top of AHL via an enclave that verifies and aggregates\nmessages. Given validf+1signed messages for a requestreq, in\nphasepof consensus roundo, the enclave issues a proof indicating\nthat there has been a quorum for⟨req,p,o⟩.\n5",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "Security analysis.The trusted log operations in AHL are secure\nbecause they are signed by private keys generated inside the en-\nclave. Because the adversary cannot forge signatures of the logs’\noperations, it is not possible for the Byzantine nodes to equivocate.\nAs shown in [17], given no more thanf=\nN−1\n2\nnon-equivocating\nByzantine failures, AHL guarantees safety regardless of the net-\nwork condition, and liveness under partially synchronous network.\nAHL+ only optimizes communication between nodes and does not\nchange the consensus messages, therefore it preserves AHL proper-\nties. AHLR only optimizes communication in the normal case when\nthere is no view change, and uses the same view change protocol\nas in AHL. Because message aggregation is done securely within\nthe enclave, AHLR has the same safety and liveness guarantees as\nAHL.\n4.2  ScalingPoETConsensus Protocol\nProof of Elapsed Time (PoET) is a variant of Nakamoto consensus,\nwherein nodes are provisioned with SGXs. Each node asks the\nenclave for a randomizedwaitTime. Only after suchwaitTime\nexpires does the enclave issue await certificateor create a new\nwaitTime. The node with the shortestwaitTimebecomes the leader\nand is able to propose the next block.\nSimilar to PoW,PoETsuffers from forks and stale blocks. Due\nto propagation delays, if multiple nodes obtain their certificates\nroughly at the same time, they will propose conflicting blocks,\ncreating forks in the blockchain. The fork is resolved based on\nthe aggregate resource contributed to the branches, with blocks\non the losing branches discarded as stale blocks. Stale block rate\nhas a negative impact on both the security and throughput of the\nsystem [25].\nPoET+: Improving PoET.We improvePoETby restricting the\nnumber of nodes competing to propose the next block, thereby\nreducing the stale block rate. We call this optimized protocolPoET+.\nUnlikePoET, when invoked to generate a wait certificate,PoET+\nfirst usessgx_read_randto generate a randoml-bit valueqthat is\nbound to the wait certificate. Only wait certificates withq=0are\nconsidered valid. The node with a valid certificate and the shortest\nwaitTimebecomes the leader.PoET+leader selection can thus be\nseen as a two-stage process. The first stage samples uniformly at\nrandom a subset ofn\n′\n=n·2\n−l\nnodes. The second stage selects\nuniformly at random a leader among thesen\n′\nnodes. It can be shown\nthat the expected number of stale blocks inPoET+is smaller than\nthat inPoET.\nPoET+vs AHL+.\nPoET+safety depends not only on the Byzantine\nthreshold, but also on network latency. In a partially synchronous\nnetwork, its fault tolerance may drop below33%[25]. This is in\ncontrast to AHL+ whose safety does not depend on network as-\nsumption. More importantly, our performance evaluation ofPoET+\n(included in Appendix C) shows that it has lower throughput than\nAHL+. Therefore, we adopt AHL+ for the design and implementa-\ntion of the sharded blockchain.\n5  SHARD FORMATION\nForming shards in a blockchain system is more complex than in\na distributed database. First, the nodes must be assigned to com-\nmittees in an unbiased and random manner. Second, the size of\neach committee must be selected carefully to strike a good trade-\noff between performance and security. And finally, committee as-\nsignment must be performed periodically to prevent an adaptive\nattacker from compromising a majority of nodes in a committee.\nThis section presents our approach of exploiting TEEs to address\nthese challenges.\n5.1  Distributed Randomness Generation\nA secure shard formation requires an unbiased random number\nrndto seed the node-to-committee assignment. Givenrnd, the\nnodes derive their committee assignment by computing a random\npermutationπof[1 :N]seeded byrnd.πis then divided into\napproximately equally-sized chunks, each of which represents the\nmembers in one committee.\nWe exploit TEEs to efficiently obtainrndin a distributed and\nByzantine environment, by equipping each node with aRandom-\nnessBeaconenclave that returns fresh, unbiased random numbers.\nSimilar to prior works [27,33,49], we assume a synchronous net-\nwork with the bounded delay∆during the distributed randomness\ngeneration procedure.\nOur sharded blockchain system works in epochs. Each new epoch\ncorresponds to a new node-to-committee assignment. At the begin-\nning of each epoch, each node invokes theRandomnessBeacon\nenclave with an epoch numbere. The enclave generates two ran-\ndom valuesqandrndusing two independent invocations of the\nsgx_read_randfunction. It then returns a signed certificate con-\ntaining⟨e,rnd⟩if and only ifq=0. The certificate is broadcast\nto the network. After a time∆, nodes lock in the lowestrndthey\nreceive for epoche, and uses it to compute the committee assign-\nment.\nThe enclave is configured such that it can only be invoked once\nper epoch, which is to prevent the attacker from selectively dis-\ncarding the enclave’s output in order to bias the final randomness.\nIf the nodes fail to receive any message after∆, which happens\nwhen no node can obtain⟨e,rnd⟩from its enclave, they increment\neand repeat the process. The probability of repeating the process\nisP\nrepeat\n=(1−2\n−l\n)\nN\nwherelis the bit length ofq. It can be tuned\nto achieve a desirable trade-off betweenP\nrepeat\nand the communi-\ncation overhead, which isO(2\n−l\nN\n2\n)\n. For example, whenl=log(z)\nfor some constantz,P\nrepeat\n≈0and the communication isO(N\n2\n).\nWhenl=log(N),P\nrepeat\n≈e\n−1\nand the communication isO(N).\nSecurity analysis.\nBecauseqandrndare generated independently\ninside a TEE, their randomness is not influenced by the attacker.\nFurthermore, the enclave only generates them once per epoch,\ntherefore the attacker cannot selectively discard the outputs to bias\nthe final result and influence the committee assignment.\n5.2  Committee Size\nSince committee assignment is determined by a random permuta-\ntionπof[1 :N]seeded byrnd, it can be seen as random sampling\nwithout replacement. Therefore, we can compute the probability\n6",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "of a faulty committee (i.e., a committee containing more thanf\nByzantine nodes) using the hypergeometric distribution. In par-\nticular, letXbe a random variable that represents the number of\nByzantine nodes assigned to a committee of sizen, given the overall\nnetwork size ofNnodes among which up toF=sNnodes are\nByzantine. The probability of faulty committee, i.e., the probability\nthat security is broken, is:\nPr[X≥f]=\nn\nÕ\nx=f\n\u0000\nF\nx\n\u0001 \u0000\nN−F\nn−x\n\u0001\n\u0000\nN\nn\n\u0001\n(1)\nKeeping the probability of faulty committee negligible.We\ncan bound the probability of faulty committee to be negligible\nby carefully configuring the committee size, based on Equation 1.\nIff≤\nn−1\n3\n(as in the case of PBFT), in the presence of a25%\nadversarial power, each committee must contain600+nodes to keep\nthe faulty committee probability negligible (i.e.,Pr[X≥\nn−1\n3\n] ≤\n2\n−20\n). When AHL+ is used, each committee can tolerate up to\nf=\nn−1\n2\n, thus the committees can be significantly smaller:n=80\nforPr[X≥\nn−1\n2\n] ≤2\n−20\n.\nSmaller committee size leads to better performance for two rea-\nsons. First, individual committees achieve higher throughput due to\nlower communication overhead. Second, there are more committees\nin the network, which can increase throughput under light con-\ntention workloads. We report the committee sizes with respect to\ndifferent adversarial power and their impact on the overall through-\nput in Section 7.\n5.3  Shard Reconfiguration\nAn adaptive attacker may compromise a non-faulty committee by\ncorrupting otherwise honest nodes. Our threat model, however,\nassumes that such node corruption takes time. As a result, we argue\nthat periodic committee re-assignment, or shard reconfiguration,\nthat reshuffles nodes among committees, suffices to guard the sys-\ntem against an adaptive attacker.\nShard reconfiguration occurs at every epoch. At the end of epoch\ne−1, nodes obtain the random seedrndfollowing the protocol\ndescribed in Section 5.1. They compute the new committee assign-\nment for epochebased onrnd. We refer to nodes whose committee\nassignment changes astransitioning nodes. We refer to the period\nduring which transitioning nodes move to new committees as the\nepoch transitionperiod.\nDuring epoch transition, transitioning nodes first stop process-\ning requests of their old committees, then start fetching the states\nof their new committees from current members of the correspond-\ning committees. Only after the state fetching completes do they\nofficially join the new committee and start processing transactions\nthereof. During this period, the transitioning nodes do not partici-\npate in the consensus protocol of either their old or new committees.\nConsequently, a naive reconfiguration approach in which all nodes\ntransition at the same time is undesirable, as it renders the system\nnon-operational during the transition period.\nOur approach is to have nodes transitioning in batches. In particu-\nlar, for each committee, only up toBnodes move to new committees\nat a time. The order by which nodes move is determined based on\nrnd, which is random and unbiased. In the following, we reason\nabout the impact ofBon the safety and liveness of the sharded\nblockchain.\nSafety analysis.Letkbe the number of shards, where each shard\nrepresents a partition of the global blockchain states. A shard re-\nconfiguration essentially changes the set of nodes that processes\nrequests for each of thekshards. Consider a shardsh, and denote\nthe committee handlingshin epoche−1byC\ne−1\nand in epoche\nbyC\ne\n. SinceBnodes are switching out ofC\ne−1\nat a time, and there\nare\nn\nk\nnodes ofC\ne−1\nexpected to remain inC\ne\n, there are\nn(k−1)\nk·B\nintermediatecommittees handlingshduring the epoch transition\nperiod.\nSwapping outBnodes does not violate safety ofsh, because\nthe number of Byzantine nodes in the current committee does not\nincrease. On the other hand, when newBnodes are swapped in,\nthe number of Byzantine nodes in the intermediate committee may\nexceed the safety threshold. As the transitioning nodes are chosen at\nrandom based onrnd, the probability of the intermediate committee\nbeing faulty follows Equation 1. In expectation, there are\nn(k−1)\nk·B\nsuch intermediate committees during the transitioning fromC\ne−1\ntoC\ne\n. We use Boole’s inequality to estimate the probability that\nthe safety of shardshis violated during the epoch transitioning:\nPr(faulty) ≤\nn(k−1)\nk·B\nÕ\ni=1\nn\nÕ\nx=f\n\u0000\nF\nx\n\u0001 \u0000\nN−F\nn−x\n\u0001\n\u0000\nN\nn\n\u0001\n(2)\nFor example, withn=80,f=\nn−1\n2\n,k=10shards, andB=log(n)=\n6,Pr(faulty)≈10\n−5\n. Based on Equation 2, we can configureBto\nbalance between liveness and safety of the system during epoch\ntransition.\nLiveness analysis.\nDuring the transitioning, each committee has\nBnodes not processing requests. IfB>f, the shard cannot make\nprogress because the remaining nodes cannot form a quorum. Thus,\nthe largerBis, the higher the risk of loss of liveness during epoch\ntransition.\n6  DISTRIBUTED TRANSACTIONS\nIn this section, we explain the challenges in supporting distributed,\ngeneral transactions for blockchains. We discuss the limitations\nof state-of-the-art systems: RapidChain [49] and OmniLedger [27]\n(Elastico [33] is not considered because it does not support dis-\ntributed transactions). We then present a solution that enables\nfault-tolerant, distributed, general transactions, and discuss how it\ncan be improved.\n6.1  Challenges\nIn a sharded blockchain, a distributed (or cross-shard) transaction\nis executed at multiple shards. Appendix B shows that in practical\nblockchain applications, a vast majority of transactions are dis-\ntributed. Similar to databases, supporting distributed transactions\nis challenging due to the safety and liveness requirements. The\nformer means atomicity and isolation that handle failures and con-\ncurrency, the latter means that transactions do not block forever.\nWe note that in the sharded blockchain, concurrency does not arise\nwithin a single shard, because the blockchain executes transaction\n7",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "C\nS\n1\nS\n2\nS\n3\ntx\nC\nS\n1\nS\n2\nS\n3\ntx\na\ntx\nb\nC\nS\n1\nS\n2\nS\n3\nI\n′\n1\nI\n′\n2\nI\n′\n1\n, if\nI\n′\n2\n=⊥\n(a) RapidChain\nC\nS\n1\nS\n2\nS\n3\ntx\ntx\nC\nS\n1\nS\n2\nS\n3\nOK\n1\nOK\n2\nC\nS\n1\nS\n2\nS\n3\ncommit\ntx\n(b) OmniLedger\nFigure 3: Existing works’ coordination protocols. C denotes\na client.S\n1\n,S\n2\nare input shards,S\n3\nis output shard.\nacc\n1\n,bal\n1\nacc\n2\n,bal\n2\nacc\n3\n,bal\n3\nacc\n4\n,bal\n4\nShard\n1\nShard\n2\ntx\n1\n:⟨acc\n1\n+acc\n3\n⟩→⟨acc\n2\n⟩tx\n2\n:⟨acc\n3\n⟩ → ⟨acc\n4\n⟩\nop\n1a\n:Debt[acc\n1\n]\nop\n1b\n:Debt[acc\n3\n]\nop\n1c\n:Cred[acc\n2\n]\nop\n2a\n:Debt[acc\n3\n]\nop\n2b\n:Cred[acc\n4\n]\nFigure 4: Account-based cross-shard transactions.\nsequentially. Instead, as we explain later, concurrency arises due to\ncross-shard transactions.\nUTXO transactions.Bitcoin  and  many  other  cryptocurren-\ncies adopt the Unspent Transaction Output (UTXO) data model. A\nUTXO transaction consists of a list of inputs, and a list of outputs.\nAll the inputs must be the outputs of previous transactions that\nare unspent (i.e., they have not been used in another transaction).\nThe outputs of the transaction are new, unspent coins. Given a\ntransaction, the blockchain nodes check that its inputs are unspent,\nand the sum of the outputs is not greater than that of the inputs.\nIf two transactions consume the same unspent coins, only one is\naccepted.\nThe simplicity of UTXO model is exploited in previous works\nto achieve atomicity without using a distributed commit protocol.\nConsider a simple UTXO transactiontx=⟨(I\n1\n,I\n2\n),O⟩that spends\ncoinsI\n1\n,I\n2\nin shardS\n1\nandS\n2\n, respectively, to create a new coin\nObelonging to shardS\n3\n(Figure 3a). RapidChain [49] executestx\nby splitting it into three sub-transactions:tx\na\n=⟨I\n1\n,I\n′\n1\n⟩\n,tx\nb\n=\n⟨I\n2\n,I\n′\n2\n⟩\n,tx\nc\n=⟨(I\n′\n1\n,I\n′\n2\n),O⟩\n, whereI\n′\n1\nandI\n′\n2\nbelong toS\n3\n.tx\na\nand\ntx\nb\nessentially transferI\n1\nandI\n2\nto the output shard, which are\nspent bytx\nc\nto create the final outputO. All three sub-transactions\nare single-shard. In case of failures, when, for example,tx\nb\nfails\nwhiletx\na\nsucceeds, RapidChain sidesteps atomicity by informing\nthe owner ofI\n1\nto useI\n′\n1\nfor future transactions, which has the same\neffect as rolling back the failedtx.\nRapidChain does not achieve isolation. Consider another trans-\nactiontx\n′\nb\ninS\n2\nthat spendsI\n2\nand is submitted roughly at the same\ntime astx, the shard serializes the transactions, thus only one oftx\nb\nandtx\n′\nb\nsucceeds. If isolation is achieved, eithertxortx\n′\nb\nsucceeds.\nBut it is possible in RapidChain that both of them fail, becausetx\na\nfails.\nR\nS\n1\nS\n2\nS\n3\nPrepareTx\nS\n1\nS\n2\nS\n3\nR\nPrepareOKs\nS\n1\nS\n2\nS\n3\nR\nCommitTx\n(1a) Prepare\n(1b) Pre-Commit(2) Commit\nFigure 5: Our coordination protocol.\nSafety for general transaction model.We now show exam-\nples demonstrating how RapidChain’s approach fails to work for\nnon-UTXO distributed transactions, because it violates both atom-\nicity and isolation. Consider the account-based data model, which\nis used in Ethereum. Lettx\n1\n:⟨acc\n1\n+acc\n3\n⟩ → ⟨acc\n2\n⟩be a transac-\ntion transferring assets fromacc\n1\nandacc\n3\ntoacc\n2\n, whereacc\n1\n,acc\n2\nbelongs to shardS\n1\nandacc\n3\nbelongs to shardS\n2\n. Following Rapid-\nChain,tx\n1\nis split intoop\n1a\n,op\n1b\n,op\n1c\n(Figure 4). Ifop\n1a\nsucceeds\nandop\n1b\nfails, due to insufficient funds, for example,op\n1c\ncannot be\nexecuted. In other words,tx\n1\ndoes not achieve atomicity because\nit is executed only partially:acc\n1\nis already debited and cannot be\nrolled back.\nLettx\n2\n:⟨acc\n3\n⟩ → ⟨acc\n4\n⟩be  another  transaction  submitted\nroughly at the same time astx\n1\n. In Figure 4, the execution sequence\n⟨op\n1a\n,op\n1b\n,op\n2a\n,op\n2b\n,op\n1c\n⟩is valid in RapidChain, but it breaks\nisolation (serializability) becausetx\n2\nsees the states of a partially\ncompleted transaction.\nLiveness under malicious coordinator.OmniLedger  [27]\nachieves safety for the UTXO model by relying on a client to co-\nordinate alock/unlockprotocol (Figure 3b). Given a transaction\ntxwhose inputs belong to shardS\n1\nandS\n2\n, and output belongs to\nshardS\n3\n, the client first obtains locks fromS\n1\nandS\n2\n(i.e., mark-\ning the inputs as spent), before instructingS\n3\nto committx. This\nclient-driven protocol suffers from indefinite blocking if the client\nis malicious. For example, consider a payment channel [31,39], in\nwhich the payee is the client that coordinates a transaction that\ntransfers funds from a payer’s account. A malicious payee may pre-\ntend to crash indefinitely during the lock/unlock protocol, hence,\nthe payer’s funds are locked forever.\n6.2  Our Solution\nWe aim to design a distributed transaction protocol that achieves\nsafety for general blockchain transactions (non-UTXO), and live-\nness against malicious coordinators. For safety, we use the classic\ntwo-phase commit (2PC) and two-phase locking (2PL) protocol as\nin traditional databases. To guard against a malicious coordinator,\nwe employ a Byzantine fault-tolerant reference committee, denoted\nbyR, to serve as a coordinator.Rruns BFT consensus protocol\nand implements a simple state machine for 2PC. Given our system\nand threat model in Section 3.3,Ris highly (eventually) available.\nFigure 5 illustrates the transaction flow and Figure 6 depicts the\nstate machine of the reference committee.\nThe client initiates a transactiontxby sendingBeginTxrequest\nto the reference committee. The transaction then proceeds in three\nsteps.\n8",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "StartedPreparing\nCommittedAborted\nBeginTxPrepareOK\nPrepareOK\nand\nc = 0\nAbort\nPrepareNotOK\nPrepareOK\nand\nc > 0\nc >0\nand\nAbort\nFigure 6: State machine of the reference committee.\nPhase 2\nPhase 1\nCoordinator\nReference \nCommittee\nCoordinatorParticipantsParticipants\nCommitteesCommittees\nReference \nCommittee\nPrepare \nVote-abort/\nVote-commit\nGlobal-commit/\nGlobal-abort\nCommitted/\nAborted\nPrepareTxPrepareOK/\nPrepareNotOK\nCommitTx/\nAbortTx\nCommitted/\nAborted\n... \nReference \nCommittee\nCoordinator\n... \nFigure 7: Correspondence between our distributed transac-\ntion management protocol (i.e., bottom half) and the origi-\nnal 2PC protocol (i.e., top half).\n1a) Prepare: OnceRhas executed theBeginTxrequest, it enters\nStarted state. Nodes inRthen sendPrepareTxrequests to the trans-\naction committees (or tx-committees). The latter wait for a quorum\nof matchingPrepareTxto ensure thatBeginTxhas been executed\ninR. Each tx-committee executes thePrepareTx. If consensus is\nreached thattxcan be committed, which requires thattxcan obtain\nall of its locks, the nodes within the committee send outPrepareOK\nmessages (orPrepareNotOKmessages otherwise).\n1b) Pre-Commit:   When entering Started state,Rinitializes a\ncountercwith the number of tx-committees involved intx. Af-\nter receiving the first quorum of matching responses from a tx-\ncommittee, it either decreasescand enters the Preparing state, or\nenters the Aborted state, depending on whether the responses are\nPrepareOKorPrepareNotOKrespectively.Rstays in the Prepar-\ning states and decreasescfor every new quorum ofPrepareOK\nresponses. It moves to Aborted as soon as it receives a quorum of\nPrepareNotOK, and to Committed states whenc=0.\n2) Commit: OnceRhas entered Committed (or Aborted) state,\nthe nodes inRsend outCommitTx(orAbortTx) messages to tx-\ncommittees. The latter wait for a quorum of matching messages\nfromRbefore executing the corresponding commit or abort opera-\ntion.\nWe remark that the reference committee is not a bottle-neck\nin cross-shard transaction processing, for we can scale it out by\nrunning multiple instances ofRin parallel.\nSafety analysis.The safety of our coordination protocol is based\non the assumption that bothRand tx-committees ensure safety for\nall transactions/requests they process. This assumption is realized\nby fine-tuning the committee size according to Equation 1 presented\nin Section 5.2.\nWe sketch the proof that our coordination protocol indeed im-\nplements the classic 2PC protocol in which reference committeeR\nis thecoordinator, and tx-committees are the participants. The state\nmachine of the reference committee shown in Figure 6 is identical\nto that of the coordinator in the original 2PC [24].\nFigure 7 illustrates the correspondence between our protocol\nand the original 2PC protocol. Similar to 2PC, our protocol consists\nof two main phases. Phase 1 aims to reach the tentative agreement\nof transaction commit and Phase 2 performs the actual commit\nof the transaction among shards. BeforeBeginTxis executed atR,\nthe transaction is considered non-existent, hence no tx-committees\nwould accept it. AfterRenters Started state (i.e., it has logged the\ntransaction), thePrepareTxrequests are sent to tx-committees.\nPhase 1 completes whenRmoves either to Committed or Aborted\nstate. At this point, the current state ofRreflects the tentative\nagreement of transaction commit. When this tentative agreement\nis conveyed to the tx-committees in Phase 2, they can commit (or\nabort) the transaction. The original 2PC requires logging at the\ncoordinator and participants for recovery. Our protocol, however,\ndoes not need such logging, because the states ofRand of tx-\ncommittees are already stored on the blockchain. In summary, our\nprotocol always achieves safety for distributed transactions.\nLiveness analysis.Recall that we assume a partially synchronous\nnetwork, in which messages sent repeatedly with a finite time-\nout will eventually be received. Furthermore, we assume that the\nsize ofRis chosen such that the number of Byzantine nodes are\nless than half. Under these assumptions, the BFT protocol running\ninRachieves liveness. In other words,Ralways makes progress,\nand any request sent to it will eventually be processed. Such even-\ntual availability means thatRwill not block indefinitely. Thus, the\ncoordination protocol achieves liveness.\n6.3  Implementation\nWe implement our protocol on Hyperledger Fabric which supports\nsmart contracts called chaincodes. The blockchain states are mod-\neled as key-value tuples and accessible to the chaincode during\nexecution.  We use the chaincode that implements the SmallBank\nbenchmark to explain our implementation. In Hyperledger, this\nchaincode contains asendPaymentfunction that reads the state\nrepresentingacc\n1\n’s balance, checks that it is greater thanbal, then\ndeducts thebalfromacc\n1\nand updates the state representingacc\n2\n’s\nbalance. This chaincode does not support sharding, because the\nstates ofacc\n1\nandacc\n2\nmay belong to different shards. We modify\nthe chaincode so that it can work with our protocol. In particu-\nlar, for thesendPaymentfunction, we split it into three functions:\npreparePayment,commitPayment, andabortPayment. We imple-\nment locking for an accountaccby storing a boolean value to a\nblockchain state with the key“L_”acc. During the execution of\npreparePayment, the chaincode checks if the corresponding lock,\nnamely the tuple⟨L_acc,true⟩, exists in the blockchain state, and\naborts the transaction if it does. If it does not, the chaincode writes\nthe lock to the blockchain. ThecommitPaymentfunction for a trans-\nactiontxwrites new states (balances) to the blockchain, and re-\nmoves the locks that were written fortx.\n9",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "Table 1: Comparisons with other sharded blockchains.\n# machines\nOver-\nsubscription\nTransaction\nmodel\nDistributed\ntransaction\nElastico8002UTXO×\nOmniLedger6067UTXO×\nRapidChain32125UTXO✓\nOurs14001\nGeneral\nworkload\n✓\nAs an optimization to avoid cross-shard communication in nor-\nmal case (when clients are honest), we let the clients collect and\nrelay messages betweenRand tx-committees. We directly exploit\nthe blockchain’s ledger to record the progress of the commit proto-\ncol. In particular, during Prepare phase, the client sends a transac-\ntion to the blockchain that invokes thepreparePaymentfunction.\nThis function returns an error if the Prepare phase fails. The client\nreads the status of this transaction from the blocks to determines if\nthe result is PrepareOK or PrepareNotOK. We implement the state\nmachine of the reference committee as a chaincode with similar\nfunctions that can be invoked during the two phases of our protocol.\nWhen interacting withR, all transactions are successful, therefore\nthe client only needs to wait for them to appear on the blocks ofR.\n6.4  Discussion\nOur current design uses 2PL for concurrency control, which may not\nbe able to extract sufficient concurrency from the workload. State-of-\nthe-art concurrency control protocols have demonstrated superior\nperformance over 2PL [40,48]. We note that the batching nature\nof blockchain presents opportunities for optimizing concurrency\ncontrol protocols. We leave the study of these protocols to future\nwork.\nIn the current implementation, we manually refactor existing\nchaincodes to support sharding. One immediate extension that\nmakes it easier to port legacy blockchain applications to our system\nis to instrument Hyperledger codebase with a library containing\ncommon functionalities for sharded applications. One common\nfunction is state locking. Having such a library helps speed up\nthe refactoring, but the developer still needs to split the original\nchaincode function to smaller functions that process the Prepare,\nCommit or Abort requests. Therefore, a more useful extension is\nto add programming language features that, given a single-shard\nchaincode implementation, automatically analyze the functions\nand transform them to support multi-shards execution. Another\nextension to improve usability is to introduce a client library that\nhides the details of the coordination protocols, so that the users\nonly see single-shard transactions.\n7  PERFORMANCE EVALUATION\nIn this section, we present a comprehensive evaluation of our design.\nWe first demonstrate the performance of the scalable consensus\nprotocols. Next, we report the efficiency of our shard formation pro-\ntocol. Finally, we evaluate the scalability of our sharding approach.\nTable 1 contrasts our design and evaluation methodology against\nexisting sharded blockchain systems.\nFor this evaluation, we use KVStore and Smallbank, two different\nbenchmarks available in BLOCKBENCH [21] — a framework for\nbenchmarking private blockchains. We use the original client driver\nTable 2: Runtime costs of enclave operations (excluding en-\nclave switching cost which is roughly2.7μs).\nOperationsTime(μs)\nECDSA Signing458.4(±0.4)\nECDSA Verfication844.2(±0.8)\nSHA2562.5(±0.1)\nAHL Append465.3(±0.8)\nAHLR Message Aggregation (f=8)8031.2(±2.3)\nRandomnessBeacon482.2(±0.5)\nin BLOCKBENCH, which is open-loop, for our single-shard experi-\nments. For multi-shard experiments, we modified the driver to be\nclosed-loop (i.e., it waits until a cross-shard transaction finishes\nbefore issuing a new one). To generate cross-shard transactions, we\nmodified the original KVStore driver to issue 3 updates per transac-\ntion, and used the originalsendPaymenttransaction in Smallbank\nthat reads and writes two different states.\nWe conducted experiments in two different settings. One is an in-\nhouse (local) cluster consisting of100servers, each equipped with\nIntel Xeon E5-1650 3.5GHz CPUs, 32GB RAM and 2TB hard drive. In\nthis setting, the blockchain node and client run on separate servers.\nThe other setting is Google Cloud Platform (GCP), in which we have\nseparate instances for the clients and for the nodes. A client has 16\nvCPUs and 32GB RAM, while a node has 2 vCPUs and 12GB RAM.\nWe use up to1400instances over 8 regions (the latency between\nregions is included in Appendix C).\nWe used Intel SGX SDK [1] to implement the trusted code base.\nSince SGX is not available on the local cluster and GCP, we config-\nured the SDK to run in simulation mode.  We measured the latency\nof each SGX operation on Skylake 6970HQ 2.80 GHz CPU with\nSGX Enabled BIOS support, and injected it to the simulation. Table\n2 details runtime costs of enclave operations on the SGX-enabled\nprocessor. Public key operations are expensive: signing and signa-\nture verification take about450μsand844μs, respectively. Context\nswitching and other symmetric key operations take less than5μs.\nWe also measured the cost of remote attestation protocol, which is\ncarried out between nodes of the same committee in order to verify\nthat they are running the correct enclave. On our SGX-enabled\nprocessor, this protocol takes around2ms, but we note that it is\nexecuted only once per epoch, and its results can be cached.\nThe results reported in the following are averaged over ten inde-\npendent runs. Due to space constraints, we focus on throughput\nperformance in this section, and discuss other results in the Appen-\ndix.\n7.1  Fault-scalable consensus\nAHL+ vs. other variants.\nWe compare the performance of AHL+\nwith the original PBFT protocol (denoted by HL), AHL and AHLR.\nFigure 8 and Figure 9 show the throughput with increasing number\nof nodes,N, on the local cluster and on GCP, when using KVStore\nbenchmark with10clients. The performance with varying number\nof clients and fixedNis included in the Appendix.\nAHL’s throughput is similar to that of HL, but for the sameN\nit tolerates more failures. Both HL and AHL show no throughput\nforN>67on the local cluster, and no throughput at all on GCP.\nWe observe that these systems are livelocked whenNincreases,\n10",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "7193143556779\nN\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\ntps\nThroughput w/o failures\n1510152025\nf\n0\n50\n100\n150\n200\n250\n300\ntps\nThroughput w failures\nHLAHLAHL+AHLR\nFigure 8: AHL+ performance on local cluster.\n7193143556779\nN\n0\n50\n100\n150\n200\n250\n300\n350\n400\n450\ntps\n4 regions\n7193143556779\nN\n0\n50\n100\n150\n200\n250\n300\n350\n400\n450\ntps\n8 regions\nHLAHLAHL+AHLR\nFigure 9: AHL+ performance on GCP (4 and 8 regions).\n719\nN\n500\n750\n1000\n1250\n1500\ntps\nThroughput w/o failures\n520\nf\n0\n100\n200\n300\ntps\nThroughput w failures\nHL\nAHL\nAHL + op 1\nAHL + op 1,2 (AHL+)\nAHL + op 1,2,3 (AHLR)\nFigure 10: Effect of optimizations on throughput.\nas they are stuck in the view-change phase. The number of view\nchanges is reported in the Appendix. In contrast, both AHL+ and\nAHLR maintain throughputs above700transactions per second\nin the cluster and above200on GCP. Interestingly, AHL+ demon-\nstrates consistently higher throughput than AHLR, even though the\nformer hasO(N\n2\n)communication overhead compared toO(N)of\nthe latter. Careful analysis of AHLR shows that the leader becomes\nthe single point of failure. If the leader fails to collect and multicast\nthe aggregate message before the time out, the system triggers the\nview change protocol which is expensive.\nTo understand the impact of Byzantine behavior on the overall\nperformance, we simulate an attack in which the Byzantine nodes\nsend conflicting messages (with different sequence numbers) to\ndifferent nodes. Figure 8 (right) shows how the throughput deteri-\norates when the number of failures increases. We note that for a\ngivenf, HL runs withN=3f+1nodes, whereas AHL, AHL+ and\n0102030\n% Byzantine nodes\n10\n0\n10\n1\n10\n2\n10\n3\n# nodes\nCommittee size (n)\n3264128256512\nN\n10\n1\n10\n2\ns\nCommittee formation\nOmniLedger-LOurs-LOmniLedger-GCPOurs-GCP\nFigure 11: Evaluation of shard formation.\n91733\nCommittee size (n)\n0\n500\n1000\n1500\n2000\n2500\ntps\nAvg. throughput\n0100200300400500\ntime (s)\n0\n500\n1000\n1500\n2000\n2500\ntps\nThroughput over time (n=9)\nNo Reshard\nNo Reshard\nSwap all\nSwap all\nSwap Log[n]\nSwap Log[n]\nFigure 12: Performance during shard reconfiguration.\nAHLR run withN=2f+1nodes. Despite the lower throughputs\nthan without failures, we observe a similar trend in which AHL+\noutperforms the other protocols. On GCP with more than 1 zone,\nthe Byzantine behavior causes all protocols to livelock.\nFinally, we examine how each optimization presented in Sec-\ntion 4.1 contributes to the final performance. Figure 10 shows,\nagainst the baseline of original PBFT implementation (HL), the\neffect of adding trusted hardware (AHL), optimization 1 (separating\nmessage queues), optimization 2 (removing request), and optimiza-\ntion 3 (message aggregation at the leader). The experiments, which\nare run on our local cluster with10clients, show that optimization\n2 adds the most benefits when there is no failure, whereas optimiza-\ntion 1 is the best under Byzantine failures. This explains why AHL+,\nwhich incorporates both optimizations, has the best performance.\n7.2  Shard Formation\nFigure  11  compares  our  shard  formation  protocol  with  Om-\nniLedger’s in terms of committee size and running time. With in-\ncreasing Byzantine failures, OmniLedger needs exponentially larger\ncommittees. On the other hand, by leveraging AHL+, our protocol\nkeeps the committees up to two orders of magnitude smaller.\nWe compare the cost of our distributed random number gener-\nation protocol with that of Randhound used in OmniLedger. We\nvary the network size from32to512nodes. On the local cluster,\nwe oversubscribe each physical server by a factor of8, running\neach node in a single-threaded virtual machine. On GCP, each\nnode runs on an instance with 2 vCPUs. Recall that both proto-\ncols assume a synchronous network with the bounded delay∆.\n11",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "812182436\nN\n0\n500\n1000\n1500\n2000\ntps\nThroughput\nAHL+;w R\nHL;w R\nAHL+;w/o R\nHL;w/o R\n0.000.490.991.491.99\nZipf coefficient\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\nAbort rate\nN=8\nN=18\nN=36\nN=8\nN=18\nN=36\nFigure 13: Sharding performance on local cluster with and\nwithout reference committee.\n162324486648810972\nN\n0\n500\n1000\n1500\n2000\n2500\n3000\n3500\ntps\nThroughput\n162324486648810972\nN\n0\n5\n10\n15\n20\n25\n30\n35\n40\n# Shards\n12.5%25%\nFigure 14: Sharding performance on GCP.\nWe empirically derive∆by measuring the maximum propagation\ndelay in different network sizes for a 1KB message, then conserva-\ntively setting∆to be3×the measured value. On the local cluster,\n∆ranges from2to4.5s. On GCP,∆ranges from5.9to15s. We\nsetq=log(N) −log(log(N)), so that the communication over-\nhead isO(Nlog(N))andP\nr epeat\n<2\n−11\n. For Randhound, we set\nc=16as suggested in [27]. Figure 11 shows that our protocol is\nup to 32×and 21×faster than RandHound on the local cluster and\nGCP, respectively. We attribute this gap to the difference in their\ncommunication complexity:O(Nlog(N))versusO(N c\n2\n).\nShard Reconfiguration.\nNext, we analyze the performance of\nour system during epoch transition (or resharding). We consider\nthe naive approach whichswaps allnodes by first stopping them,\nassigning them to new shards based on a randomly generated per-\nmutation, and then starting them again. We compare it with our\napproach which swapsBnodes at a time. In our evaluation, we set\nB=log(n).\nFigure 12 shows the throughput against the baseline where there\nis no resharding. We run the experiments on our local clusters with\ntwo shards, each containing up to33nodes. We perform the re-\nsharding twice, as depicted in Figure 12 (right). The naive approach\nshows a sharp drop in throughput when all nodes are restarted,\nfollowed by a period of up to80s in which nodes discover their new\npeers, verify and synchronize their states. The subsequent spikes\nin throughput are due to nodes processing transactions from their\nbacklog. In contrast, our approach allows the system to maintain\nthe same throughput as the baseline.\n7.3  Sharding performance\nWe first evaluate the performance of the coordination protocol by\nrunning many shards on the local cluster withf=1. To satu-\nrateSshards, we use4Sclients, each maintaining128outstanding\nrequests to the shard. Figure 13 (left) reports the throughput for\nSmallbank with network size of up to36nodes. The results for KV-\nStore are similar and are included in the Appendix. When HL-based\nsharding is used (as in OmniLedger), there are up to 9 shards in\ntotal. Our sharding protocol uses AHL+, therefore allowing for up\nto 12 shards. It can be seen that the overall throughput of the sys-\ntem scales linearly with the number of shards. Furthermore, when\nthe reference committee is involved, it becomes the bottleneck as\nthe number of shards grows. We vary the skewness factor (Zipf\ncoefficient) of the workload, and show the effect of contention on\nthe overall throughput in Figure 13 (right). As expected, the abort\nrate increases with the Zipf value.\nFinally, we evaluate the throughput scalability of our sharded\nblockchain system in a large-scale, realistic network environment.\nFor this experiment, we run Smallbank without the reference com-\nmittee, using up to972nodes and432clients spanning8regions on\nGCP. We consider two adversarial powers:12.5%and25%which are\nstudied in other sharded blockchains [27,33]. The former requires\na committee size of 27 nodes, and the latter of 79 nodes to keep\nthe probability of faulty committee below2\n−20\n. Figure 14 shows\nthe overall throughput and the corresponding number of shards\nfor the two adversarial powers. It can be seen that the throughput\nscales linearly with the number of shards. In particular, for12.5%\nadversary we achieve over3,000transactions per second using\n36shards, which is expected to grow higher with more shards\n2\n.\nFor25%adversary, we observe a throughput of954transactions\nper second which is higher than that of OmniLedger with regular\nvalidations [27].\n8  RELATED WORKS\nWe have discussed three related sharded blockchains, namely Elas-\ntico, OmniLedger and RapidChain, extensively in the previous sec-\ntions. Another related system is Chainspace [7] which proposes a\nsharding protocol for blockchain applications that are more general\nthan cryptocurrencies. It allows smart contracts to assign nodes to\nshards, as opposed to using a distributed shard formation protocol.\nWe do not consider Chainspace in this work, due to its complex\ntransaction model, complex coordination protocol, and low through-\nput of only300transactions per second even with10shards.\nScaling blockchain with database techniques.Various works\nhave  exploited  database  techniques  to  improve  aspects  of  the\nblockchain software stack other than the consensus layer. Fork-\nbase [47] is the first storage designed for blockchains, supporting\nanalytical queries at a much lower cost than the current key-value\nbackends. Dickersonet al.[19] add concurrency to Ethereum ex-\necution engine by using software transaction memory primitives.\nWe expect more works in improving the blockchain storage and\nexecution engine. While orthogonal to ours, they can be combined\nto enable scalable blockchains with richer functionalities.\n2\nWe were unable to obtain enough resources to run with more shards at the time of\nwriting.\n12",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "Off-chain scaling.Instead of directly improving blockchain com-\nponents, another approach to scalability is to move as many trans-\nactions off the blockchain as possible. Suchoff-chainsolutions allow\nusers to execute transactions and reach consensus directly among\neach other, requiring minimal interaction with the blockchain. The\nblockchain is used only for disputes and settlements. Examples of\noff-chain solutions include payment channels [31] and state chan-\nnels [39].\n9  CONCLUSIONS\nIn  this  paper,  we  applied  database  sharding  techniques  to\nblockchains. We identified challenges that arise from the funda-\nmental difference in failure models between traditional distributed\ndatabases and blockchain systems. We addressed them by lever-\naging TEEs to design fault-scalable consensus protocols and an\nefficient shard formation protocol. Furthermore, we proposed a\ncoordination protocol for cross-shard transactions that supports\ngeneral blockchain workloads. The coordination protocol employs\na Byzantine fault-tolerant reference committee to guards against\nmalicious coordinators. Finally, we conducted extensive, large-scale\nevaluation of our designs in realistic network settings, achieving\nover3,000transactions per second with many shards.\nREFERENCES\n[1]  Intel SGX SDK for Linux. https://github.com/01org/linux-sgx.\n[2]\nProof of Elapsted Time.  https://sawtooth.hyperledger.org/docs/core/releases/\nlatest/introduction.html.\n[3]  Ripple. https://ripple.com.\n[4]  The Coco Framework. http://aka.ms/cocopaper.\n[5]  Trusted Computing Group. http://www.trustedcomputinggroup.org/.\n[6]\n2018. Intel Software Guard Extensions Developer Guide. https://download.01.\norg/intel-sgx/linux-1.7/docs/Intel_SGX_Developer_Guide.pdf .\n[7]Mustafa Al-Bassam, Alberto Sonnino, Shehar Bano, Dave Hrycyszyn, and George\nDanezis. 2017. Chainspace: A Sharded Smart Contracts Platform.arXiv preprint\narXiv:1708.03778(2017).\n[8]\nTiago Alves and Don Felton. 2004.Trustzone: Integrated hardware and software\nsecurity. Technical Report. ARM.\n[9]\nIttai Anati, Shay Gueron, Simon Johnson, and Vincent Scarlata. 2013. Innovative\ntechnology for CPU based attestation and sealing. InHASP.\n[10]Johannes Behl, Tobias Distler, and Rüdiger Kapitza. 2017. Hybrids on Steroids:\nSGX-Based High Performance BFT. InEuroSys.\n[11]  Bitcoin Wiki. 2018. Scalability. en.bitcoin.it/wiki/scalability.\n[12]\nFerdinand Brasser, Urs Muller, Alexandra Dmitrienko, Kari Kostiainen, Srdjan\nCapkun, and Ahmad-Reza Sadeghi. 2017. Software Grand Exposure: SGX Cache\nAttacks Are Practical. InUSENIX Security.\n[13]Vitalik Buterin. 2014. Ethereum: A next-generation smart contract and decentral-\nized application platform.https://github.com/ethereum/wiki/wiki/White-Paper\n(2014).\n[14]\nMiguel Castro. 2001.Practical Byzantine Fault Tolerance.  Ph.D. Dissertation.\nMassachusetts Institute of Technolog.\n[15]Miguel Castro, Barbara Liskov, et al.1999. Practical Byzantine fault tolerance. In\nOSDI.\n[16]Xiaoxin Chen, Tal Garfinkel, Christopher Lewis, Pratap Subrahmanyam, Carl A.\nWaldspurger, Dan Boneh, Jeffrey Dwoskin, and Dan R.K. Ports. 2008. Overshadow:\nA Virtualization-Based Approach to Retrofitting Protection in Commodity Oper-\nating Systems. InASPLOS.\n[17]Byung-Gon Chun, Petros Maniatis, Scott Shenker, and John Kubiatowicz. 2007.\nAttested append-only memory: Making adversaries stick to their word. InOSR.\n[18]Victor Costan, Ilia Lebedev, and Srinivas Devadas. Sanctum: Minimal hardware\nextensions for strong software isolation. https://eprint.iacr.org/2015/564.pdf .\n[19]Thomas Dickerson, Paul Gazzillo, Maurice Herlihy, and Eric Koskinen. 2017.\nAdding Concurrency to Smart Contracts. InPODC.\n[20]Tien Tuan Anh Dinh, Rui Liu, Meihui Zhang, Gang Chen, and Beng Chin Ooi.\n2017.  Untangling blockchain: a data processing view of blockchain systems.\nTKDE(2017).\n[21]Tien Tuan Anh Dinh, Ji Wang, Gang Chen, Rui Liu, Beng Chin Ooi, and Kian-Lee\nTan. 2017. BLOCKBENCH: A Framework for Analyzing Private Blockchains. In\nSIGMOD.\n[22]James C. Corbett et al. 2012. Spanner: Google’s Globally-Distributed Database.\nInOSDI.\n[23]  Fr8 Network. 2018. Blockchain enabled logistic. https://fr8.network.\n[24]  Hector Garcia-Molina. 2008.Database systems: the complete book.\n[25]\nArthur Gervais, Ghassan O Karame, Karl Wüst, Vasileios Glykantzis, Hubert\nRitzdorf, and Srdjan Capkun. 2016. On the security and performance of proof of\nwork blockchains. InCCS.\n[26]Eleftherios Kokoris Kogias, Philipp Jovanovic, Nicolas Gailly, Ismail Khoffi, Linus\nGasser, and Bryan Ford. 2016. Enhancing bitcoin security and performance with\nstrong consistency via collective signing. InUSENIX Security.\n[27]Eleftherios Kokoris-Kogias, Philipp Jovanovic, Linus Gasser, Nicolas Gailly, and\nBryan Ford. 2017. OmniLedger: A Secure, Scale-Out, Decentralized Ledger.IACR\nCryptology ePrint Archive(2017).\n[28]Jae Kwon.  Tendermint: Consensus without mining.  https://tendermint.com/\nstatic/docs/tendermint.pdf .\n[29]  Leslie Lamport et al. 2001. Paxos made simple.ACM Sigact News(2001).\n[30]Dave Levin, John R Douceur, Jacob R Lorch, and Thomas Moscibroda. 2009. TrInc:\nSmall Trusted Hardware for Large Distributed Systems. InNSDI.\n[31]Lightning Network. 2018. Lightning network: scalable, instant Bitcoin/blockchain\ntransactions. https://lightning.network.\n[32]Shengyun Liu, Paolo Viotti, Christian Cachin, Vivien Quéma, and Marko Vukolic.\n2016. XFT: Practical Fault Tolerance beyond Crashes. InOSDI.\n[33]Loi Luu, Viswesh Narayanan, Chaodong Zheng, Kunal Baweja, Seth Gilbert, and\nPrateek Saxena. 2016. A secure sharding protocol for open blockchains. InCCS.\n[34]Sinisa Matetic, Mansoor Ahmed, Kari Kostiainen, Aritra Dhar, David Sommer,\nArthur Gervais, Ari Juels, and Srdjan Capkun. 2017. ROTE: Rollback Protection\nfor Trusted Execution. InUSENIX Security.\n[35]\nFrank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos V Rozas, Hisham Shafi,\nVedvyas Shanbhogue, and Uday R Savagaonkar. 2013. Innovative instructions\nand software model for isolated execution. InHASP.\n[36]  Medilot. 2018. Transforming healthcare for all. https://medilot.com.\n[37]\nSilvio Micali. 2016.  ALGORAND: the efficient and democratic ledger.arXiv\npreprint arXiv:1607.01341(2016).\n[38]Silvio Micali, Michael Rabin, and Salil Vadhan. 1999. Verifiable random functions.\nInFOCS.\n[39]Andrew Miller, Iddo Bentov, Ranjit Kumaresan, Christopher Cordi, and Patrick\nMcCorry. 2017. Sprites and state channels: payment networks that go faster than\nlightning. https://arxiv.org/pdf/1702.05812.pdf .\n[40]\nShuai Mu, Lamont Nelson, Wyatt Lloyd, and Jinyang Li. 2016.  Consolidating\nConcurrency Control and Consensus for Commits under Conflicts. InOSDI.\n[41]  Satoshi Nakamoto. 2008. Bitcoin: A peer-to-peer electronic cash system.\n[42]\nDiego Ongaro and John K Ousterhout. 2014.  In search of an understandable\nconsensus algorithm. InUSENIX ATC.\n[43]\nRafael Pass, Lior Seeman, and Abhi Shelat. 2017.  Analysis of the blockchain\nprotocol in asynchronous networks. InEUROCRYPT.\n[44]\nEwa Syta, Philipp Jovanovic, Eleftherios Kokoris Kogias, Nicolas Gailly, Linus\nGasser, Ismail Khoffi, Michael J Fischer, and Bryan Ford. 2017.  Scalable bias-\nresistant distributed randomness. InIEEE S& P.\n[45]\nFlorian Tramer, Fan Zhang, Huang Lin, Jean-Pierre Hubaux, Ari Juels, and Elaine\nShi. 2017.   Sealed-glass proofs: Using transparent enclaves to prove and sell\nknowledge. InEuroS&P.\n[46]Jo Van Bulck, Marina Minkin, Ofir Weisse, Daniel Genkin, Baris Kasikci, Frank\nPiessens, Mark Silberstein, Thomas F Wenisch, Yuval Yarom, and Raoul Strackx.\n2018.   FORESHADOW: Extracting the Keys to the Intel SGX Kingdom with\nTransient Out-of-Order Execution. InUSENIX Security.\n[47]\nSheng  Wang,  Tien  Tuan  Anh  Dinh,  Qian  Lin,  Zhongle  Xie,  Meihui  Zhang,\nQingchao Cai, Gang Chen, Wanzeng Fu, Beng Chin Ooi, and Pingcheng Ruan.\n2018. ForkBase: An Efficient Storage Engine for Blockchain and Forkable Appli-\ncations. InVLDB.\n[48]Xinan Yan, Linguan Yang, Hongbo Zhang, Xiayue Charles Lin, Bernard Wong,\nKenneth Salem, and Tim Brecht. 2018.  Carousel: low-latency transaction pro-\ncessing for globally-distributed data. InSIGMOD.\n[49]Mahdi Zamani, Mahnush Movahedi, and Mariana Raykova. 2018. RapidChain:\nScaling Blockchain via Full Sharding. InCCS.\n[50]Irene Zhang, Naveen Kr. Sharma, Adriana Szekeres, Arvind Krishnamurthy,\nand Dan R. K. Ports. 2015. Building Consistent Transactions with Inconsistent\nReplication. InSOSP.\nA  DEFENSES AGAINST ROLLBACK ATTACKS\nData sealing mechanism enables enclaves to save their states to per-\nsistent storage, allowing them to resume their operations upon\nrecovery.  However,  enclave  recovery  is  vulnerable  rollback  at-\ntack [34].\n13",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "AHL+. The adversary can cause the enclave of AHL+ to restart, and\nsupply it with astalelog heads upon its resumption. The enclave\nresuming with stale log heads “forgets” all messages appended after\nthe stale log heads, allowing the adversary to equivocate.\nDenote byHthe sequence number of the last consensus message\nthe enclave processes prior to its restart. The recovering enclave\nmust not accept any message with a sequence number lower than\nor equal toH. We derive an estimation procedure that allows the\nresuming enclave to estimate an upper bound,H\nM\n, on the latest\nsequence number it would have observed if it were not crashed.\nThe goal of this estimation is to guarantee thatH\nM\n≥H, ensuring\nprotocol’s safety.\nThe enclave starts the estimation procedure by querying all its\npeers for the sequence number of their last checkpoint, denoted\nbyckp. The resuming enclave uses the responses to selectckp\nM\n,\nwhich is a valueckpit receives from one nodejsuch that there\narefreplicas other thanjreporting values less than or equal to\nckp\nM\n. It then sets the valueH\nM\ntoH\nM\n=L+ckp\nM\nwhereLis a\npreset difference between the node’s high and low watermarks. The\ntest againstckpresponses offother replicas ensures thatckp\nM\nis greater than the sequence number of any stable checkpoint the\nresuming enclave may have; otherwise, there must be at leastf\nckpresponses that are larger thanckp\nM\n, which is not possible due\nto quorum intersection.\nThe resuming enclave will not append any message to its logs\nuntil it isfully recovered. This effectively refrains its host node from\nsending any message or processing any request, for the node cannot\nobtain the proof of append operation generated by the enclave. The\nenclave is fully recovered only after it is presented with a correct\nstable checkpoint with a sequence number greater than or equal to\nH\nM\n. At this point, it starts accepting append operations, and the\nhost node can actively participate in the protocol. SinceH\nM\nis an\nupper bound on the sequence number the AHL+ enclave would\nobserve had it not been crashed, and that the host node cannot\nsend any message with a sequence number lower thanH\nM\nonce\nits enclave is restarted, the protocol is safe from equivocation.\nRandomnessBeacon. The random valuesqandrndare bound\nto the epoch numbereand a countervto prevent the adversary\nfrom selectively discarding the enclave’s output to bias the random-\nness. These values, nonetheless, are stored in the enclave’s volatile\nmemory. The adversary may attempt to restart the enclave and\ninvoke it using the same epoch numbereto collect different values\nofqandrnd. Fortunately, the adversary only has a window of∆\nfrom the beginning of epocheto bias itsqandrndin that same\nepoch (after∆, nodes have already locked the value ofrndused in\nepoche). Thus, to prevent the adversary from restarting the enclave\nto biasqandrnd, it suffices to bar the enclave from issuing these\ntwo random values for any inpute,0for a duration of∆since\nits instantiation. The genesis epoch requires a more subtle set-up\nwherein participants are forced to not restart their enclaves during\nthat first epoch. This can be realized by involving the use of CPU’s\nmonotonic-counter. Such process needs to be conducted only once\nat the system’s bootstrap.\n7193143556779\nN\n0\n20\n40\n60\n80\n100\n120\n140\n160\ns\nLatency on cluster\n7193143556779\nN\n0\n20\n40\n60\n80\n100\n120\n140\n160\ns\nLatency on GCP\nHLAHLAHL+AHLR\nFigure 15: AHL+ latency on local cluster and GCP.\nB  PROBABILITY OF CROSS-SHARD\nTRANSACTIONS\nWe examine the probability that a transaction is cross-shard (i.e.,\nit affects multiple shards’ states at the same time). Consider ad-\nargument transactiontxthat affects the values (states) ofddif-\nferent arguments. Without loss of generality, let us assume that\narguments are mapped to shards uniformly at random, based on\nthe randomness provided by a cryptographic hash function applied\non the arguments. Letkbe the total number of shards formed in\nthe system. The probability that the transactiontxaffects the states\nof exactlyx≤min(d,k)shards can be calculated based on the\nmultinomial distribution as follows:\nx−1\nÖ\ni=1\nk−i\nk\nÕ\np\n1\n+p\n2\n+p\nx\n=d−x\nx\nÖ\nj=1\n(\nj\nk\n)\np\nj\n(3)\nWhile OmniLedger and RapidChain give a similar calculation,\nthey only consider a specific type of UTXO transactions whose\noutputs are all managed by a single output committee. Unfortu-\nnately, such calculation does not extend to UTXO transactions\nwhose outputs belong to separate committees, let alone non-UTXO\ndistributed transactions.\nC  ADDITIONAL EVALUATION RESULTS\nThis section provides additional results to those discussed in Sec-\ntion 7. First, the latency among the 8 GPC regions used in our\nexperiments is listed in Table 3. Figure 15 and 16 show the latency\nand number of view-changes in different consensus protocols as\nthe network size increases. Figure 17 presents the cost breakdown\nfor a block of transactions, showing that the cost of transaction\nexecution is an order of magnitude smaller than that of consensus.\nFigure 19 and 20 demonstrate AHL+’s throughput with varying\nnumbers of clients on the cluster and on GCP. Figure 18 compares\nthe sharding throughput under KVStore versus Smallbank.\nC.1PoET+vs.PoET\nWe evaluate the performance ofPoETandPoET+based on Hyper-\nledger Sawtooth v0.8 implementation. On the local cluster, we run\n4 nodes on each physical server, and impose 50 Mbps bandwidth\nlimit and 100ms latency on the network links. On GCP, we run each\nnode on an instance with 2 vCPUs, and the nodes are distributed\n14",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "Table 3: Latency (ms) between different regions on Google Cloud Platform.\nZoneus-west1-bus-west2-aus-east1-bus-east4-basia-east1-basia-southeast1-beurope-west1-beurope-west2-a\nus-west1-b0.024.766.759.0120.2150.8138.9132.7\nus-west2-a24.70.062.960.5129.5160.5140.4136.1\nus-east1-b66.762.90.012.7183.8216.693.188.2\nus-east4-b59.160.412.70.0176.6208.481.975.6\nasia-east1-b118.7129.5184.9176.60.050.5255.5252.5\nasia-southeast1-b150.8160.5216.7208.350.60.0288.8283.8\neurope-west1-b138.9140.593.281.8255.7288.70.07.1\neurope-west2-a132.1134.988.176.6252.1283.97.10.0\n7193143556779\nN\n0\n5\n10\n15\n20\n#View-changes\n#View-change normal-case\n1510152025\nf\n5\n10\n15\n20\n25\n30\n35\n#View-changes\n#View-change worst-case\nHLAHLAHL+AHLR\nFigure 16: # View-changes of AHL+ on local cluster.\n7193143556779\nN\n10\n-2\n10\n-1\n10\n0\n10\n1\ns\nConsensus cost\n7193143556779\nN\n10\n-2\n10\n-1\n10\n0\n10\n1\ns\nExecution cost\nHLAHLAHL+AHLR\nFigure 17: Consensus and execution cost breakdown of\nAHL+ on local cluster.\n812182436\nN\n0\n500\n1000\n1500\n2000\ntps\nSharding Throughput\nSB-AHL+\nSB-HL\nKVS-AHL+\nKVS-HL\nFigure 18: Sharding with KVStore vs. Smallbank.\nover8regions. We setl=\nlog(N)\n2\n, reducing the effective network\nsize to\n√\nN.\n1248163264128\n#Clients\n0\n100\n200\n300\n400\n500\n600\n700\ntps\n256 requests/second\n1248163264128\n#Clients\n0\n100\n200\n300\n400\n500\n600\ntps\n1024 requests/second\nHLAHL+AHLR\nFigure 19: Throughput with varying workload on GCP.\n1248163264\n#Clients\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\ntps\nSmallbank\n1248163264\n#Clients\n200\n400\n600\n800\n1000\n1200\n1400\n1600\ns\nKVStore\nHLAHLAHL+AHLR\nFigure 20: Throughput with varying workload on local clus-\nter.\n2832128\nN\n0\n100\n200\n300\n400\n500\n600\n700\n800\ntps\nThroughput on cluster\n2832128\nN\n0\n50\n100\n150\n200\n250\n300\n350\n400\ntps\nThroughput on GCP\nPoET 2MB\nSPoET 2MB\nPoET 4MB\nSPoET 4MB\nPoET 8MB\nSPoET 8MB\nFigure 21:PoETandPoET+performance.\nThe block size is varied from 2MB to 8MB, and the block time\nfrom12sto24s. AsNincreases, block propagation time, which\ndepends on block time and block size, increases and leads to higher\nstale block rate and lower throughput, as shown in Figure 21 and\n15",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 15
      }
    }
  },
  {
    "pageContent": "2832128\nN\n0.00\n0.05\n0.10\n0.15\n0.20\nstale blocks / total blocks\nCluster\n2832128\nN\n0.00\n0.05\n0.10\n0.15\n0.20\nstale blocks / total blocks\nGCP\nPoET 2MB\nSPoET 2MB\nPoET 4MB\nSPoET 4MB\nPoET 8MB\nSPoET 8MB\nFigure 22:PoETandPoET+’s stale block rate.\n22.PoET+maintains up to4×higher throughput because it reduces\nthe stale block rate significantly from15%to3%withN=128.\nC.2  Comparison of BFT protocols\nFigure 2 compares the performance of four popular BFT imple-\nmentations in blockchains, namely PBFT, Tendermint, IBFT and\nRaft (both from Quorum). For this comparison, we used the key-\nvalue benchmark in BLOCKBENCH. For Tendermint, we used the\nprovidedtm-benchtool that benchmarks a simple key-value appli-\ncation.\nWe examined throughputs with varying fault tolerance, as func-\ntion of number of nodes,N, and varying workload, as function of\nnumber of concurrent clients. In both settings, PBFT outperforms\nthe alternatives, except atN=1where PBFT has lower throughput\nthan Tendermint because Hyperledger limits REST request rate at\naround400requests per second. These results are due to the design\nof Tendermint and IBFT, and due to the implementation of Raft in\nQuorum.\nUnlike PBFT that relies on a stable leader to drive consensus,\nTendermint and IBFT rotate leaders in a round-robin fashion. In\nparticular, nodes in Tendermint and IBFT may take many rounds,\nwith a new leader at every round, before agreeing on a block. A\nnode votes to change to a new round when its timer expires. Safety\nis achieved via a locking mechanism in which a node locks on a\nblock after it receives more than2f+1Prepare messages. Once\nlocked, it does not vote for other blocks. For liveness, the lock is\nreleased when there are more than2f+1Prepare messages for\nanother block in a later round. However, we observe that IBFT\nsuffers from deadlock, because its locks are not released properly.\nIn Tendermint, a new block can only be proposed when the previous\none is finalized because of locking and rotating the leader. This\nlock-step execution of consensus is different from Hyperledger’s\nPBFT where a leader pipelines many blocks before the first block is\nfinalized. In particular, a node can vote on many blocks at the same\ntime, if the blocks are assigned consecutive sequence numbers. Such\npipelined execution extracts more concurrency from the consensus\nimplementation, thereby achieving higher throughput.\nRaft has a higher fault tolerance threshold than PBFT (\nN\n2\nvs.\nN\n3\n),\ntherefore it is expected to have higher throughput. But we observed\na lower performance for a Raft-based blockchain (Quorum), than a\nPBFT blockchain (Hyperledger). This is due to the naive integration\nof Raft into Quorum, which fails to pipeline consensus execution.\nMore specifically, a node in Quorum first constructs a block, then it\nruns Raft with other nodes to finalize the block. Next, it constructs\na new block and repeats these steps. Because a block is constructed\nonce the previous block is finalized, consensus happens in lockstep\nand the overall throughput suffers as a result.\nThe difference between Tendermint and Quorum is primarily\ndue to blockchain features other than consensus. Tendermint bench-\nmark uses a key-value application that simply stores data tuples\nin memory, without any other blockchain features such as Merkle\ntrees and smart contract execution. In contrast, a transaction in\nQuorum is expensive because of its execution in the EVM and\nupdates to various Merkle trees.\n16",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Towards Scaling Blockchain Systems via Sharding.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.5",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Towards Scaling Blockchain Systems via Sharding",
          "Author": "Hung Dang, Tien Tuan Anh Dinh, Dumitrel Loghin  Ee-Chien Chang, Qian Lin, Beng Chin Ooi",
          "Subject": "",
          "Keywords": "",
          "Creator": "LaTeX with hyperref package",
          "Producer": "pdfTeX-1.40.17",
          "CreationDate": "D:20190313002613Z",
          "ModDate": "D:20190313002613Z",
          "Trapped": {
            "name": "False"
          }
        },
        "metadata": null,
        "totalPages": 16
      },
      "loc": {
        "pageNumber": 16
      }
    }
  },
  {
    "pageContent": "IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO.12, DECEMBER 20223685\nTIPS: Transaction Inclusion Protocol With\nSignaling in DAG-Based Blockchain\nCanhui Chen, Xu Chen, and Zhixuan Fang\nAbstract— Directed    Acyclic    Graph    (DAG)    is    a    popular\napproach  to  achieve  scalability  of  blockchain  networks.  Due  to\nits  high  efficiency  in  data  communication  and  great  scalability,\nDAG  has  been  widely  adopted  in  many  applications  such  as\nInternet   of   Things   (IoT)   and   Decentralized   Finance   (DeFi).\nDAG-based  blockchain,  nevertheless,  faces  the  key  challenge  of\ntransaction  inclusion  collision  due  to  the  high  concurrency  and\nthe network delay. Particularly, the transaction inclusion collision\nin  DAG-based  blockchain  leads  to  the  revenue  and  throughput\ndilemmas, which would greatly degrade the system performance.\nIn  this  paper,  we  propose  “TIPS”,  the  Transaction  Inclusion\nProtocol  with  Signaling,  which  broadcasts  a  signal  indicating\nthe  transactions  in  the  block.  We  show  that  with  the  prompt\nbroadcast of a signal, TIPS substantially reduces the transaction\ncollision  and  thus  resolves  these  dilemmas.  Moreover,  we  show\nthat TIPS can  defend against  both the denial-of-service  and  the\ndelay-of-service attacks. We also conduct intensive experiments to\ndemonstrate the superior performance of the proposed protocol.\nIndex Terms— Blockchain, game theory, performance analysis.\nI. INTRODUCTION\nB\nLOCKCHAIN plays an important role in many fields\nsuch as finance, supply chain, and IoT services, thanks to\nits advantages of decentralization, persistence, pseudonymity,\nand auditability [1], [2], [3]. However, the poor performance of\n(mostly) linear blockchains (e.g., Bitcoin, Ethereum) severely\nlimits the possible large-scale applications in practice  [4].\nTo address this challenge, Directed Acyclic Graph (DAG) [5]\nis introduced as an alternate structure to address the issue of\nthe scalability of blockchain. DAG-based blockchain allows\nmultiple blocks or transactions to be appended concurrently\nwithout solving the forks, which achieves high efficiency\nin data communication and great scalability. Due to these\nManuscript received 16 March 2022; revised 17 June 2022; accepted\n30 June 2022. Date of publication 10 October 2022; date of current version\n22 November 2022. This work was supported in part by the National Science\nFoundation of China under Grant 61972432 and Grant U20A20159 and in\npart by the Guangdong Basic and Applied Basic Research Foundation under\nGrant 2021B151520008.(Corresponding  author:  Zhixuan  Fang.)\nCanhui Chen is with the Institute for Interdisciplinary Information Sciences\n(IIIS), Tsinghua University, Beijing 100084, China (e-mail: chen-ch21@\nmails.tsinghua.edu.cn).\nXu Chen is with the School of Computer Science and Engineering,\nSun Yat-sen University, Guangzhou 510275, China (e-mail: chenxu35@\nmail.sysu.edu.cn).\nZhixuan Fang is with the Institute for Interdisciplinary Information Sci-\nences (IIIS), Tsinghua University, Beijing 100084, China, and also with\nthe Shanghai Qi Zhi Institute, Shanghai 200232, China (e-mail: zfang@\nmail.tsinghua.edu.cn).\nColor versions of one or more figures in this article are available at\nhttps://doi.org/10.1109/JSAC.2022.3213357.\nDigital Object Identifier 10.1109/JSAC.2022.3213357\nproperties, DAG-based blockchain has been widely adopted\nin many IoT scenarios [6], [7], [8], [9], [10]. DAG-based\nblockchain, nevertheless, facesthe key challenge of transaction\ninclusion collision [5]. Due to the high concurrency and the\nnetwork delay, miners usually do not have complete informa-\ntion of the updated blockchain. Thus, miners often include\nthe same transactions in concurrent blocks, generating redun-\ndant records in the blockchain. The collision in transaction\ninclusion wastes the block capacity and severely degrades the\nsystem performance [11].\nThough DAG-based blockchain systems admit high concur-\nrency in transaction process, the risk of transaction collision\nindeed induces dilemmas on miners’ revenue and system\nthroughput. Therevenue  dilemmaindicates the difficult sit-\nuation in improving miners’ revenue, or, in achieving higher\ntransaction fees per block. When miners are packing transac-\ntions into a block, the intuitive strategy is to select transactions\nwith high rewards (fees). But concurrent blocks with the\nsame set of high-fee transactions lead to the split of reward\namong miners, which discourages miners from including these\ntransactions. Indeed, the theoretical analysis in [5] has verified\nthat miners would avoid transaction collision by choosing\ntransactions with lower fees. Such a negative impact would\nalso degenerate the profit efficiency and the quality of service\nof the system, as the high value transactions will not be\nprocessed with priority.\nOn the system level, thethroughput  dilemmaalso arises\nand implies the difficulty in scaling up the system. Since the\nnetwork propagation delay is positively correlated with the\nblock size in the current DAG-based blockchain, packing more\ntransactions in a single block leads to a larger network propa-\ngation delay. The increased network propagation time induces\nmore collisions and thus wastes the system throughput. In fact,\na similar dilemma in increasing block size has been observed\nin linear blockchain systems where network propagation delay\nleads to forking [12].\nTo tackle these issues, in this paper, we propose the Trans-\naction Inclusion Protocol with Signaling (TIPS), where we\nintroduce a lightweight “signal” mechanism in the DAG-based\nblockchain. In TIPS, when a miner mines a new block, he will\nfirst broadcast a “signal” before broadcasting the block. The\nother miners will adjust their transaction inclusion strategies\nreacting to the “signal”. A signal has the following two\nproperties: (i) The size of the signal is small enough for quick\npropagation in the network. (ii) The signal provides informa-\ntion about transactions included in the corresponding block.\n0733-8716 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "3686IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nSpecifically, we use a Bloom filter [13] to generate the\n“signal” in the block header. The Bloom filter can indicate\nwhether a transaction is in the block. When a miner mines a\nnew block, it should first broadcast the block header as a signal\nto the whole network. Since the size of the signal is small,\nother miners can receive the signal in a short time. Based\non the signal, other miners can infer which transactions are\nincluded in the new block with high probability. Thus, other\nminers are able to avoid the transaction inclusion collision.\nThe introduction of TIPS can break down the revenue\ndilemma and throughput dilemma. We show this by analyz-\ning the miners’ transaction inclusion strategy under TIPS.\nWe  model the transaction inclusion process as  a non-\ncooperative game and investigate the equilibrium strategy.\nWe show that with the signal information, miners are able to\nselect high value transactions in equilibrium, which dissolves\nthe revenue dilemma. In the meantime, the signal in TIPS\neffectively reduces the network propagation time, which allows\nthe implementation of a huge block size, and thus, breaks\nthe throughput dilemma. These results are supported by both\ntheoretical analysis and experimental validation. Beyond the\ndiscussion on performance, we also investigate the security of\nTIPS and show that TIPS can defend against existing classic\nattacks.\nThe key contributions of the paper are listed as follows:\n•We characterize the revenue dilemma and the throughput\ndilemma of DAG-based blockchain systems. Specifically,\nminers are suffering from low revenue no matter the\ntransaction inclusion strategy, while the system through-\nput does not increase in the block size. We show this\nis due to the transaction collisions in the DAG-based\nblockchain system, and that a low network propagation\ndelay is the key to breaking the dilemmas.\n•We propose a novel Transaction Inclusion Protocol with\nSignaling (TIPS) in the DAG-based blockchain. TIPS\nincludes a Bloom filter in the block header, which serves\nas a signal in the mining process and can indicate the\ntransaction included in the newly-mined block. By sepa-\nrating the propagation/verification processes of the block\nheader and block body, TIPS can broadcast the block\nheader (signal) as soon as possible, which significantly\nlowers the effective network propagation delay.\n•We provide a thorough theoretical analysis of the perfor-\nmance and security of TIPS. We adopt a game-theoretic\nframework to show that at the Nash equilibrium, with the\nprompt signal from TIPS, the system effectively lowers\nthe network propagation delay, and thus reduces trans-\naction collisions. Besides, we also develop a DAG-based\nblockchain simulator and conduct intensive experiments.\nBoth the theoretical analysis and experiment results show\nthat TIPS can substantially resolve both the revenue and\nthe throughput dilemmas.\nThe rest of the paper is organized as follows. In Section II,\nwe introduce the miners’ transaction inclusion game and\ncharacterize the two dilemmas, namely, the revenue dilemma\nand the throughput dilemma. In Section III, we introduce\nTIPS, the transaction inclusion protocol with signaling in the\nDAG-based blockchain. In Section IV, we show that TIPS\nTABLE I\nS\nUMMARY OFNOTATIONS\ncan break down the aforementioned dilemmas. In Section V,\nwe conduct intensive experiments to demonstrate the efficiency\nof TIPS. In Section VI, we discuss the possible security threats\nin the TIPS. In Section VII, we review related literature.\nSection VIII concludes the paper with final remark.\nII. T\nRANSACTIONINCLUSIONGAME AND THEDILEMMAS\nIn this section, we first investigate the system model and\nthe transaction inclusion game. We next show that there\nare two dilemmas in the DAG-based blockchain, namely,\nthe revenue dilemma and the throughput dilemma. From the\nminers’ perspective, the revenuedilemma indicates the difficult\nsituation in improving the miners’ revenue. From the system\nperspective, the throughput dilemma reveals the difficulty in\nscaling up the system. We list the key notations in Section II\nand Section IV in Table I.\nA. Transaction Inclusion Game\nIn this paper, we consider a DAG-based blockchain, where\nthe block generation process follows the Poisson process\nwith a rateλ. Following the common assumption in previous\nliterature (e.g., [5], [15]), we denote the maximum network\npropagation delay for a block asΔ, which means all nodes\nin the blockchain network can receive the newly-mined block\nafterΔ. Moreover, similar to [5], [15], we assume that miners\nin the system are homogeneous in mining power and share\nthe identical transaction pool. The transaction pool includes\nat mostmtransactions. Due to the block size limit, each\nblock can contain at mostntransactions.\n1\nTo maximize\nthe mining revenue, the miner will decide his transaction\ninclusion strategy and pick up some transactions from the\ntransaction pool and pack them into the mining block to earn\nthe transaction fees.\nWe denote a miner’s transaction inclusion strategy asp∈P.\nHereP={p|0≤p\ni\n≤1and\n\u0002\nm\ni=1\np\ni\n=n}denotes\nthe set of transaction inclusion strategies, andp\ni\ndenotes the\nprobability of including the transactioniin the new block.\nWithout loss of generality, we sort the transactions in the\n1\nWithout loss of generality, we can always assume that there arem\ntransactions in the pool and each block will containntransactions. Practically,\nif the transactions are insufficient, we can assume that there are dummy\ntransactions with zero transaction fees, which does not affect our analysis.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3687\ntransaction pool in descending order by their transaction fees,\nwhere the transaction fee of the transactioniis denoted asf\ni\n.\nThen we havef\n1\n≥f\n2\n≥···≥f\nm\n. As examples, we show\nbelow three typical transaction inclusion strategies:\n•Random inclusion (p\nrand\n):p\n1\n=p\n2\n=···=p\nm\n=\nn\nm\n.\n•Random inclusion with priority (p\npriority\n):p\n1\n≥p\n2\n≥\n···≥p\nm\nand\np\n1\nf\n1\n=\np\n2\nf\n2\n=···=\np\nm\nf\nm\n.\n•Topn(p\ntop\n):p\n1\n=p\n2\n=···=p\nn\n=1andp\nn+1\n=\np\nn+2\n=···=p\nm\n=0.\nFollowing the similar setting in [5], we model the miners’\ntransaction selection as a single-shot transaction inclusion\ngame [15], where each miner adopts his transaction inclusion\nstrategy to maximize his revenue. Since the coinbase transac-\ntion reward is independent of the miner’s transaction selection,\nfor simplicity, we only consider the transaction fee reward in\nthe miner’s revenue.\nThe miner’s revenue is analyzed as follows. Consider a\nminerAthat finds and propagates a block, which includes\na transactioni.Ifιmore miners have successfully mined\na block with the same transactioniduring the network\npropagation period of minerA’s block, we assume that this\nminer’s expected reward from this transactioniisf\ni\n/(ι+1),\ni.e., assuming an equal network advantage for all miners. Note\nthat such a model of probabilistic and homogeneous network\nadvantage during the propagation period is common in the\nprevious study (e.g., [5], [16]). Then the miner’s expected\nreward is analyzed in the following lemma.\nLemma 1:  The miner’s revenue on one block with transac-\ntion inclusion strategypgiven that all the other miners adopt\nthe strategyp\n\u0002\nis\nR(p|p\n\u0002\n)=\nm\n\u0003\ni=1\np\ni\nf\ni\nr(p\n\u0002\ni\n|Δ),\nwhere\nr(p\n\u0002\ni\n|Δ) =\n\u0004\n1−e\n−λΔp\n\u0002\ni\n\u0005\nλΔp\n\u0002\ni\n.\nThe proof of Lemma 1 is shown in Appendix A. Besides,\nwe postpone all proofs of this paper into the Appendix. The\ntermf\ni\n·r(p\n\u0002\ni\n|Δ)in Lemma 1 reflects the expected reward for\na miner to include transactioniwhen all other miners include\ntransactioniin their blocks with probabilityp\n\u0002\ni\n, given network\npropagation delay beingΔ. Specially, when all miners adopt\nthe same transaction inclusion strategyp(i.e., the symmetric\ncase) and there is no futher confusion, we denote the miner’s\nrevenue asR(p)=R(p|p)for simplicity.\nTo study the stable transaction inclusion behavior of miners,\nwe first define the Nash equilibrium and approximate Nash\nequilibrium of the transaction inclusion game below.\nDefinition 1:  The  transaction  inclusion  strategyp\n∗\nis  a\nξ-approximate Nash equilibriumof the transaction inclusion\ngame if\nR(p\n∗\n)≥max\np∈P\nR(p|p\n∗\n)−ξ.\nSpecially,  whenξ=0,  i.e.,R(p\n∗\n)≥max\np∈P\nR(p|p\n∗\n),the\ntransaction inclusion strategyp\n∗\nis aNash equilibrium.\nThe symmetric equilibrium in the single-shot transaction\ninclusion game has been analyzed in [5], which is shown in\nthe following theorem.\nTheorem 1 [5]:  With the network propagation delay for the\nwhole  block asΔ,  the  symmetric  equilibrium  strategy  of  the\ntransaction inclusion game isp\n∗\n(Δ),where\np\n∗\ni\n(Δ) =\n⎧\n⎪\n⎨\n⎪\n⎩\nmin{r\n−1\n\n\nc\nl\n∗\nf\ni\n|Δ\n\u000b\n,1},1≤i≤l\n∗\n,\n0,l\n∗\n<i≤m.\nAlso, we have\nF\nl\n(c)=\nl\n\u0003\ni=1\nmin{r\n−1\n(c/f\ni\n|Δ),1}−n,∀1≤l≤m,\nl\n∗\n=max{l≤m|∀i≤l:F\ni\n(f\ni\n)≤0},\nc\nl\n∗\nis the root ofF\nl\n∗\n.\nB. Revenue Dilemma Analysis\nAsdiscussedinSectionI,toachieveahighrevenue,\nminers are supposed to include transactions with high fees,\ni.e., to  adopt the “topn” strategy. However, as DAG-based\nblockchain allows high concurrency of block generation, every\nminer choosing high-fee transactions will result in severe\ntransaction inclusion collision, which will degrade miners’\nrevenue. This is the revenue dilemma due to the collision of\nincluded transactions.\nThe equilibrium strategy in Theorem 1 is highly related to\nthe network propagation delay and is indeed a compromised\nsolution facing the revenue dilemma. We can find that the\nequilibrium transaction inclusion strategy can be considered\nas the “soft topnstrategy”, since only the transaction with\ntopl\n∗\ntransaction fees might be included in a new block.\nA large network propagation delayΔin Theorem 1 will result\nin a largel\n∗\n. Besides, when thel\n∗\nis large, for example,\nl\n∗\n=m, the “soft topnstrategy” performs like the random\nstrategyp\nrand\n. Below, we show that the random strategy is a\nξ-approximate Nash equilibrium strategy, andξrepresents the\ngap between the random strategy and the equilibrium strategy.\nTheorem 2:  Therandomstrategy,i.e.,p\nrand\nisa\nξ-approximate Nash equilibrium, where\nξ=n\n1−e\n−λΔ\nn\nm\nλΔ\nn\nm\n\f\n1\nn\nn\n\u0003\ni=1\nf\ni\n−\n1\nm\nm\n\u0003\ni=1\nf\ni\n\r\n.\nSpecially,  whenΔ→∞,  the  random  strategy  is  the  Nash\nequilibrium.\nFor convenience, we denotey(Δ) =\n1−e\n−λΔ\nn\nm\nλΔ\nn\nm\n. Note that\ny(Δ)is monotonically decreasing inΔ, which implies that\nthe extra revenue from deviating from the random strategy\nwill decrease as the network propagation delay becomes larger.\nThus the equilibrium transaction inclusion strategy will lean\ntowards the random strategy.  Since broadcasting the whole\nblock in the blockchain network takes a long time, the equilib-\nrium strategy in the practical scenario is similar to the random\nstrategy. However, the random strategy ignores the difference\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "3688IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nbetween different levels of the transaction fees, resulting in the\ndilemma where miners can not include transactions with high\ntransaction fees. This is the revenue dilemma in DAG-based\nblockchain.\nC. Throughput Dilemma Analysis\nIn this section, we study the throughput dilemma. The\nsystem throughput is measured by transaction per second\n(TPS). Intuitively, to  achieve high throughput, the block\nsize should be as large as possible so as to include more\ntransactions in a block. However, a large block size will lead\nto a large network propagation delay and result in lots of\ntransaction inclusion collisions, which will limit the system\nthroughput. This is the throughput dilemma in DAG-based\nblockchain.\nHere, we first analyze the block capacity utilization and\nsystem throughput, and further characterize the throughput\ndilemma in DAG-based blockchain We define the block capac-\nity utilization as the ratio of the number of unique transactions\nincluded in the blocks and the number of total transactions\nincluded in the blocks in long term. The system throughput is\nmeasured by transaction per second (TPS). Then the system\nthroughput of the DAG-based blockchain is analyzed in the\nfollowing theorem.\nTheorem 3:  The block capacityutilizationand the through-\nput of  the  DAG-based blockchain with  the transaction inclu-\nsion strategypand the network propagation delayΔare\nU(p)=\nm−\n\u0002\nm\ni=1\n(1−p\ni\n)e\n−λΔp\ni\nn(λΔ+1)\n,TPS(p)=λnU(p),\nrespectively.\nFrom Theorem 3, we can find that to achieve a higher\nsystem throughput, we should enlarge the block size so as\nto include more transactions. However, if the block size is\nincreased, the corresponding network propagation delayΔwill\nalso increase, leading to a lower block capacity utilization,\nwhich will further degrade the system throughput. On the\nother hand, though decreasing the block size can reduce\nthe network propagation delay and thus increase the block\ncapacity utilization, there is only a small amount of transac-\ntions can be included in one block, which limits the system\nthroughput. This is the throughput dilemma in DAG-based\nblockchain.\nIII. T\nRANSACTIONINCLUSIONPROTOCOL\nWITHSIGNALING\nTo tackle the dilemmas in DAG-based blockchain, we intro-\nduce “TIPS”, i.e., the Transaction Inclusion Protocol with\nSignaling. The key features of TIPS are (1) TIPS introduces\na signal to indicate the transactions included in the block.\n(2) TIPS broadcast the signal earlier than the whole block.\nAs a baseline, we will compare TIPS with the standard\nDAG-based blockchain protocol (i.e., without TIPS), where the\nminers do not obtain any information of the newly-generated\nblock until they receive the whole block.\nFig. 1.  Block propagation model in TIPS and the standard protocol.\nA. Bloom Filter in Block Header\nA Bloom filter [13] is a probabilistic data structure that\nanswers the query of “whether an element is a member of\na set”. It returns a binary answer, i.e., either “True” or “False”.\nIf the Bloom filter returns “False”, the element is definitely\nnot in the set. However, if the Bloom filter returns “True”, the\nelement is a member of the set with high probability.\nAs the most important feature, TIPS introduces a Bloom\nfilter in the header of each block to maintain the information\nof transactions in this block. Thus, the Bloom filter can answer\nthe query of whether a transaction is in the corresponding\nblock quickly and with high probability.\nNext, we examine the performance of a Bloom filter. The\nkey metric is the false positive rate of a Bloom filter, i.e., the\nprobability that the Bloom filter returns “True” but the element\nis not a member of the set. Consider a Bloom filter withbbits\nandhdifferent hash functions. We assume that the block size\nlimit isntransactions per block. Thus, we can insert at most\nntransactions into the Bloom filter associated with the block.\nThe probability of false positives of the Bloom filter withn\ntransactions is\n\u0005=\n\u0004\n1−e\n−hn/b\n\u0005\nh\n.(1)\nIt is worth mentioning that the representation of one\ntransaction in the Bloom filter always takes a fixed space\n(i.e.,bbits) regardless of the size of the transactions. The size\nof a Bloom filter is drastically smaller than the size of the\noriginal block body, due to the property of hash functions.\nIn the current Bitcoin network, the average block size is\n1.2MB, the average transaction size is 500B, and the average\nnumber of transactions in a block is 2500. As an example, for\na Bloom filter withb= 20000bits andh=5hash functions,\nthe false positive probability is2.17%, which is low enough\nfor practice. Meanwhile, the total size of the signal is only\n2.5KB, which is less than1%of the original block size and\nis small enough to propagate through the whole network in a\nshort time.\nB. Header-First Block Propagation\nTo broadcast the signal to the whole network as soon\nas  possible,  we  improve the  block propagation model.\nFigure 1 shows the block propagation model in TIPS and the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3689\nstandard protocol. We can find that in the standard protocol,\nthe node will start the propagation of a block (including the\nblock header and the blockbody) only after it receives and\nverifies the whole block. On the contrary, TIPS decouples the\npropagation/verification processes of the block header and the\nblock body. In TIPS, the node will broadcast the received\nheader once the verification is complete, without waiting to\nreceive the whole block body. Therefore, TIPS can broadcast\nthe block header to the whole network in a short time.\nWe explain the detailed block propagation model of TIPS\nas follows. For a nodeA, upon receiving a message, there are\ntwo possible cases:\n1) When nodeAreceives  a  new  block  headerBH\nc\nof\nblockB\nc\n, it validatesBH\nc\nand checks whether the hash\nvalue of the block header satisfies the PoW puzzle. If the\nblock headerBH\nc\nis valid, nodeAshould broadcast\nBH\nc\nas soon as possible. Note that the validation\nprocess for the block header is not time-consuming and\nthe size of the block header issmall. Therefore, the block\nheaderBH\nc\ncan be propagated to the whole network in\na short time.\n2) When nodeAreceives a new block bodyBB\nc\nof block\nB\nc\n, it validatesBB\nc\nas follows:\n•Block Header Existence: If the miner did not\nreceive the corresponding block headerBH\nc\nbefore,\nhe should reject the block body immediately since\nhe can not validate the PoW of the block.\n•Bloom filter Validation: If the Bloom filter in the\nblock header does not match the transactions in the\nblock body, the block will be marked as “invalid”\nand be rejected.\nIf the block body is valid, nodeAshould broadcastBB\nc\nas soon as possible.\nBesides, TIPS also helps to optimize the block transmission\nprocess from the following perspectives. (i) In TIPS, the\nreceived signal can indicate the transactions in the newly-\nmined but unreceived block. Therefore, TIPS allows the miners\nto pre-verify the transactions that the signal indicates when\nreceiving the signal. In this way, the miners can speed up\nthe verification process when receiving the whole block, and\ntherefore speed up the block transmission process. (ii) TIPS\nseparates the verification/propagation processes of the block\nheader and the block body. Since the block header is an\nidentification of the whole block, the miners that received the\nblock header without the block body can try to pull the block\nbody from the connected neighbors instead of just passively\nwaiting for the block propagation, which can also speed up the\nblock transmission process. (iii) The independent header-first\npropagation in TIPS also slightly accelerates the broadcast of\nthe block body, as the block body broadcast does not need to\nwait for the neighbor’s confirmation of the received header.\nC. Mining Process in TIPS\nWe denote the set of transactions hitting the Bloom filter\nof blockB\nc\n, i.e., transactions that are reported to be included\nin the block by the Bloom filter, asTH\nc\n. We denote the set\nof transactions that are actually included in the block body\nAlgorithm 1Mining Process in TIPS\n1onReceive a block headerBH\nc\n2ifthe block headerBH\nc\nis validthen\n3Extract Bloom filterBL\nc\nfromBH\nc\n4Select the transactions hittingBL\nc\nfrom transaction\npool, i.e.,TH\nc\n5Update the expected value of the transaction inTH\nc\n.\nSpecifically, the expected value of transactiontx\ni\nwill be\n\u0002f\ni\n.\n6onReceive a block bodyBB\nc\n7ifthe block bodyBB\nc\nis valid and matches the block\nheaderBH\nc\nthen\n8Remove the transactions that are included in the block\nbody, i.e.,TB\nc\n, from the transaction pool.\n9Update the expected value of the transactions that hit the\nBloom filter in block header but are not included in the\nblock body. Specifically,∀i∈(TH\nc\n/T B\nc\n), the expected\nvalue of transactionishould be updated tof\ni\n/\u0002.\n10else\n11update the expected values of all the transactions that hit\nthe Bloom filter of the block headerBH\nc\nto their\noriginal transaction fee, that is,∀i∈TH\nc\n, the expected\nvalue of transactionishould be updated tof\ni\n/\u0002.\n12onThe block headerBB\nc\nis expired\n13Mark the block header as “expired”.\n14Update the expected values of all the transactions that hit\nthe Bloom filter of the block headerBH\nc\nto their original\ntransaction fee, that is,∀i∈TH\nc\n, the expected value of\ntransactionishould be updated tof\ni\n/\u0002.\n15onMine a new blockB\nc\n16Broadcast the block headerBH\nc\nto all nodes in the\nblockchain network\n17Broadcast the block bodyBB\nc\nto all nodes in the\nblockchain network\n18Remove the transactions inB\nc\n, i.e.,TB\nc\n, from the\ntransaction pool.\n19onReceive a transactiontx\n20Initiate the expected value of the transaction to be its\ntransaction fee\n21Add the transaction into the transaction pool.\n22ifthe transaction pool exceeds it limitthen\n23Drop the transaction with the lowest expected value.\nof blockB\nc\nasTB\nc\n. Since all included transactions will be\nconfirmed by the Bloom fitler, we have thatTB\nc\n⊂TH\nc\n.\nSpecifically, we have thatE(|TB\nc\n|)/E(|TH\nc\n|)=1−\u0005,where\n\u0005is the false positive probability of the Bloom filter in (1).\nIn this paper, we consider the following mining reward rule,\nwhich is common in practices (e.g., [16]). If there arekminers\nthat include the same transactioniwith feef\ni\nin their blocks,\nthe transaction fee will be rewarded to the miner who first\nmines the block. Note that our analysis technique applies to\nmore complicated rules.\nThe mining process is shown in Algorithm 1, visualized\nin Figure 2. We useΔto denote the propagation time of a\nblock, andτto denote the propagation time of a block header\n(in which the signal is included). Since the size of Bloom filter\nis much smaller than a block body, we haveτ\tΔ.BL\nc\nis\nthe Bloom filter inBH\nc\n,TH\nc\nis the set of transactions hitting\nBL\nc\nin transaction pool, andTB\nc\nis the set of transactions\nincluded inBB\nc\n.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "3690IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 2.  Mining process in TIPS.\nIn the following, we specify the mining process, espe-\ncially the transaction selection. In general, a miner maintains\nan expected value for each transaction in his transaction\npool, and selects transactionsfor mining according to some\nspecific transaction inclusion strategies. In TIPS,f\ni\ndenotes\nthe expected value of transactioniinstead of its original\ntransaction fee. The expected value of the transaction reflects\nthe expected reward that a miner can obtain from including\nthis transaction in his block and will change during the mining\nprocess. Specially, the initial expected value of the transaction\nis exactly the corresponding transaction fee. The miner updates\nhis transaction pool and the expected value of transactions in\nthe following two cases.\nThe first case happens when the miner receives a block\nheaderBH\nc\n(after the signal propagation delayτ). If the block\nheaderBH\nc\nis valid, the miner should update the expected\nvalue of the transactions inTH\nc\n. If a transactionihits the\nBloom filter of a valid signal, its expected value should be\nmultiplied by\u0005, i.e., updated to\u0005f\ni\n, because the Bloom filter\nimplies that the probability that the transactioniis not included\nin the new block is only\u0005.\nThe second case happens when the miner receives a block\nbodyBB\nc\n(after the block propagation delayΔ). If the block\nbody is valid and matches the block header, the miner should\nremove the transactions that are included in the block body\nfrom the transaction pool. Then, the miner needs to recover\nthe expected value of transactions due to false positive results\nfrom the Bloom filters, i.e., transactions that hit the Bloom\nfilter but are not included in the block body. DenoteU\\V=\n{x∈Uandx/∈V}, then for all transactionsi∈TH\nc\n\\TB\nc\n,\nthe expected value of transactionishould be update tof\ni\n/\u0005.\nHowever, if the block body is invalid, we should update the\nexpected values of all the transactions that hit the Bloom filter\nof the block headerBH\ni\nby dividing the false positive rate,\ni.e.,∀i∈TH\ni\n, the expected value of transactionishould be\nupdated tof\ni\n/\u0005.\nThere exists a hard-coded timeout for the block header [17].\nWhen receiving a block headerBH\nc\n, a miner updates the\nexpected transaction valuesaccordingly, and starts a time\ncounting. If the miner has not received the corresponding block\nbody until a certain timeout period, the block header will be\nmarked as “expired”. Then, the miner will recover the expected\nvalues of all the transactions that hit the Bloom filter of the\nblock headerBH\ni\n,thatis,∀i∈TH\ni\n, the expected value of\ntransactionishould be updated tof\ni\n/\u0005.\nTo mine a new block, the miner will select a subset of trans-\nactions from the transaction pool based on certain transaction\ninclusion strategies, which is mentioned in Section II-A and\nwill be further discussed in the following section.\nD. Potential Cost of TIPS\nIn this section, we will discuss the potential cost of intro-\nducing TIPS in the DAG-based blockchain and show that the\nextra computation overhead and the communication overhead\nare insignificant.\n1) Computation Overhead:In TIPS, the extra computation\noverhead for the miners is from (i) maintaining the expected\nvalue for the transactions in the pool, and (ii) constructing\nand validating the Bloom filter in the block header. We will\nthen show that the computation overhead is negligible. First,\nto maintain the expected value for the transactions, the miners\ncan use some lookup data structure, such as the hash map,\nto update the transaction’s expected value inO(1). Second,\nwhen mining a new block, the miners need to construct the\nBloom filter in the block header. When receiving a newly-\nmined block, the miners also need to validate the Bloom filter,\nand this validation can be done by constructing the Bloom\nfilter based on the transactions in the block body. We next\nshow that constructing the Bloom filter is computationally\ncheap. For a block including2000transactions, the extra time\nfor constructing the Bloom filter withn= 20000bits and\nh=5hash functions, and validating it is only6μson a\nPC with a CPU of Intel i7-1165G7. Therefore, we can claim\nthat the extra computation overhead for introducing TIPS is\ninsignificant.\n2) Communication Overhead:In TIPS, the miners need to\nbroadcast the block header including the Bloom filter as the\nsignal before broadcasting the block body, which will result\nin extra communication overhead. As shown in Section III-A,\nthe total size of the signal is only2.5KB, which is less than\n1%of the original block size. Besides, in practice, we can use\nblockchain relay networks to further accelerate the propagation\nof the block header [18]. Therefore, the extra communication\noverhead for introducing TIPS is also insignificant.\nIV. TIPS B\nREAKSDOWN THEDILEMMAS\nIn this section, we first the equilibrium of the transaction\ninclusion game with TIPS and show that TIPS can lower\nthe effective network delay and thus make the equilibrium\ntransaction inclusion strategy approach to the topnstrategy.\nIn this way, we show that TIPS can break the revenue and\nthroughput dilemma.\nA. Lowering Effective Network Delay\nWe first study the equilibrium of the transaction inclusion\ngame with TIPS. The following theorem shows an interesting\nresult that when the false positive rate of the Bloom filter is low\nenough, the equilibrium is similar to the case in Theorem 1,\nbut with the effective network delay drastically decreased toτ,\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3691\nwhereτis the network propagation delay for the signal in\nTIPS.\nTheorem 4:  If  the  false  positive  probability  of  the  Bloom\nfilter  satisfies\u0005<\nf\nm\nf\n1\n,  the  symmetric  equilibrium  in  TIPS  is\np\n∗\n(τ),where\np\n∗\ni\n(τ)=\n⎧\n⎨\n⎩\nmin{r\n−1\n\n\nc\nl\n∗\nf\ni\n|τ\n\u000b\n,1},1≤i≤l\n∗\n,\n0,l\n∗\n<i≤m.\nAlso, we have\nF\nl\n(c)=\nl\n\u0003\ni=1\nmin{r\n−1\n(c/f\ni\n|τ),1}−n,∀1≤l≤m,\nl\n∗\n=max{l≤m|∀i≤l:F\ni\n(f\ni\n)≤0},\nc\nl\n∗\nis the root ofF\nl\n∗\n.\nProof:As shown in Figure 2, once a miner successfully\nmines a new block including a set of transactionsT, he will\nbroadcast the signal immediately. Other miners will receive the\nsignal after the signaling propagation delayτ.Ifotherminers\nwould not include any transaction inTafter receiving the\nsignal, then Theorem 2 can be proved. Consequently, to prove\nthe above theorem, it is sufficient to show that when\u0005<\nf\nm\nf\n1\n,\nit is not rational for other miners to include any transaction in\nTafter receiving the signal.\nWe consider the opposite holds, that is, other miners will\ninclude at least one of the transactions inTin their block\nwith a a positive probability, even after they have received\nthe corresponding signal but not received the whole block\nyet. In this situation, we denote the expected reward for\na miner to include transactionigiven that other miners\ninclude transactioniin their blocks with probabilityp\ni\nis\nf\ni\n· ̃r\n∗\n(p\ni\n).Thenwehave ̃r\n∗\n(p)<r(p|τ). Besides, ̃r\n∗\n(·)is also\nmonotonically decreasing, so is its inverse function ̃r\n∗−1\n(·).\nWe analyze the situations beforereceiving the signal (Situation\nA) and after receiving the signal (Situation B) as follows.\n1) Situation  A:  Before  Receiving  the  Signal:The transac-\ntions in the pool are sorted in descending order of their fees,\ni.e.,S\nA\n={tx\n1\n,tx\n2\n,...,tx\nm\n}with the corresponding sub-\nscript indexs ofs\nA\n={1,2,...,m}. According to Theorem 1,\nwe know thatp\nA\nis a symmetric equilibrium, where\np\nA\ni\n=\n⎧\n⎨\n⎩\nmin{ ̃r\n−1\n\n\nc\nl\n∗\nf\ns\nA\n(i)\n\u000b\n,1},1≤i≤l\n∗\nA\n,\n0,l\n∗\nA\n<i≤m,\nand we have\nF\nA\nl\n(c)=\nl\n\u0003\ni=1\nmin{ ̃r\n−1\n(c/f\ns\nA\n(i)\n),1}−n,∀1≤l≤m,\nl\n∗\nA\n=max{l≤m|∀i≤l:F\nA\ni\n\u000e\nf\ns\nA\n(i)\n\u000f\n≤0},\nc\nl\n∗\nA\nis the root ofF\nA\nl\n∗\n.\nTherefore, a transactioniwill be included only wheni≤l\n∗\nA\n.\n2) Situation B: After Receiving the Signal:The correspond-\ning signal will be broadcast to the whole network. Without\nloss of generality, we consider transactiontx\n ̃\ni\n,where\n ̃\ni≤l\n∗\nA\n.\nAfter the miner includestx\n ̃\ni\nin its block and the corresponding\nsignal has been received by other miners, the expected value\noftx\n ̃\ni\n,i.e.,e\n ̃\ni\n, will be\u0005f\n ̃\ni\n.Since\u0005<f\nm\n/f\n1\n,wehave\n\u0005f\n ̃\ni\n≤\u0005f\n1\n<f\nm\n≤f\nl\n∗\nA\n+2\n.\nThen the transactions in the pool sorted in descending order\nof their expected values will be\nS\nB\n={tx\n1\n,··,tx\n ̃\ni\n−1\n,tx\n ̃\ni\n+1\n,··,tx\nl\n∗\n,tx\nl\n∗\n+1\n,··,tx\n ̃\ni\n,··,tx\nm\n},\nwith the corresponding subscript indexs of\ns\nB\n={1,2,··,\n ̃\ni−1,\n ̃\ni+1,··,l\n∗\nA\n,l\n∗\nA\n+1,··,\n ̃\ni,··,m}.\nAccording to Theorem 1, we know thatp\nB\nis a symmetric\nequilibrium, where\np\nB\ni\n=\n⎧\n⎨\n⎩\nmin{ ̃r\n−1\n\n\nc\nl\n∗\nf\ns\nB\n(i)\n\u000b\n,1},1≤i≤l\n∗\n,\n0,l\n∗\n<i≤m,\nand we have\nF\nB\nl\n(c)=\nl\n\u0003\ni=1\nmin{ ̃r\n−1\n(c/f\ns\nB\n(i)\n),1}−n,∀1≤l≤m,\nl\n∗\nB\n=max{l≤m|∀i≤l:F\ni\n(f\ni\n)≤0},\nc\nl\n∗\nB\nis the root ofF\nA\nl\n∗\n.\nThen we have\nF\nB\nl\n∗\nA\n+1\n(f\ns\nB\n(l\n∗\nA\n+1)\n)−F\nA\nl\n∗\nA\n+1\n(f\ns\nA\n(l\n∗\n+1)\n)\n=\nl\n∗\nA\n+1\n\u0003\ni=1\nmin{ ̃r\n−1\n\n\nf\nl\n∗\nA\n+1\nf\ns\nA\n(i)\n\u000b\n,1}−\nl\n∗\nB\n+1\n\u0003\ni=1\nmin{ ̃r\n−1\n\n\nf\nl\n∗\nB\n+1\nf\ns\nB\n(i)\n\u000b\n,1}\n=min{ ̃r\n−1\n\n\nf\nl\n∗\nA\n+2\nf\nl\n∗\nA\n+2\n\u000b\n,1}−min{r\n−1\n\n\nf\nl\n∗\nA\n+1\nf\n ̃\ni\n\u000b\n,1}\n=1−min{ ̃r\n−1\n\n\nf\nl\n∗\nA\n+1\nf\n ̃\ni\n\u000b\n,1}≥0\nTherefore, we haveF\nB\nl\n∗\nA\n+1\n(f\ns\nB\n(l\n∗\nA\n+1)\n)>0, which implies that\nIndex(tx\n ̃\ni\n)>l\n∗\nA\n+1>l\n∗\nB\n.\nThus, transactiontx\n ̃\ni\nwould not be included in any block\nafter receiving the correspondingsignal, which contradicts the\nprevious assumption. The proof is thus completed.\u0002\nIn the condition\u0005<f\nm\n/f\n1\nin Theorem 4,\u0005denotes the\nfalse positive probability of the Bloom filter,f\n1\ndenotes the\nhighest transaction fee, andf\nm\ndenotes the lowest transaction\nfee. This condition implies that when the spread of the trans-\naction fee is large, we need a Bloom filter with high precision,\ni.e., low false positive probability, to achieve the equilibrium\nstrategy in Theorem 4. Intuitively, when\u0005<f\nm\n/f\n1\n, once a\ntransactioniwith feef\ni\n(f\nm\n≤f\ni\n≤f\n1\n)hits the Bloom filter,\nits expected value will be updated to\u0005f\ni\n,where\u0005f\ni\n<f\nm\n.\nIn this case, other miners would avoid including transaction\niin their newly-mined block, and thus the equilibrium strat-\negy in Theorem 4 holds.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "3692IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 3.  Distribution of transaction fees in Bitcoin.\nRemark  (TIPS  Shortens  Effective  Network  Delay):Com-\npared with the equilibrium in Theorem 1, we find that in\nTIPS, after the time periodτof the signal propagation, the\ntransactions included in the newly-mined block will not be\nincluded by any rational miner. Therefore, TIPS shortens the\neffective network propagation delay from the block broadcast\ntimeΔto the drastically smaller signal broadcast delayτ\n(τ\tΔ), because as mentioned in Section III-A, the size\nof the signal can be smaller than1/100the size of the whole\nblock. The equilibrium in Theorem 4 holds in TIPS when the\nBloom filter’s false positive is small enough, i.e.,\u0005<f\nm\n/f\n1\n.\nThis implies that when the Bloom filter’s false positive is small\nenough, the signal in TIPS can provide information which\nis precise enough for miners to avoid transaction collisions.\nWe will next show that this condition on the Bloom filter is\nnot restrictive in real-world blockchain systems.\nTo see that the condition of\u0005<f\nm\n/f\n1\nis practical,\nwe collect the data from Bitcoin [19] and investigate the\ndistribution of the transaction fees. Bitcoin admits one of the\nmost popular blockchain transaction markets, thus, we believe\nthat the transaction fee statistics in Bitcoin is representative\nenough. We find that in realistic blockchain systems like\nBitcoin, there exist few transactions with unnecessarily high\ntransaction fees and few transactions with extremely low trans-\naction fees. To avoid the impact of this abnormal transaction\nfee, we focus on the 90th percentile and the 10th percentile\nfor transaction fees of the transactions included in the block,\nwhich is visualized in Figure 3. We have that\nω=min\n10th percentile\n90th percentile\n=0.0304.\nAs mentioned in Section III-A, if we allocate 8 bits in the\nBloom filter for a transaction in the pool, i.e.,b/n=8,\nthe false positive probability\u0005=0.0217, which is smaller\nthanωdefined above. This implies that the condition that the\nfalse positive probability of the Bloom filter should be small\nenough, i.e.,\u0005<f\nm\n/f\n1\n, in Theorem 4, is  almost always\nsatisfied in real-world blockchain systems. Hence, we consider\na scenario where the condition\u0005<f\nm\n/f\n1\nis always satisfied\nin the following discussions.\nB. Approaching TopnStrategy\nHere, we will show that by lowering the effective network\ndelay, the equilibrium transaction inclusion strategy in TIPS\napproaches to the topnstrategy, which makes it possible for\nTIPS to break down the dilemmas in DAG-based blockchain.\nWe first show that the topnstrategy in TIPS is an\nη-approximate Nash equilibrium strategy, andηrepresents the\ngap between the topnstrategy and the equilibrium strategy.\nTheorem 5:  Thetopnstrategy,i.e.,p\ntop\nisan\nη-approximate Nash equilibrium, where\nη≤\n\u0010\n\u0010\n\u0010\n\u0010\nn\n\n\n1−\n1−e\n−λτ\nλτ\n\u000b\nf\nn\n\u0010\n\u0010\n\u0010\n\u0010\n.\nThe equation holds if and only if the transactions are homo-\ngeneous, that is, the transaction fees are the same. Specially,\nwhenτ→0,thetopnstrategy is the Nash equilibrium.\nFor convenience, we denote thatg(τ)=1−\n1−e\n−λτ\nλτ\n.Note\nthatg(τ)is monotonically increasing inτ, which implies\nthat the extra revenue from deviating from the topnstrategy\nwill decrease as the effective propagation delay becomes\nsmaller and the equilibrium transaction inclusion strategy will\ngradually converge to the topnstrategy. The effective network\npropagation delay in TIPS isτ, which is drastically small\nenough. Therefore, the topnstrategy in TIPS is a good\napproximation equilibrium strategy. Besides, we show that\nwhen the effective network propagation delayτis smaller\nenough, the topnstrategy in TIPS can be the unique equilib-\nrium strategy, which is shown in the following theorem.\nTheorem 6:  The topnstrategy, i.e.,p\ntop\nis the unique Nash\nequilibrium when\nτ≤\n1\nλ\nφ\n−1\n\n\nf\nn+1\nf\nn\n\u000b\n,(2)\nwhereφ(x)=\n1−e\n−x\nx\n, andφ\n−1\n(x)is its inverse function.\nTheorem 5 and Theorem 6 show that the topnstrategy is\nvery possible to be the equilibrium strategy in TIPS, and is\nat least a good approximation transaction inclusion strategy,\nbecause the effective network propagation delay in TIPSτis\ndrastically small enough since we only need to broadcast a\nsmall-size signal. Therefore, we adopt the topnstrategy in\nTIPS in the following analysis.\nC. Breaking Down the Revenue Dilemma\nThe analysis above shows that breaking down the revenue\ndilemma, i.e., achieving the topnstrategy, is difficult, because\nthe topnstrategy is the Nash equilibrium strategy only\nif the network delay is very small. This is not practical in\nthe standard protocol (i.e., without TIPS) since broadcasting\nthe whole block in the blockchain network takes a long\ntime. However, TIPS drastically lowers the effective network\npropagation delay, making the topnstrategy feasible, which\nbreaks down the revenue dilemma.\nFigure 4 shows the comparison of equilibrium strategies\nwith TIPS and the standard protocol, under a moderate para-\nmeterτ=0.01Δ, while the Bloom filter is usually much\nless than1%of the size of the block body (See Section V\nfor detailed experiment set up). Figure 4 greatly supports\nthat the topnstrategy is a good approximation transaction\ninclusion strategy in TIPS, while the equilibrium strategy in\nthe standard protocol (i.e., without TIPS) gradually converges\nto the random strategy when the network propagation delay is\nlarge.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3693\nFig. 4.  Equilibrium strategy with different network propagation delay.\nTo demonstrate the efficiency of TIPS under the revenue\ndilemma, we investigate the performance of the equilibrium\nstrategy under TIPS as follows.\nDefinition 2:  The  efficiency  of  the  equilibrium  strategy  of\nthe transaction inclusion game in the DAG-based blockchain\nunder  the  revenue  dilemma  is  defined  as  the  ratio  of  the\nminers’  revenueRunder  the  equilibrium  strategy  of  the\ntransaction  inclusion  game  and  the  highest  miners’  revenue\nachieved by any transaction inclusion strategy, which is shown\nas follows:\nEfficiency(R) =\nRevenue of Equilibrium\nRevenue of optimal strategy\n.(3)\nThen we have the following result, which can demonstrate\nthe high efficiency of TIPS.\nTheorem 7:  The efficiency of the equilibrium strategy of the\ntransaction inclusion game in the DAG-based blockchain with\nTIPS under the revenue dilemma is\nEfficiency(R)≥\n(1−e\n−λτ\n)\n\u0004\n\n\nm\nn\n\u000b−\n\u0002\n\u0005\nm\nn\n\u0006\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n\u0005\n.\nAccording  to  Theorem  7,  we  have  thatlim\nτ→0\nEfficiency(R)=1. This is because whenτ→0,the\ntopnstrategyp\ntop\nis the unique Nash equilibrium as\nshown in Theorem 6. Besides, based on Lemma 1, we have\nlim\nΔ=τ→0\nR(p\ntop\n)=\n\u0002\nn\ni=1\nf\ni\n, which implies that the miner\ncan also obtain the highest transaction fee reward. Thus TIPS\ncan achieve a near-optimal miners’ revenue, and therefore can\nefficiently break down the revenue dilemma.\nD. Breaking Down the Throughput Dilemma\nTIPS breaks the throughput dilemma by avoiding collision\nthrough quickly delivering a small signal to the network.\nAs mentioned in Section III-A, the size of the Bloom filter is\nmuch smaller compared to the block size, and it is independent\nto the transaction size. In this case, we can increase the block\nsize, while the broadcast time of the signal remains almost the\nsame. Since TIPS greatly shortens the effective network delay,\naccording to Theorem 3, a smaller network effective delayΔ\ncontributes to a high block capacity utilization and thus a high\nsystem throughput. This makes it possible to contain more\ntransactions in the block (i.e., a largern) without significantly\nsacrificing the block capacity utilization. Thus, TIPS can break\ndown the throughput dilemma.\nFrom Theorem 3, we know that the system throughput\nincreases with a large block sizen. To further observe the\nimpact of TIPS on the system throughput, we consider the\nlimit of throughput, that is, the maximum throughput that\nthe system can achieve by increasing the block size, i.e.,\nlim\nn→∞\nTPS(p,n). We denoteΔ(n)as the network propa-\ngation delay for a block of sizen. As discussed in Section IV-\nB, with the introduction of TIPS,the equilibrium transaction\ninclusion strategy approach to the topnstrategy, i.e.,p\ntop\n.\nThus, we consider the limit of throughput when the miners\ntake the topntransaction inclusion strategy in the following\nlemma.\nLemma 2:  The   limit   of   throughput   of   the   DAG-based\nblockchain with the topntransaction inclusion strategyp\ntop\nis\nlim\nn→∞\nTPS(p\ntop\n,n) =  lim\nn→∞\n1\ndΔ(n)\ndn\n,\nwhere\ndΔ(n)\ndn\nis the derivative ofΔ(n).\nIn Lemma 2,\ndΔ(n)\ndn\ndenotes the marginal network propaga-\ntion time due to an extra transaction in the block. Empirical\nresults show that the marginal network propagation time for\neach KB of data is a constant, e.g., 80ms for each extra KB\nof Bitcoin block [20]. We compared the limit of throughput\nof TIPS and the standard protocol below.\nlim\nn→∞\nTPS\nTIPS\n(p\ntop\n,n)\nlim\nn→∞\nTPS\nStandard\n(p\ntop\n,n)\n=\nlim\nn→∞\n1\ndτ(n)\ndn\nlim\nn→∞\n1\ndΔ(n)\ndn\n= lim\nn→∞\ndΔ(n)\ndn\ndτ(n)\ndn\n=\ntransaction size\nςbits\n,(4)\nwhereςdenotes the number of bits per transaction in the\nBloom filter. In (4), we see that the throughput ratio between\nthe standard protocol and TIPS is essentially the ratio between\nthe size of the needed broadcast for a marginal transaction.\nThus, the standard protocol is limited by the broadcast of the\nadditional transaction, while TIPS is limited only by the broad-\ncast of its signal (with a much smaller data size). Practically,\na Bloom filter withς=b/n=8can achieve a false positive\nprobability of2.17%, which is practical enough in TIPS. While\nthe average transaction size in Bitcoin is 500 KB. Therefore,\ntheoretically, the ratio of the limit of throughput in TIPS and\nthe standard protocol can be as large as5×10\n5\n. This huge\nratio shows the potential of TIPS in breaking the throughput\ndilemma.\nFigure 5 shows that increasing the block size will drastically\nreduce the block capacity utilization due to the increasing\ntransaction inclusion collision and that the low utilization\nfurther limits the system throughput. However, by broadcasting\nthe almost accurate signal from the most recent header in\na short time, TIPS efficiently avoids transaction inclusion\ncollision, contributing to a high utilization, and thus greatly\nboosts the system throughput.\nTo further demonstrate the efficiency of TIPS under the\nthroughput dilemma, we investigate the performance of the\nequilibrium strategy of the transaction inclusion game with\nTIPS as follows.\nDefinition 3:  The  efficiency  of  the  equilibrium  strategy  of\nthe transaction inclusion game in the DAG-based blockchain\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "3694IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nFig. 5.  Breaking down the throughput dilemma with TIPS.\nunder  the  throughput  dilemma  is  defined  as  the  ratio  of  the\nTPS  under  the  equilibrium  strategy  of  the  transaction  inclu-\nsion  game  and  the  highest  TPS  achieved by  any  transaction\ninclusion strategy, which is shown as follows:\nEfficiency(TPS) =\nTPS of Equilibrium\nTPS of optimal strategy\n.(5)\nThen we have the following results.\nTheorem 8:  The efficiency of the equilibrium strategy of the\ntransaction inclusion game in the DAG-based blockchain with\nTIPS under the throughput dilemma is\nEfficiency(TPS)≥\n(1−e\n−λτ\n)\n\u0004\n\n\nm\nn\n\u000b−\n\u0002\n\u0005\nm\nn\n\u0006\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n\u0005\n.\nAccording  to  Theorem  8,  we  have  thatlim\nτ→0\nEfficiency(TPS)=1, which is consistent with Theorem 3.\nIn Theorem 3, we havelim\nΔ=τ→0\nU(p)=1, which implies\nthat TIPS can achieve an extremely high block capacity\nutilization. Thus, TIPS can achieve near-optimal TPS, and\ntherefore can efficiently break down the throughput dilemma.\nV. E\nXPERIMENTRESULTS\nIn this section, we conduct experiments to demonstrate the\nperformance of TIPS and validate our analysis.\nWe develop a DAG-based blockchain simulator in Python\nusing SimPy [21]. We implement the basic inclusive proto-\ncol [5] in the simulator, which is one of the most famous DAG-\nbased blockchain protocols. The implementation is sufficiently\nrepresentative because TIPS is a robust “add-on” design, which\ncan be applied to most of the current DAG-based blockchain\nprotocols, such as Conflux [22] and CDAG [11]. We have real-\nized all designed protocols in TIPS in the simulator, including\nthe block propagation model, the construction and validation\nof the Bloom filter, the operation of maintaining the expected\nvalue of the transactions in the transaction pool, and different\ntransaction inclusion strategies. We use a Python package\n“pybloom-live” [23] as the implementation of the Bloom filter\nFig. 6.  Utilization of different transaction inclusion protocols.\nFig. 7.  TPS of different transaction inclusion protocols.\ndata structure in the TIPS. There are 10 homogeneous miners\nin the simulators, which are connected to a P2P network.\nEach miner will maintain a local version of the transaction\npool and will select some transactions in the pool based on\nthe given transaction inclusion strategy. With this simulator,\nwe  will compare the system performance of the standard\ninclusive protocol (without TIPS), and protocol with TIPS\nunder different transaction inclusion strategies.\nThe experimental configuration is as follows. We set the\nblock size to be 1MB, which is the current block size limitation\nin Bitcoin. With the average transaction size being 500 bytes,\nwe put 2000 transactions in one block, i.e.,n=  2000.\nBesides, we assume the size of the transaction pool to be\nm= 10000. The propagation delay for the whole block is\na random variable following the normal distribution with the\nexpectation asΔ=10, and the propagation delay for the\nsignal is a random variable following the normal distribution\nwith the expectation asτ=0.1. The block generation rate\nof the DAG-based blockchain systemλranges from 0.1 to 1.\nThe arrival of the transaction follows the Poisson process with\nthe transaction fee drawn uniformly from[0,1].\nIn Figure 6 to Figure 9, results ofp\ntop\n,p\npriority\n,p\nrand\nand\np\n∗\ncorrespond to the cases when all miners adopt strategies\np\ntop\n,p\npriority\n,p\nrand\nand the equilibrium strategy in the\nstandard protocol, respectively. Meanwhile, results ofp\n∗\nsignal\nandp\ntop\nsignal\nrepresent the cases when all miners adopt the equi-\nlibrium strategy and thep\ntop\nstrategy in TIPS, respectively.\nFrom Figure 6, we can find that TIPS always achieves high\nutilization and the utilization in TIPS is not sensitive to the\nincrease of the block generation rate. This is because in the\nstandard protocol, a higher block generation rate means that\nmore blocks will be generatedduring the network propagation\ndelayΔ, leading to more transaction inclusion collisions\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3695\nFig. 8.  Miners’ revenue of different transaction inclusion protocols.\nFig. 9.   Average transaction confirmation time under different transaction\ninclusion protocols.\nand lower block capacity utilization. This phenomenon is\nalso consistent with Theorem 3, where the utilizationUis\nmonotonically decreasing with the generation rateλwhen\nother parameters are fixed. On the contrary, since TIPS\ndrastically lowers the effective network propagation delay,\nit efficiently avoids the transaction inclusion collision and\ngreatly improves the utilization.\nFigure 7 shows the system throughput (TPS) of different\ntransaction inclusion protocols, from which we find that the\nthroughput increases with the block generation rate. This is\nconsistent with Theorem 3, i.e., the system throughput (TPS)\nis monotonically increasing with the block generation rateλ.\nBesides, from Figure 7, we can also find that TIPS can always\nachieve a higher system throughput compared to the standard\nprotocol, which demonstratesthat TIPS effectively breaks\ndown the throughput dilemma. This is because TIPS greatly\nimproves the block capacity utilization as shown in Figure 6,\nand therefore can process more distinct transactions than the\nstandard protocol.\nFigure 8 shows that TIPS can achieve a significantly higher\nminers’ revenue compared to the standard protocol. This is\nbecause transaction inclusion collision will split the transaction\nfee reward and thus lower the miners’ revenue. Besides, the\nminers’ collision-avoiding transaction inclusion strategies in\nthe standard protocol tend to include cheap transactions, which\nalso hurts miners’ revenue. In the meantime, TIPS avoids\nthe transaction inclusion collision and encourages miners to\ninclude the transactions with the highest fees, which improves\nthe miners’ revenue. This validates the claim that TIPS can\neffectively break down the revenue dilemma.\nFigure 9 shows the average transaction confirmation time\nfor transactions with different transaction fees. Firstly, the\naverage transaction confirmation time in TIPS is significantly\nshorter than that of other protocols. This is because TIPS can\nachieve a higher system throughput, which means that more\ntransactions can be processed in a short time. Secondly, TIPS\nFig. 10.   Experimental results with different Bloom filters’ false positive\nprobabilities.\nguarantees that the transactions with higher transaction fees\ncan be confirmed in a shorter time, since TIPS encourages the\nminers to include the transactions with the highest fees. The\nabove two properties of TIPS together guarantee a good user\nexperience.\nBesides, we further investigate the impact of the Bloom\nfilter’s false positive probability, which is shown in Figure 10.\nWe can find that a small Bloom filter has a high probability\nof false positive, and can be broadcast to the network in a\nshort time, but will lead to the following drawbacks: (1) When\nthe false positive probability is high, there are a number of\ntransactions that hit the Bloom filter but are not included in\nthe block. These transactions need to wait for a long time\nto be included in a block, so as some transactions with high\ntransaction fees, which will degrade the system performance\nwith lower miners’ revenue; (2) When the false positive\nprobability is high, the expected value of the transactions with\nhigh transaction fee may be still high, and therefore, other\nminers are motivated to include these transactions, which will\nincrease the transaction inclusion collision and degrade the\nsystem throughput. This is the reason why the miners’ revenue\ndecreases gradually with the increase of the Bloom filter’s false\npositive probability.\nOn the other hand, a Bloom filter with a low false positive\nprobability will correspondingly have a large size, leading\nto a long time to broadcast the signal. Thus, it may have\na higher probability of transaction inclusion collision, which\nwill degrade the system throughput. Therefore, it is important\nto figure out the optimal configuration of the Bloom filter.\nAs shown in Figure 10, the Bloom filter with false positive\nprobability as “0.02” can achieve the good performance.\nVI. S\nECURITYDISCUSSIONS\nIn this section, we consider several possible security threats\ncaused by TIPS in DAG-based blockchain and show that TIPS\ncan maintain the system security in long term. Based on\nthe aforementioned design, we know that the miner can not\nconstruct a misleading signaleasily since each signal contains\na PoW in the block header. We are going to analyze two\npossible security threats including the denial of service attack\nand the delay of service attack.\nA. Denial of Service Attack\nThere are two types of denial of service attacks in TIPS.\n1) BDoS:[24]. BDoS is an incentive attack where an\nadversary can manipulate miners’ incentives by broadcasting\nthe block header without publishing the block. However, the\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "3696IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\n“BDoS” attack is infeasible in TIPS due to the following\nreason. Miners can still obtain ahigh reward without referring\nto the latest block. Furthermore, there is a hard-coded timeout\nfor the block header, which can further defend against the\nBDoS attack.\n2) Signal Flood:Another possible attack is that the attacker\ncan broadcast a signal with lots of bits of Bloom filter set to 1\nto lower the expected value of transactions, which can reduce\nthe miners’ expected reward (even less than the mining cost),\nand motivate other miners to stop mining.\nLuckily, we can defend against this attack efficiently by\nchecking the number of bits set to 1 in the Bloom filter and\nrejecting the Bloom filter with too many bits set to 1 when\nreceiving the block header. To see this, we propose a detection\nindicator of the Bloom filter, which is analyzed as follows.\nAfterntransactions have been added to the Bloom filter, letq\nbe the fraction of thebbits that are set to 0, i.e., the number of\nbits still set to 0 isqb. The probability that allhhash functions\nfind that their bits are set to 1 is(1−q)\nh\n. Therefore, the\nexpectation ofqis\nE(q)=\n\n\n1−\n1\nb\n\u000b\nhn\n.\nAccording to [25], we have\nP\n\n\nE(q)−q≥\nξ\nm\n\u000b\n≤exp(−2ξ\n2\n/kn).\nA Bloom filter with too many bits set to 1 will be rejected. Let\nηbe the probability of rejecting a valid Bloom filter. LetXbe\nthe number of bits that are set to 1 in the Bloom filter. Then\nthe Bloom filter will be rejected if the following condition\nholds:\nX≥b−b\n\n\n1−\n1\nb\n\u000b\nhn\n+\n\u0011\n−\n1\n2\nhnlnη.(6)\nAs an example, for a Bloom filter withb= 20000bits,\nk=5hash functions andn= 2000transactions included,\nif the probability of rejecting a valid Bloom filter is0.01%,\na Bloom filter will be rejected if the number of bits that are\nset to 1 is greater than 9535, while the expectation of the\nnumber of bits that are set to 1 for a valid Bloom filter is 7869,\nwhich indicates the high sensitivity and accuracy of detection\nindicator (6). Besides, this extra validation is computationally\ncheap. Condition (6) can be pre-computed and store in the\nmemory. Even with simple implementation on a PC, the time\nto check the validation of Bloom filter is 1μs(i.e., 0.99ms\nper 1000 Bloom filters on a single core). Therefore, TIPS can\nefficiently defend against this attack.\nB. Delay of Service Attack\nThe traditional delay of service attack in DAG-based\nblockchain has been discussed in [5]. Different from the\ntraditional attack, there exists another delay of service attack\nin TIPS.\nIn TIPS, the attacker can delay the successful record of\na transactiontx\ni\nby continuously mining a valid block that\nincludes this transaction, but only broadcast the signal without\nthe whole block. This attack will motivate other miners to\navoid including the transactiontx\ni\nin their blocks because\nthe signal sent by the attacker will lower the expected value\nof transactiontx\ni\n. However, once the signal is expired, other\nminers will have the motivation to include the transactiontx\ni\nin the block again. Once other miners include the transaction\ntx\ni\n, this delay of service attack is terminated.\nTo achieve tractable analysis, we consider the following\nscenario. The expirationtime for a block header isT.The\nfraction of the computing power of the attacker isα. To delay\nthe transaction as long as possible, the attacker needs to keep\nmining new blocks containing the same transaction before the\nsignal is expired. Denote the expected delay time after the\nattacker initiates this attack asE(D). If the attacker mines a\nnew block at timet<Tbefore the previous signal is expired,\nhe can delay the transaction with extraE(D)time. Otherwise,\nhe can only delay at most the expiration timeT.Thenwehave\nE(D)=\n\u0012\nT\n0\n(t+E(D))αλe\n−αλt\ndt+\n\u0012\n∞\nT\nTαλe\n−αλt\ndt.\nSolving the above equation, we haveE(D)=\n(\ne\nαλT\n−1\n)\nαλ\n.\nTherefore, the expected delay time is\nDelay(α)=αE(D)=\n1\nλ\n\u000e\ne\nαλT\n−1\n\u000f\n,\nwhich implies that the expected delay time for this attack is\nlimited, because generally the expiration time for the block\nheaderTis small. From the attacker’s perspective, the attacker\ncan never profit from this delay of service attack. Besides,\nthe longer the attack goes on, the greater its cost. From the\nuser’s perspective, if a user finds his transaction delayed by this\nattack, he can increase the transaction fee using the replace-\nby-fee mechanism [26]. A higher transaction fee will motivate\nother miners to include this transaction and compete against\nthe attacker. Therefore, we can conclude that this attack has an\ninsignificant impact and can be defended against efficiently.\nVII. R\nELATEDWORK\nA. Transaction Inclusion Protocol\nIn the inclusive protocols [5], the authors model the trans-\naction inclusion as a non-cooperative game with imperfect\ninformation, and propose a myopic strategy, which can achieve\nboth high throughput and high quality of service levels.\nConflux [22] models the transaction inclusion as a cooperative\ngame and distributes the transaction fee based on Shapley\nvalue [27]. The existing transaction inclusion protocols can be\nconsidered as the compromise solution facing the dilemmas\nin DAG-based blockchain. Along a different line, we propose\nthe novel protocol, TIPS, which can make a breakthrough in\nthese dilemmas and achieve near-optimal performance.\nB. Header First Propagation\nIn  the  current  blockchain  systems  like  Bitcoin  and\nEthereum, miners generally broadcast the block header before\nbroadcasting the whole block, which can help to avoid the\nrepeated propagation for the same block and thus speed\nup the propagation process [20]. However, this header first\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 12
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3697\npropagation might lead to the SPV mining, which will threaten\nthe system security [24]. In TIPS, we also propagate the\nblock header first but for different purposes. We embedded\nthe “signal” in the block header to avoid transaction inclusion\ncollision and boost the system performance. We also show that\nTIPS can maintain system security in long term.\nC. Bloom Filter in Blockchain\nBloom filter and its variant have been previously adopted\nin the blockchain system as auxiliaries, especially in log\ncheck-up. [28], [29]. In Bitcoin [30], the SPV node can help\nto limit the amount of transaction data they receive from\nfull nodes to those transactions that affect their wallet while\nmaintaining privacy. In Ethereum [31], the Bloom filter of the\nreceipt logs can help nodes to access log data efficiently and\nsecurely. Besides, Bloom filter and its variant like invertible\nbloom lookup table [17] can help to compress the block size.\nTo compress the block in blockchain system, the false positive\nprobability of the Bloom filter in [17] and [32] should be small\nenough, which will lead to a large size of Bloom filter. For\nexample, Graphene’s block announcements are1/10the size\nof the whole blocks [32].\nDifferent from previous work, the Bloom filter plays a\ncrucial role in the protocol, serving as a signal in TIPS. Given\nthe compact size of the Bloom filter-based signal, we can\nbroadcast the necessary information to the whole network in\na much shorter time. As mentioned in Section III-A, the size\nof the signal in our protocol can be smaller than1/100the\nsize of the whole block. Furthermore, the mitigation of block\npropagation mentioned in Section III-B also helps to broadcast\nthe signal faster.\nD. Block Transmission Optimization\nTIPS improves the system performance through drastically\nshortening the effective network delay with the signaling\napproach. There are several works focusing on optimizing\nthe block transmission delay, which also helps to shorten the\nnetwork delay. In  [18], the authors propose an accelerated\nmethod for block propagation by selecting proper neigh-\nbors. [33] boosts blockchain broadcast propagation with tree\nrouting. Coded design [34] and compacting technology [32]\nare also used to speed up the block propagation. In fact, TIPS\ncan be used along with these approaches to improve the system\nperformance of the DAG-based blockchain.\nVIII. C\nONCLUSION\nIn this paper, we proposed a novel Transaction Inclusion\nProtocol with Signaling, TIPS, which can explicitly resolve the\ndilemmas in DAG-based blockchain and achieve near-optimal\nperformance while maintaining system security. Both the\ntheoretical analysis and the experimental results significantly\ndemonstrate the high efficiency of TIPS.\nThere are several interesting directions to explore in the\nfuture, such as how to simplify the “signal” and make the\n“signal” broadcast to the whole network faster. Besides, it is\ninteresting to analyze the dynamic game between different\nminers with repeated interaction in the long run considering\nthe tit-for-tat property. Moreover, it is meaningful to provide\ntheoretical analysis for the challenging scenario where the\nnetwork is asynchronous and the miners are heterogeneous.\nA\nPPENDIXA\nP\nROOF OFLEMMA1\nProof:Since the block generation process follows the\nPoisson process with rateλ, the probability of generating\nkmore blocks during the block propagation duration is\n(λΔ)\nk\nk!\ne\n−λΔ\n. Because other miners include transactioniin\ntheir block with a marginal probabilityp\ni\n, the probability\nthat there areιmore miners including the transactioniis\n\u000e\nk\nι\n\u000f\np\nι\ni\n(1−p\ni\n)\nk−ι\n. Therefore, we have\nr(p\ni\n|Δ)\n=\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\nk!\ne\n−λΔ\n\u000b\nk\n\u0003\nι=0\n\n\nk\nι\n\u000b\np\nι\ni\n(1−p\ni\n)\nk−ι\n1\nι+1\n=\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\nk!\ne\n−λΔ\n\u000b\nf\ni\np\ni\n(k+1)\n×\nk\n\u0003\nι=0\n(k+1)!\n(ι+1)!(k−ι)!\np\nι+1\ni\n(1−p\ni\n)\nk−ι\n=\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\nk!\ne\n−λΔ\n\u000b\nf\ni\np\ni\n(k+1)\n\u000e\n1−(1−p\ni\n)\nk+1\n\u000f\n=\n1\np\ni\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\n(k+1)!\ne\n−λΔ\n−\n(λΔ)\nk\n(1−p\ni\n)\nk+1\n(k+1)!\ne\n−λΔ\n\u000b\n=\n1\np\ni\n\n\n1−e\n−λΔ\nλΔ\n−\ne\n−λΔp\ni\n−e\n−λΔ\nλΔ\n\u000b\n=\n\u000e\n1−e\n−λΔp\ni\n\u000f\nλΔp\ni\n.\nThen given that other miners include transactioniin\ntheir blocks with the probabilityp\n\u0002\ni\n, the miner’s revenue on\none block with strategypisR(p|p\n∗\n)=\n\u0002\nm\ni=1\np\ni\nf\ni\nr(p\n∗\ni\n).\nTherefore, when all the miners adopt the symmetric transaction\ninclusion strategyp, we know that the miners’ revenue is\nR(p)=R(p|p)=\n\u0002\nm\ni=1\np\ni\nf\ni\nr(p\ni\n|Δ).The proof is thus\ncompleted.\u0002\nA\nPPENDIXB\nP\nROOF OFTHEOREM2\nProof:Based on Lemma 1, the expectation of total\ntransaction fee reward of a miner who adopts inclusion strategy\npgiven that other miners adopt the strategyp\nrand\nis\nR(p|p\nrand\n)=\nm\n\u0003\ni=1\np\ni\nf\ni\nr,wherer=\n1−e\n−λΔ\nn\nm\nλΔ\nn\nm\n.\nThen we have\nmax\np∈P\nR(p|p\nrand\n)−R(p\nrand\n)\n=R(p\ntop\n|p\nrand\n)−R(p\nrand\n)\n=r\nn\n\u0003\ni=1\nf\ni\n−\nn\nm\nr\nm\n\u0003\ni=1\nf\ni\n=\n1−e\n−λΔ\nn\nm\nλΔ\nn\nm\n\f\n1\nn\nn\n\u0003\ni=1\nf\ni\n−\n1\nm\nm\n\u0003\ni=1\nf\ni\n\r\n.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 13
      }
    }
  },
  {
    "pageContent": "3698IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nBesides, we denoteh(Δ)  =\n1−e\n−λΔ\nn\nm\nλΔ\nn\nm\n. Note thath(Δ)\nis monotonically decreasing inΔ. Specially, we have that\nlim\nΔ→∞\nh(Δ)  =  0. Therefore, whenΔ→∞, the ran-\ndom strategy is the Nash equilibrium. The proof is thus\ncompleted.\u0002\nA\nPPENDIXC\nP\nROOF OFTHEOREM3\nProof:During the propagation timeΔ, the miner who\nmines the new block will broadcast it to the network, with\nother miners keep mining without any notification of the latest\nblock. The probability of other miners to minekmore blocks\nduring the block propagation time is\nP(k,Δ) =\n(λΔ)\nk\nk!\ne\n−λΔ\n.(7)\nFor convenience, we define that\nδ\ni\n=\n⎧\n⎪\n⎨\n⎪\n⎩\n1,thei-th transaction is included in one of\nthe blocks,\n0,otherwise.\nThen the probability that thei-th transaction in the transaction\npool is included byk+1miners in their blocks is\nP(δ\ni\n=1,k+1)=1−(1−p\ni\n)\nk+1\n.\nTherefore, the expected number of transactions included\nduring  the  propagation  time  with  additionalkblocks\nemerging is\nE(X, k)=E\n\f\nm\n\u0003\ni=1\nP(δ\ni\n,k)\n\r\n=\nm\n\u0003\ni=1\n\u0004\n1−(1−p\ni\n)\nk+1\n\u0005\n.\nTherefore, the average block capacity utilization in long\nterm is\nU(p)=\n\u0002\n∞\nk=0\n\u0004\n(λΔ)\nk\nk!\ne\n−λΔ\n\u0005\nE(X, k)\n\u0002\n∞\nk=0\n\u0004\n(λΔ)\nk\nk!\ne\n−λΔ\n\u0005\n(k+1)n\n=\n\u0002\n∞\nk=0\n\u0004\n(λΔ)\nk\nk!\ne\n−λΔ\n\u0005\n\u0002\nm\ni=1\n\u0004\n1−(1−p\ni\n)\nk+1\n\u0005\n\u0002\n∞\nk=0\n\u0004\n(λΔ)\nk\nk!\ne\n−λΔ\n\u0005\n(k+1)n\n=\ne\n−λΔ\n\u0002\nm\ni=1\n\u0002\n∞\nk=0\n\u0004\n(λΔ)\nk\nk!\n−\n(1−p\ni\n)(λΔ(1−p\ni\n))\nk\nk!\n\u0005\nn(λΔ+1)\n=\nm−\n\u0002\nm\ni=1\n(1−p\ni\n)e\n−λΔp\ni\nn(λΔ+1)\n.\nThus, the throughput of the DAG-based blockchain is\nTPS(p)=λnU(p)=\nλ\n\u000e\nm−\n\u0002\nm\ni=1\n(1−p\ni\n)e\n−λΔp\ni\n\u000f\n(λΔ+1)\n.\nThe proof is thus completed.\u0002\nA\nPPENDIXD\nP\nROOF OFTHEOREM5\nProof:Based on Lemma 1, the expectation of total\ntransaction fee reward of a miner with transaction inclusion\nstrategyp, given other miners adopt the strategyp\ntop\n,is\nR(p|p\ntop\n)=\n1−e\n−λτ\nλτ\nn\n\u0003\ni=1\np\ni\nf\ni\n+\nm\n\u0003\ni=n+1\np\ni\nf\ni\n.\nIf  the  miner  adopts  the  topnstrategy,  his  expected\nreward is\nR(p\ntop\n)=R(p\ntop\n|p\ntop\n)=\n1−e\n−λτ\nλτ\nn\n\u0003\ni=1\nf\ni\n.\nTherefore, the extra reward that miner can obtain from devi-\nation is\nmax\np∈P\nR(p|p\ntop\n)−R(p\ntop\n)\n≤max\n\u0013\nnf\nn+1\n−n\n1−e\n−λτ\nλτ\nf\nn\n,0\n\u0014\n≤max\n\u0013\nn\n\n\n1−\n1−e\n−λτ\nλτ\n\u000b\nf\nn\n,0\n\u0014\n.\nWe denote thatg(τ)=1−\n1−e\n−λτ\nλτ\n. Note thatg(τ)\nis monotonically increasing inτ. Thus we havelim\nτ→0\ng(τ)=0. Therefore, whenτ→0,thetopnstrategy is the\nNash equilibrium. The proof is thus completed.\u0002\nA\nPPENDIXE\nP\nROOF OFTHEOREM6\nProof:To prove that the topnstrategy is the equilibrium\nstrategy, we only need to prove that given that other miners\nadopt the topnstrategy, the best response of the miner is\nexactly the topnstrategy. Besides, when fixing other miners’\nstrategies, there exists a pure strategy that can be the best\nresponse. Without loss of generality, we consider the scenario\nwhere one miner deviates from the topnstrategy, and selects\nthe transaction setB, while other miners adopt the topn\nstrategy and select the transaction setA={1,2,...,n}.Then\nwe have|A|=|B|=n. Besides, we denote thatn\n1\n=|A∩B|,\nandn\n2\n=|A/(A∩B)|. Thus, we haven\n1\n+n\n2\n=n.Then\nthe expected total transaction fee reward for the miner who\ndeviates from the topnstrategy and includes the transaction\nsetBis\nReward(B)=Tx(B/(B∩A))\n+\n∞\n\u0003\nk=0\n\n\n(λτ)\nk\nk!\ne\n−λτ\n\u000b\nTx(B∩A)\nk+1\n=Tx(B/(B∩A)) +Tx(B∩A)\n1−e\n−λτ\nλτ\n≤\nn\n2\n\u0003\ni=1\nf\nn+i\n+\n1−e\n−λτ\nλτ\nn\n1\n\u0003\ni=1\nf\ni\n,\nand the equality holds whenS∩P={1,2,...,n\n1\n}and\nS/(S∩P)={n+1,n+2,...,n+n\n2\n}.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 14
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3699\nSinceφ(x)is monotonically decreasing, when condition (2)\nholds, we have\n1−e\n−λτ\nλτ\n≥\nf\nn+1\nf\nn\n.\nBesides, sincef\ni+1\n≤f\ni\n,∀i∈{1,2,...,m−1},wehave\nmax\nn\n1\n=0,1,2,...,n\n\u0002\nn−n\n1\ni=1\nf\nn+i\n\u0002\nn−n\n1\ni=1\nf\nn\n1\n+i\n=\nf\nn+1\nf\nn\n.\nTherefore, when condition (2) holds, we have\nn\n2\n\u0003\ni=1\nf\nn+i\n≤\n1−e\n−λτ\nλτ\nn\n2\n\u0003\ni=1\nf\nn\n1\n+i\n,\nwhich implies that\nn\n2\n\u0003\ni=1\nf\nn+i\n+\n1−e\n−λτ\nλτ\nn\n1\n\u0003\ni=1\nf\ni\n≤\n1−e\n−λτ\nλτ\nn\n\u0003\ni=1\nf\ni\n.\nTherefore,  we  have  Reward(B)≤Reward(A),which\nimplies thatR(p\ntop\n)≥max\np∈P\nR(p|p\ntop\n). Thus, the top\nnstrategy is a Nash equilibrium under the condition (2).\nFurthermore, we can find that the topnstrategy strictly\ndominates other strategies. Therefore, it is the unique Nash\nequilibrium.\u0002\nA\nPPENDIXF\nP\nROOF OFTHEOREM8\nProof:For convenience, we denotep\n∗\nas the equilibrium\nstrategy in the transaction inclusion game. Since the utiliza-\ntion of blocks could not greater than 1, i.e.,U\noptimal\n≤1,\nwe have\nTPS\noptimal\n=λnU\noptimal\n≤λn.\nBesides, the TPS of the equilibrium strategy is greater or equal\nto the TPS of the topnstrategy,p\ntop\n,thenwehave\nTPS(p\n∗\n)≥TPS(p\ntop\n)=\nλn\nλτ+1\n.\nTherefore, we have\nEfficiency(TPS)=\nTPS(p\n∗\n)\nTPS\noptimal\n≥\nλn\nλτ+1\nλn\n=\n1\nλτ+1\n.\nThe proof is thus completed.\u0002\nA\nPPENDIXG\nP\nROOF OFLEMMA2\nProof:For the topntransaction inclusion strategy,\nwe have thatp\n1\n=p\n2\n=···=p\nn\n=1andp\nn+1\n=p\nn+2\n=\n···=p\nm\n=0. According to Theorem 3, we have\nlim\nn→∞\nTPS(p\ntop\n,n)\n=  lim\nn→∞\nλ\n\u000e\nm−\n\u0002\nm\ni=1\nλ(1−p\ni\n)e\n−λΔ(n)p\ni\n\u000f\n(λΔ(n)+1)\n=  lim\nn→∞\nλ\n\f\nm−\nm\n\u0003\ni=1\nλ(1−p\ni\n)e\n−λΔ(n)p\ni\n\r\n/(λΔ(n)+1)\n=  lim\nn→∞\nλ\n(λΔ(n)+1)\n\f\nm−\nn\n\u0003\ni=1\nλ(1−1)e\n−λΔ(n)1\n−\nm\n\u0003\ni=n+1\nλ(1−0)e\n−λΔ(n)0\n\r\n=  lim\nn→∞\nλn\nλΔ(n)+1\n=\n1\ndΔ(n)\ndn\n(Using the L’Hospital’s rule)\nThe proof is thus completed.\u0002\nA\nPPENDIXH\nP\nROOF OFTHEOREM7\nBefore proving Theorem 7, we first introduce a new metric\n“Fee Service Rate” (FSR), and then show the relation between\nthe miners’ revenue and FSR, finally we can prove Theorem 7\nthrough the analysis of FSR.\nFee service rate (FSR) is defined as the total transaction fee\nthat the blockchain system processes per second. A high FSR\nimplies a high system profit and a good market efficiency in\nthe blockchain system.\nProposition 1:  The   fee   service   rate   of   the   DAG-based\nblockchain  given  the  transaction  inclusion  strategy  beingp\nand the network propagation delay of a block beingΔis\nFSR(p)=\n1\nΔ\nm\n\u0003\ni=1\nf\ni\n\u000e\n1−e\n−λΔp\ni\n\u000f\n,(8)\nwhereλis the block generation rate in the blockchain system.\nProof:The expectation of the total transaction fees of the\ntransactions included in blocks on the condition that there are\nkblocks emerging during the network propagation duration is\nE(Y, k)=E\n\f\nm\n\u0003\ni=1\nP(δ\ni\n,k)f\ni\n\r\n=\nm\n\u0003\ni=1\n\u0004\n1−(1−p\ni\n)\nk\n\u0005\nf\ni\n.\nSince the block generation process follows the Poisson process\nwith rateλ, the probability that there arekblocks emerging\nduring the network propagation duration is\n(λΔ)\nk\nk!\ne\n−λΔ\n.There-\nfore, the fee service rate (FSR) is\nFSR(p)=\n1\nΔ\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\nk!\ne\n−λΔ\n\u000b\nE(Y, k)\n=\ne\n−λΔ\nΔ\nm\n\u0003\ni=1\n∞\n\u0003\nk=0\n\n\n(λΔ)\nk\nk!\n−\n(λΔ(1−p\ni\n))\nk\nk!\n\u000b\nf\ni\n=\ne\n−λΔ\nΔ\nm\n\u0003\ni=1\nf\ni\n\u0004\ne\nλΔ\n−e\nλΔ(1−p\ni\n)\n\u0005\n=\n1\nΔ\nm\n\u0003\ni=1\nf\ni\n\u000e\n1−e\n−λΔp\ni\n\u000f\n.\nThe proof is thus completed.\u0002\nCombining Proposition 1 and Lemma 1, we can find that\nthe miners’ revenue is proportional to the FSR, i.e.,R(p)=\nFSR(p)/λ,whereλis the block generation rate. Therefore,\nto prove Theorem 7, we only need to prove that\nEfficiency(FSR)≥\n(1−e\n−λτ\n)\n\u0004\n\n\nm\nn\n\u000b−\n\u0002\n\u0005\nm\nn\n\u0006\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n\u0005\n.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 15
      }
    }
  },
  {
    "pageContent": "3700IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022\nwhereEfficiency(FSR) =\nFSR of Equilibrium\nFSR of optimal strategy\n.The proof\ngoes as follows.\nProof:For convenience, we denotep\n∗\nas the equilibrium\nstrategy in the transaction inclusion game. We consider the\ntotal transaction fees of transactions included in blocks dur-\ning the network propagation delay of signalτ. The highest\npossible FSR can be achieved when there is no transaction\ninclusion collision and the included transactions have the\nhighest transaction fees. Therefore, we have\nFSR\noptimal\n≤\n1\nτ\n∞\n\u0003\nk=0\n⎛\n⎝\n(λτ)\nk\nk!\ne\n−λτ\nmax{kn,m}\n\u0003\ni=1\nf\ni\n⎞\n⎠\n=\n1\nτ\n\f\f\nn\n\u0003\ni=0\nf\ni\n\r\n∞\n\u0003\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n+\n\f\n2n\n\u0003\ni=n+1\nf\ni\n\r\n∞\n\u0003\nk=1\n(λτ)\nk\nk!\ne\n−λτ\n+···+\n⎛\n⎝\nm\n\u0003\ni=n\u0005\nm\nn\n\u0006\nf\ni\n⎞\n⎠\n∞\n\u0003\nk=\u0005\nm\nn\n\u0006\n(λτ)\nk\nk!\ne\n−λτ\n⎞\n⎠\n≤\n1\nτ\nn\n\u0003\ni=0\nf\ni\n⎛\n⎝\n\n\nm\nn\n\u000b−\n\u0005\nm\nn\n\u0006\n\u0003\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n⎞\n⎠\n.\nBesides, sincep\n∗\nis the equilibrium strategy, we have\nR(p\n∗\n|p\n∗\n)=\nm\n\u0003\ni=1\np\n∗\ni\nf\ni\nr(p\n∗\ni\n)≥R(p\n\u0002\n|p\n∗\n)\n=\nm\n\u0003\ni=1\np\n\u0002\ni\nf\ni\nr(p\n∗\ni\n),∀p\n\u0002\n∈P.\nWithout loss of generality, we have\nR(p\n∗\n|p\n∗\n)=\nm\n\u0003\ni=1\np\n∗\ni\nf\ni\nr(p\n∗\ni\n)≥R(p\ntop\n|p\n∗\n)=\nn\n\u0003\ni=1\nf\ni\nr(p\n∗\ni\n).\nSincer(p\n∗\ni\n)is  monotonically decreasing, we have that\nr(p\ni\n)≥r(1). Therefore, we have\nR(p\ntop\n|p\n∗\n)=\nn\n\u0003\ni=1\nf\ni\nr(p\n∗\ni\n)≥R(p\ntop\n|p\ntop\n)=\nn\n\u0003\ni=1\nf\ni\nr(1).\nThus we have that\nR(p\n∗\n)≥R(p\ntop\n)=\nn\n\u0003\ni=1\nf\ni\nr(1) =\n(1−e\n−λτ\n)\nλτ\nn\n\u0003\ni=1\nf\ni\n.\nBesides, we have proved that\nFSR(p\n\u0002\n)=λR(p\n\u0002\n),∀p\n\u0002\n∈P.\nThus, we have\nFSR(p\n∗\n)≥λR(p\ntop\n)=\n(1−e\n−λτ\n)\nτ\nn\n\u0003\ni=1\nf\ni\n.\nTherefore, we have\nEfficiency(FSR)=\nFSR(p\n∗\n)\nFSR\noptimal\n≥\n(1−e\n−λτ\n)\n\u0004\n\n\nm\nn\n\u000b−\n\u0002\n\u0005\nm\nn\n\u0006\nk=0\n(λτ)\nk\nk!\ne\n−λτ\n\u0005\n.\nThe proof is thus completed.\u0002\nR\nEFERENCES\n[1] M. Swan, J. Potts, S. Takagi, F. Witte, and P. Tasca,Blockchain\nEconomics:  Implications  of  Distributed  Ledgers:  Markets,  Communi-\ncations Networks, and Algorithmic Reality. Singapore: World Scientific,\n2019.\n[2] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,\n“Cloud/fog computing resource management and pricing for blockchain\nnetworks,”IEEE  Internet  Things  J., vol. 6, no. 3, pp. 4585–4600,\nJun. 2019.\n[3] J. Kang, Z. Xiong, D. Ye, D. I. Kim, J. Zhao, and D. Niyato, “Toward\nsecure blockchain-enabled Internetof Vehicles: Optimizing consensus\nmanagement using reputation and contract theory,”IEEE  Trans.  Veh.\nTechnol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.\n[4] Q. Zhou, H. Huang, Z. Zheng, and J. Bian, “Solutions to scalability of\nblockchain: A survey,”IEEE Access, vol. 8, pp. 16440–16455, 2020.\n[5] Y. Lewenberg, Y. Sompolinsky, and A. Zohar, “Inclusive block chain\nprotocols,” inProc.  Int.  Conf.  Financial  Cryptogr.  Data  Secur.Berlin,\nGermany: Springer, 2015, pp. 528–547.\n[6] T. Wang, Q. Wang, Z. Shen, Z. Jia, and Z. Shao, “Understanding\ncharacteristics and system implications of DAG-based blockchain in IoT\nenvironments,”IEEE Internet Things J., vol. 9, no. 16, pp. 14478–14489,\nAug. 2022.\n[7] B. Cao et al., “When Internet of Things meets blockchain: Challenges\nin distributed consensus,”IEEE  Netw., vol. 33, no. 6, pp. 133–139,\nNov./Dec. 2019.\n[8] H. Zhang, S. Leng, F. Wu, and H. Chai, “A DAG blockchain-enhanced\nuser-autonomy spectrum sharingframework for 6G-enabled IoT,”IEEE\nInternet  Things  J., vol. 9, no. 11, pp. 8012–8023, Jun. 2022.\n[9] W. Yang, X. Dai, J. Xiao, and H.Jin, “LDV: A lightweight DAG-based\nblockchain for vehicular social networks,”IEEE  Trans.  Veh.  Technol.,\nvol. 69, no. 6, pp. 5749–5759, Jun. 2020.\n[10] Y. Li et al., “Direct acyclic graph-based ledger for Internet of Things:\nPerformance and security analysis,”IEEE/ACM  Trans.  Netw., vol. 28,\nno. 4, pp. 1643–1656, Aug. 2020.\n[11] H. Gupta and D. Janakiram, “CDAG: A serialized blockDAG for\npermissioned blockchain,” 2019,arXiv:1910.08547.\n[12] J. Gobel and A. E. Krzesinski, “Increased block size and bitcoin\nblockchain dynamics,” inProc. 27th Int. Telecommun. Netw. Appl. Conf.\n(ITNAC), Nov. 2017, pp. 1–6.\n[13] B. H. Bloom, “Space/time trade-offs in hash coding with allowable\nerrors,”Commun. ACM, vol. 13, no. 7, pp. 422–426, Jul. 1970.\n[14] A. Hari, M. Kodialam, and T. Lakshman, “ACCEL: Accelerating the\nbitcoin blockchain for high-throughput, low-latency applications,” in\nProc. IEEE Conf. Comput. Commun., Apr. 2019, pp. 2368–2376.\n[15] L. Chen, L. Xu, Z. Gao, A. Sunny, K. Kasichainula, and W. Shi,\n“Nonlinear blockchain scalability: A game-theoretic perspective,” 2020,\narXiv:2001.08231.\n[16] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is\nvulnerable,” inProc. Int. Conf. Financial  Cryptogr.  Data  Secur.Cham,\nSwitzerland: Springer, 2014, pp. 436–454.\n[17] G. Andresen. (2014).O(1)  Block  Propagation. [Online]. Available:\nhttps://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2\n[18] W. Bi, H. Yang, and M. Zheng, “An accelerated method for message\npropagation in blockchain networks,” 2018,arXiv:1809.00455.\n[19]Fees Per Tx (BTC) in Bitcoin Visuals. Accessed: Feb. 10, 2022. [Online].\nAvailable: https://bitcoinvisuals.com/chain-fees-tx-btc\n[20] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin\nnetwork,” inProc. IEEE P2P, Sep. 2013, pp. 1–10.\n[21] N. Matloff, “Introduction to discrete-event simulation and the simpy\nlanguage,” Dept. Comput. Sci., Univ. California Davis, Davis, CA, USA,\nTech. Rep., Aug. 2008, pp. 1–3.\n[22] C. Li et al., “A decentralized blockchain with high throughput and fast\nconfirmation,” inProc. USENIX Annu. Tech. Conf., 2020, pp. 515–528.\n[23]Pybloom-Live   3.1.0. Accessed: Feb. 10, 2022. [Online]. Available:\nhttps://pypi.org/project/pybloom-live/\n[24] M. Mirkin, Y. Ji, J. Pang, A. Klages-Mundt, I. Eyal, and A. Juels,\n“BDoS: Blockchain denial-of-service,” inProc.  ACM  SIGSAC  Conf.\nComput. Commun. Secur., Oct. 2020, pp. 601–619.\n[25] M. Mitzenmacher and E. Upfal,Probability  and  Computing:  Random-\nization  and  Probabilistic  Techniques  in  Algorithms  and  Data  Analysis.\nCambridge, U.K.: Cambridge Univ. Press, 2017.\n[26] E. Elrom, “Bitcoin wallets and transactions,” inThe  Blockchain  Devel-\noper. New York, NY, USA: Springer, 2019, pp. 121–171.\n[27] A. E. Roth,The  Shapley  Value:  Essays  in  Honor  of  Lloyd  S.  Shapley.\nCambridge, U.K.: Cambridge Univ. Press, 1988.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 16
      }
    }
  },
  {
    "pageContent": "CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN3701\n[28] T. Wang, W. Zhu, Q. Ma, Z. Shen, and Z. Shao, “ABACUS: Address-\npartitioned Bloom filter on address checking for UniquenesS in IoT\nblockchain,” inProc. 39th Int. Conf. Comput.-Aided Design, Nov. 2020,\npp. 1–7.\n[29] X. Ma, L. Xu, and L. Xu, “Blockchain retrieval model based on elastic\nBloom filter,” inProc. Int. Conf. Web Inf. Syst. Appl.Cham, Switzerland:\nSpringer, 2019, pp. 527–538.\n[30] S.  Nakamoto,  “Bitcoin:  A  peer-to-peer  electronic  cash  system,”\nManubot, Tech. Rep., 2019.\n[31] G. Wood, “Ethereum: A secure decentralised generalised transaction\nledger,”Ethereum Project Yellow Paper, vol. 151, pp. 1–32, Apr. 2014.\n[32] A. P. Ozisik, G. Andresen, B. N. Levine, D. Tapp, G. Bissias, and\nS. Katkuri, “Graphene: Efficient interactive set reconciliation applied\nto blockchain propagation,” inProc. ACM Special  Interest Group Data\nCommun., 2019, pp. 303–317.\n[33] J. Kan, L. Zou, B. Liu, and X. Huang, “Boost blockchain broadcast\npropagation with tree routing,” inProc.  Int.  Conf.  Smart  Blockchain.\nCham, Switzerland: Springer, 2018, pp. 77–85.\n[34] L. Zhang, T. Wang, and S. C. Liew, “Speeding up block propa-\ngation in blockchain network: Uncoded and coded designs,” 2021,\narXiv:2101.00378.\nCanhui  Chenreceived the B.Eng. degree in soft-\nware engineering  from Sun Yat-sen  University,\nGuangzhou, China, in 2021. He is currently pursuing\nthe master’s degree in computer science with the\nInstitute for Interdisciplinary Information Sciences\n(IIIS), Tsinghua University. His current research\ninterests include blockchain system and game theory.\nXu  Chenreceived the Ph.D. degree in informa-\ntion engineering from The Chinese University of\nHong Kong in 2012. He has worked as a Post-\ndoctoral Research Associate at Arizona State Uni-\nversity, Tempe, AZ, USA, from 2012 to 2014,\nand a Humboldt Scholar Fellow at the Institute\nof Computer Science, University of Goöttingen,\nGermany, from 2014 to 2016. He is currently a Full\nProfessor with Sun Yat-sen University, Guangzhou,\nChina, and the Vice Director of the National and\nLocal Joint Engineering Laboratory of Digital Home\nInteractive Applications. He received the prestigious Humboldt Research\nFellowship awarded by the Alexander von Humboldt Foundation of Germany,\nthe 2014 Hong Kong Young Scientist Runner-Up Award, the 2017 IEEE\nCommunication Society Asia–Pacific Outstanding Young Researcher Award,\nthe 2017 IEEE ComSoc Young Professional Best Paper Award, the Honorable\nMention Award of the 2010 IEEE International Conference on Intelligence\nand Security Informatics (ISI), the Best Paper Runner-Up Award of the 2014\nIEEE International Conference on Computer Communications (INFOCOM),\nand the Best Paper Award of the 2017 IEEE International Conference on\nCommunications (ICC). He is an Area Editor of the IEEE O\nPENJOURNAL\nOF THE\nCOMMUNICATIONSSOCIETYand an Associate Editor of the IEEE\nT\nRANSACTIONS ONWIRELESSCOMMUNICATIONS, the IEEE INTERNET\nOF\nTHINGSJOURNAL, and the IEEE JOURNAL ONSELECTEDAREAS IN\nCOMMUNICATIONSSeries on Network Softwarization and Enablers.\nZhixuan  Fangreceived the B.S. degree in physics\nfrom Peking University, Beijing, China, in 2013,\nand the Ph.D. degree in computer science from\nTsinghua University, Beijing, in 2018. He is cur-\nrently a Tenure-Track Assistant Professor at the\nInstitute for Interdisciplinary Information Sciences\n(IIIS), Tsinghua University. He mainly focuses on\nthe design and analysis of multiagent systems and\nnetworked systems.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:24:31 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Transaction Inclusion Protocol With.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
          "Subject": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
          "Creator": "Aspose Ltd.",
          "Producer": "Aspose.Pdf for .NET 8.3.0; modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20221118163142+05'30'",
          "ModDate": "D:20221121172746-05'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Journal on Selected Areas in Communications;2022;40;12;10.1109/JSAC.2022.3213357",
            "dc:title": "TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain",
            "dc:subject": "Blockchaingame theoryperformance analysis",
            "dc:creator": "Canhui ChenXu ChenZhixuan Fang",
            "prism:publicationname": "IEEE Journal on Selected Areas in Communications",
            "prism:startingpage": "3685",
            "prism:coverdisplaydate": "Dec. 2022",
            "prism:issueidentifier": "12",
            "prism:doi": "10.1109/JSAC.2022.3213357",
            "prism:volume": "40",
            "prism:endingpage": "3701",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 17
      },
      "loc": {
        "pageNumber": 17
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded Decentralized\nLedger via Chained Transaction\nSequences\nZheng Xu\n1,2\n, Rui Jiang\n1,2\n, Peng Zhang\n1,2\n,TunLu\n1,2(\nB\n)\n, and Ning Gu\n1,2\n1\nSchool of Computer Science, Fudan University, Shanghai, China\n{zxu17,jiangr20,zhangpeng\n,lutun,ninggu}@fudan.edu.cn\n2\nShanghai Key Laboratory of Data Science, Fudan University, Shanghai, China\nAbstract.The blockchain has become the most prevalent distributed\nledger (DL). Sharding has emerged as a major solution to the scalabil-\nity bottleneck of DLs. From the underlying data structure of existing\nsharding schemes, although the Directed Acyclic Graph (DAG)-based\ntopology improves the scalability of DLs compared to chained blocks,\nthe security and reliability of consensus mechanisms in DAG-based DLs\nhave not been verified. Moreover, these schemes suffer from high commu-\nnication overhead when scaling out. To address these issues, we propose a\nsharded DL named TxChain, which adopts a novel data structure manip-\nulated by the unit of transaction and constituted by chained transaction\nsequences of each account. TxChain optimistically processes concurrent\ntransactions and ensures the consistency of all shards via transaction\nsequence conversion (TSC)-based consensus mechanism. Shards main-\ntain the full replica of TxChain and execute transactions by trustwor-\nthy validators, which reduce the frequency of communication with other\nshards. We theoretically prove the consistency of shards maintained by\nTSC and demonstrate TxChain’s throughput scales with low latency\nthrough extensive experiments.\n1  Introduction\nBlockchain makes the distributed ledgers (DLs) evolve into a irreversible and\ndecentralized data maintenance technology. Each node in the DL serially pro-\ncesses generated transactions, however, the performance of a single node has\nbecome the throughput bottleneck of the DL. Sharding has become a feasible\nand proven horizontal scaling approach which assigns nodes to multiple shards\nto handle a portion of transactions and enables parallelization of the compu-\ntation and storage in DLs for high throughput. Maintainers of shards process\ntransactions in their local shard and update the state of the entire system.\nThe underlying data of existing sharded DLs is in the structure of chained\nblocks or the Directed Acyclic Graph (DAG). Although DAG-based data struc-\nture can improve the scalability of DLs, it is difficult and unstable to achieve the\nfinal consistency. Moreover, mainstream sharded DLs such as RapidChain [8],\nc\n\u0002The Author(s), under exclusive license to Springer Nature Switzerland AG 2022\nA. Bhattacharya et al. (Eds.): DASFAA 2022, LNCS 13245, pp. 333–340, 2022.\nhttps://doi.org/10.1007/978-3-031-00123-9\n_27",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "334Z. Xu et al.\nOmniLedger [4] and Elastico [5] use the unspent transaction outputs (UTXO)-\nbased transaction model which has weak programmability, high computational\ncomplexity and large storage redundancy. The Byzantine fault-tolerant (BFT)\nconsensus mechanism in these DLs may cause high communication costs when\nthe system scales up. These above problems indicate that existing sharded DLs\nstill have a lot of room for improvement in terms of the data structure and\nparallel processing performance.\nBased on the above problems and challenges, we propose a novel DL named\nTxChain. To achieve high scalability, TxChain processes each transaction unit\nparallelly by selected validators based on sharding technology. Validators exe-\ncute intra-shard transactions instantly in the local shard and broadcast them\nto remote shards. All shards store a full replica of TxChain and collaboratively\nmaintain their states by synchronizing transactions in accounts’ TxSEQs. To\nensure the consistency of all shards, three kinds of transaction dependencies and\na transaction sequence conversion (TSC)-based consensus mechanism are pro-\nposed to determine the ordinal relationship between transactions. Based on this\nconsensus mechanism, TxSEQs can have the same transaction order among dif-\nferent shards in accordance with the original dependency. Moreover, to optimize\nthe latency of processing transactions, honest and trustworthy validators are\nselected according to their stake ratio and are protected by the trusted execu-\ntion environment (TEE), which reduce the communication overhead of TxChain\ncompared to BFT-based DLs. Besides, the modification of each shard can be\ncompletely and consistently recorded in each replica, thus a transaction can be\nconfirmed in a low time delay without querying the state of other shards repeat-\nedly. We summarize our main contributions as follows:\n•We propose a novel sharded DL named TxChain which is parallelly manip-\nulated by the unit of transaction and constituted by accounts’ transaction\nsequences.\n•We propose a consensus mechanism based on the transaction sequence con-\nversion (TSC) to maintain transaction dependencies and consistency among\nshards. TxChain’s high scalability with low confirmation latency has been\ndemonstrated via extensive experiments.\n2  System Overview and Problem Definition\n2.1  System Model\nNodes  are  assigned  to  different  shardsS={S\n1\n,S\n2\n,···,S\nn\n}.  Validators  are\nselected according to their stake ratio in the local shard (the validator in shard\nS\n1\nis represented byV\n1\n). Nodes with higher stakes are more likely to be selected.\nThe selected validator verifies transactions, consents on the order of them, broad-\ncasts them to remote shards and maintains the consistency of TxChain on behalf\nof nodes in the shard. All validator are protected by the TEE, and have no inten-\ntion to be evil because of the stake-based selection. Then combining with the",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded DL via Chained Transaction Sequences335\nsettings and assumptions in prior sharding-based blockchains [1,8], all valida-\ntors can be regard as honest and trustworthy. TxChain adopts the structure\nof Merkle Patricia tree (MPT), but its leaf node is one account composed of\nchained transaction sequences. Figure1shows the data structure of TxChain.\nIntra-shard transactions are executed instantly in the local replica, and then are\nbroadcast to remote shards to synchronize the account status. When transac-\ntions are received by a remote shard, the validator first verifies the signature\nof each transaction to ensure its validity, and then orders and executes each\ntransaction.\nFig. 1.Data structure of TxChain.\n2.2  Transaction Model\nTxChain  adopts  a  state-based  account  whose  state  is  cumulative  results  of\nrelated transactions. The transaction is defined as\u0002f rom, to, value, s, p, ts, f ee\u0003\nσ\nwherefromis the sender of the transactionT,tois the recipient ofT,value\nis the transaction amount,sis the number of the shard generatingT,pis the\nposition ofTin the TxSEQ of the generating account,tsis the timestamp,fee\nis the transaction fee, andσis the signature ofT.\nIn addition to executing local transactions, the validatorValso needs to\nexecute the received remote transactionTby inserting them into the TxSEQ of\nthe specified account. Before executingT, the validatorVneeds to determine\nits relative position in the TxSEQ.Vhas to determine the ordinal relationship\nbetween transactions, which is determined by their dependencies. It is worth\nnoting that only transactions in the same account constitute a dependency. All\nshards cannot have the exact same time in the decentralized environment, which\nmeans that it is impossible to directly determine the orders of transactions from\ndifferent shards. Therefore, in order to determine the position ofTin the TxSEQ\nand maintain consistency of its order in all shards, this paper proposes trans-\naction dependencies.T\na\nandT\nb\nare from shardsS\ni\nandS\nj\nrespectively and are\nexecuted on the same account, and their dependencies are defined as follows:\nDefinition 1.Dependencies.T\na\nandT\nb\nsatisfy the causality relationship “\u0004”\niff (1)T\na\n.ts<T\nb\n.tswhenS\ni\n=S\nj\n,or(2)T\na\nhas  executed  inS\nj\nbeforeT\nb\ngenerates whenS\ni\n\u0005=S\nj\n;T\na\nandT\nb\nsatisfy the concurrency relationship “\u0006”iff\nneitherT\na\n\u0004T\nb\nnorT\nb\n\u0004T\na\n;T\na\nandT\nb\nsatisfy the conflict relationship “⊗”iff\nT\na\n\u0006T\nb\nandT\na\n.p=T\nb\n.p.",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "336Z. Xu et al.\n2.3  Problem Definition\nTransactions are executed instantly in the local shard and then are broadcast\nto remote shards for synchronization. After the remote shard receives the trans-\nactionT, the shard’s state may change and it cannot executeTdirectly in the\ncurrent view according to the position specified byT.p. As shown in Fig.2,V\n1\nattempts to appendTtoT\n2\nin the TxSEQ of account “0x3889fa”, i.e.,T.p=3.\nV\n1\nthen sendsTafterS\n2\n. However,V\n2\nhas concurrently executed the transaction\nT\n\u0002\n2\nat the position 2 of account “0x3889fa” becauseT\n1\n\u0004T\n\u0002\n2\n\u0004T\n2\n, which changes\nT\n2\n.pfrom2to3.Thus,Tshould be ordered at position 4 which is afterT\n2\n.pin\nS\n2\n.IfTis executed directly inS\n2\nbased onT.p= 3, the transaction dependencies\nare violated and TxSEQs maintained among shards will be inconsistent.\nFig. 2.Inconsistency example in TxChain.\nTxChain supports the parallel execution of transactions in all shards. How-\never, shards’ state may change after transactions reach remote shards, resulting\nin violations of transaction dependencies and inconsistent shard states. There-\nfore, how to design a consensus mechanism which executes transactions in obedi-\nence to their dependencies and maintains the consistency of all shards becomes\nthe key problem faced by TxChain.\n3  Consensus Mechanism in TxChain\n3.1  Prerequisites of Transaction Execution\nThe consensus in TxChain is to order and execute transactions based on trans-\naction dependencies and ensures the consistency of these orders among shards.\nIn order to maintain the transaction dependencies, TxChain adopts the vector-\nbased timestamp [2] to determine the execution order of transactions. Each shard\nin TxChain has a collection of accountsL={L\n1\n,L\n2\n,···,L\nm\n},L\nj\n∈L. In addi-\ntion to the local state of the accounts, each shard needs to record the state of\nother shards. Each shard’s state is composed of all the account states in it. We\nuse the execution vectorEV\nL\nj\nS\ni\nto denote the state ofL\nj\ninS\ni\n. Each element of\nEVrepresents the state of the same account in different shards and starts with\n0, i.e.,EV\nL\nj\nS\ni\n[S\ni\n]=0,S\ni\n∈S. After the shardS\nj\nexecutes a transaction fromS\ni\n,\nL\nj\n’s execution vectorEV\nL\nj\nS\nj\n[S\ni\n]=EV\nL\nj\nS\nj\n[S\ni\n]+1. The timestamp of a transaction",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded DL via Chained Transaction Sequences337\nTisT.tswhich represents theEVwhen it is generated. When remote shards\nreceiveT, they maintain the dependencies and execution order of transactions\naccording toT.ts. Therefore, based on the timestamp of transactions, we present\nhow to determine whether a transaction can be instantly executed. Meanwhile,\nThe consistency constraints of TxChain should make transactions match their\ncausality relationship and let transactions with higher transaction fee be ordered\nin the front.\nDefinition 2.Transaction  Execution.A  transactionTcan  be  executed\ninstantly in the shard iff (1)Tis from this local shard, or (2)Tis from the\nremote shard and transactions which is causally beforeThave been executed.\n3.2  Transaction Sequence Conversion Algorithm\nTo solve the problem in Sect.2.3, according to the consistency constraints of\nTxChain, we design the consensus mechanism based on the transaction sequence\nconversion (TSC) algorithm.T\na\nandT\nb\nare two concurrent transactions for the\nsame accountLinS\ni\nandS\nj\nrespectively, and are executed instantly in their\nlocal shards. WhenT\nb\narrives atS\ni\n, the execution vector ofLinS\ni\nisEV\nL\nS\ni\n.The\nordering position ofT\nb\ninS\ni\nshifts because the execution ofT\na\n,soT\nb\ncannot be\nexecuted directly at theT\nb\n.pinS\ni\n. Therefore, TSC refers to the idea of address\nspace transformation (AST) [3,7] to convert the account’s TxSEQ to a specific\nstate, and then execute transactions according to Definition2.\nFig. 3.Transaction sequence conversion.\nWe still use the example in Sect.2.3for illustrating the process of TSC, which\nhas been presented in Fig.3. BeforeV\n1\nattempts to executeTin the account\nL=“0x3889fa”, the execution vector ofLisEV\nL\nS\n1\n=[0,3]. WhenTarrives at\nS\n2\n,EV\nL\nS\n2\n=[0,4]. TSC tracesS\n2\nback to the state whenTis generated, i.e.,\nEV\nL\nS\n2\n=T.ts=[0,3]. In other words, TSC sets the impact ofT\n\u0002\n2\nto be invisible.\nAfterTis executed inS\n2\n,theEV\nL\nS\n2\nis updated to [1,4]. Finally, TSC restores\nthe impact ofT\n\u0002\n2\n. Similarly,S\n1\nfollows the above steps to synchronizeT\n\u0002\n2\n.\nBased on the above content, TSC is presented as Algorithm1. The trans-\nactionTis generated from accountLof the remote shardS\nj\nand it will be\nexecuted inLofS\ni\nwhose execution vector isEV\nL\nS\ni\n. The first step of TSC is\nto verify the signature ofTfor its integrity. Next, TSC traces the TxSEQ of\nLback to the state whenTis generated, i.e., adjustsEV\nL\nS\ni\nto equalT.ts.The\nprocess of backtrack determines which transactions have been executed when\nEV\nL\nS\ni\n=T.ts. For one transactionT\n\u0003\nin the TxSEQ ofLmaintained byS\ni\n,if",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "338Z. Xu et al.\nAlgorithm 1.The Transaction Sequence Conversion Algorithm\nInput:Transaction sequenceTxSEQ, transactionT;\n1:ifVerify (T)then\n2:Backtrack (TxSEQ,T.ts)\n3:ExecuteTinTxSEQ\n4:EV\nL\nS\ni\n[S\nj\n]=EV\nL\nS\ni\n[S\nj\n]+1\n5:Backtrack\n\u0002\nTxSEQ,EV\nL\nS\ni\n\u0003\n6:else\n7:AbortT\n8:end if\nAlgorithm 2.The Sequencing Algorithm\nInput:Sequencing interval (p\nx\n,p\ny\n), transactionT\nOutput:Ordering positionSite\n1:Site←null\n2:forT\n\u0002\n.pbetween (p\nx\n,p\ny\n)do\n3:ifT\u0005T\n\u0002\nthen\n4:ifTOrder(T)<TOrder\n\u0004\nT\n\u0002\n\u0005\n&&Site=nullthen\n5:Site←T\n\u0002\n.p\n6:end if\n7:else ifT\u0006T\n\u0002\nthen\n8:Site←T\n\u0002\n.p\n9:break\n10:end if\n11:T\n\u0002\n←T\n\u0002\n.next\n12:end for\n13:ifSite=nullthen\n14:returnT\n\u0002\n.p\n15:else\n16:returnSite\n17:end if\nT.ts≥T\n\u0003\n.ts, the impact ofT\n\u0003\nis set as visible, otherwise the impact ofT\n\u0003\nis set\nas invisible. The comparison of timestamp complies with the following rules. If\nT\n\u0003\n.ts=T.ts, each corresponding element inT\n\u0003\n.tsandT.tsis exactly the same.\nIfT\n\u0003\n.ts < T.ts, each corresponding element inT\n\u0003\n.tsis not greater thanT.ts,and\nthe sum of the elements inT\n\u0003\n.tsis less thanT.ts.IfT\n\u0003\n.ts > T.ts,T\n\u0003\n.tscontains\nat least one corresponding element greater thanT.ts.\nAfter TSC has traced the shard to the state whenTis executed, the ordering\nposition ofTin the TxSEQ has been determined, which is the interval between\ntwo  positions.  However,  due  to  the  backtrack  process,  there  may  be  several\ninvisible transactions in that interval. Therefore, it is also necessary to compare\nthe relationship betweenTand these invisible transactions to finally confirm\nthe ordering position ofT. In order to compare the relationship betweenTand\nthese invisible transactions, we can also useTOrder[6] in addition to transaction\ndependencies defined in Sect.2.2.\nDefinition 3.TOrder.Given two transactionsT\na\nandT\nb\n,TOrder(T\na\n)<\nTOrder(T\nb\n)iff (1) SUM(T\na\n.ts)<SUM(T\nb\n.ts),or(2)T\na\n.f ee > T\nb\n.f eewhen\nSUM(T\na\n.ts)=SUM(T\nb\n.ts),or(3)i<j, when SUM(T\na\n.ts)=SUM(T\nb\n.ts)and\nT\na\n.f ee=T\nb\n.f ee. Meanwhile, SUM(T.ts)=\n\u0002\nn\ni=1\nT.ts[S\ni\n].",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "TxChain: Scaling Sharded DL via Chained Transaction Sequences339\nWe have knownTwill be inserted between two positionsp\nx\nandp\ny\n. Then\nwe traverse each transactionT\n\u0003\nin the sequencing interval (p\nx\n,p\ny\n). IfT\n\u0003\nand\nTare concurrent andTOrder(T)<TOrder(T\n\u0003\n),T\n\u0003\n.pbecomes the ordering\nposition ofT.IfTcausally precedesT\n\u0003\n,T\n\u0003\n.pis the ordering position ofTand\nthe traversal process ends. The process of ordering transactions in (p\nx\n,p\ny\n)can\nbe described as Algorithm2. ThenTwill be executed according to its ordering\nposition.\n4  Performance Evaluation\n4.1  Experimental Setup\nThe prototype of TxChain is implemented in Golang, and its nodes spread across\n16 machines. Every machine is equipped with the Intel Xeon E5128 CPU, 32 GB\nof RAM, 10 Gbps network link and Ubuntu 16.04 LTS operating system. In order\nto emulate the realistic network environment, we limit the bandwidth between\nnodes to 20Mbps and artificially insert a delay of 100 ms to communication links.\n4.2  Throughput Scalability and Transaction Latency of TxChain\nWe evaluate the throughput scalability and transaction latency of TxChain in\nterms of the number of shards in TxChain|S|.\nAs shown in Fig.4(a), the throughput of TxChain is improved when|S|\nincreases. When we double|S|, the throughput of TxChain can be increased by\n1.59 to 1.89 times. Compared to RapidChain [8] which achieves 1.57 to 1.70 times\nwhen doubling its network size, TxChain can achieve higher scalability. TxChain\nhave better scalability especially when|S|is small because each shard maintains\nthe full replica of TxChain and TSC has greater computational overhead when\nthe amount data in TxChain expands.\nFig. 4.Performance of TxChain.\nFigure4(b) plots the latency of processing a transaction which can be exe-\ncuted instantly or not respectively for different|S|. Transactions which cannot",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "340Z. Xu et al.\nbe executed instantly is pending for a ordering position by TSC. We take the\nexecution of a pending transaction as the example and find that the latency\nincreases slightly from 482.26 milliseconds (ms) to 525.31 ms when|S|varies\nfrom 2 to 16. With the same|S|, a pending transaction has roughly 10% more\nlatency than the transaction can be executed instantly. These results show that\nthe time delay is mainly due to TxSEQs conversion in TSC.\n5  Conclusion\nIn this paper, we propose TxChain which is a novel DL based on sharding and\nconstituted by accounts’ transaction sequences. TxChain enable shards to update\nthe global state via the unit of transaction in parallel, which greatly scales its\nthroughput. The transaction sequence conversion (TSC)-based consensus mech-\nanism traces accounts’  transaction  sequences to the state  when transactions\ncan be ordered correctly for maintaining the shards’ consistency. We implement\nTxChain and demonstrate its high scalability and low transaction latency.\nAcknowledgements.This work was supported by the Science and Technology Com-\nmission of Shanghai Municipality under Grant No. 21511101501 and the National Nat-\nural Science Foundation of China (NSFC) under Grant No. 61932007.\nReferences\n1.  Dang, H., Dinh, T.T.A., Loghin, D., Chang, E.C., Lin, Q., Ooi, B.C.: Towards\nscaling blockchain systems via sharding. In: Proceedings of the 2019 International\nConference on Management of Data, pp. 123–140 (2019)\n2.  Ellis, C.A., Gibbs, S.J.: Concurrency control in groupware systems. In: Proceedings\nof the 1989 ACM SIGMOD International Conference on Management of Data, pp.\n399–407 (1989)\n3.  Gu, N., Yang, J., Zhang, Q.: Consistency maintenance based on the mark & retrace\ntechnique in groupware systems. In: Proceedings of the 2005 International ACM\nSIGGROUP Conference on Supporting Group Work, pp. 264–273 (2005)\n4.  Kokoris-Kogias,  E.,  Jovanovic,  P.,  Gasser,  L.,  Gailly,  N.,  Syta,  E.,  Ford,  B.:\nOmniledger: a secure, scale-out, decentralized ledger via sharding. In: 2018 IEEE\nSymposium on Security and Privacy (SP), pp. 583–598. IEEE (2018)\n5.  Luu, L., Narayanan, V., Zheng, C., Baweja, K., Gilbert, S., Saxena, P.: A secure\nsharding protocol for open blockchains. In: Proceedings of the 2016 ACM SIGSAC\nConference on Computer and Communications Security, pp. 17–30 (2016)\n6.  Sun, C., Jia, X., Zhang, Y., Yang, Y., Chen, D.: Achieving convergence, causality\npreservation, and intention preservation in real-time cooperative editing systems.\nACM Trans. Comput.-Hum. Inter. (TOCHI)5(1), 63–108 (1998)\n7.  Yang, J., Wang, H., Gu, N., Liu, Y., Wang, C., Zhang, Q.: Lock-free consistency\ncontrol for web 2.0 applications. In: Proceedings of the 17th international conference\non World Wide Web, pp. 725–734 (2008)\n8.  Zamani, M., Movahedi, M., Raykova, M.: Rapidchain: scaling blockchain via full\nsharding. In: Proceedings of the 2018 ACM SIGSAC Conference on Computer and\nCommunications Security, pp. 931–948 (2018)",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\TxChain.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.7",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Producer": "iLovePDF",
          "ModDate": "D:20240414112809Z"
        },
        "metadata": {
          "_metadata": {
            "pdf:producer": "iLovePDF",
            "pdf:pdfversion": "1.7",
            "dc:format": "application/pdf",
            "pdfaid:part": "2",
            "pdfaid:conformance": "B",
            "xmp:modifydate": "2024-04-14T11:28:09Z",
            "xmp:metadatadate": "2024-04-14T11:28:09Z",
            "xmpmm:instanceid": "urn:uuid:74807790-2C0A-4C44-9E12-A9D5BCA2FCB7"
          }
        },
        "totalPages": 8
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "14478IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\nUnderstanding Characteristics and System\nImplications of DAG-Based Blockchain\nin IoT Environments\nTianyu Wang,QianWang, Zhaoyan Shen, Zhiping Jia, and Zili Shao\nAbstract—Blockchain is starting to be deployed in the Internet\nof  Things  (IoT)  to  enable  autonomous  device-to-device  transac-\ntions.  However,  traditional  block-based  blockchain  techniques,\nsuch as Bitcoin and Ethereum, are not suitable for IoT environ-\nments due to their low throughput, high computation overhead,\nand  costly  transaction  fee.  To  satisfy  the  requirements  of  IoT\nenvironments,  directed-acyclic-graph  (DAG)-based  approaches,\naiming  to  provide  cheap  blockchain  services  with  low  latency\nand  high  throughput,  are  emerging.  This  article  presents  a  set\nof comprehensive experimental studies on IOTA, a representative\nDAG-based blockchain. We aim to exhibit its unique characteris-\ntics mainly from three aspects: 1) performance; 2) security; and\n3) system robustness. We have developed a series of benchmark\ntools  and  judiciously  selected  typical  configurations  to  perform\nexperimental  examinations  with  a  real  private  IOTA  network.\nOur studies reveal several interesting findings: 1) the throughput\nof  IOTA  is  higher  than  the  traditional  block-based  blockchain\nbut far less than the reported thousands of transactions per sec-\nond (TPS) in its whitepaper, even with scaling-up configurations;\n2) the database query heavily impacts the performance of IOTA,\neven  more  than  its  mining  [i.e.,  Proof  of  Work  (PoW)]  process;\nand  3)  the  system  robustness  of  IOTA  is  closely  related  to  the\nfrequency  of  the  incoming  transactions  while  the  milestone  sent\nby  the  centralized  coordinator  has  little  effect  on  the  system\nrobustness.  We  make  our  benchmark  tools  public  and  expect\nour  works  can  inspire  system  architects,  application  designers,\nand practitioners with new optimization directions and potential\napplication  cases for  further  exploration.\nIndex    Terms—Benchmark    tool,    Internet-of-Things    (IoT)\nblockchain,  performance  evaluation.\nManuscript   received   29   December   2020;   revised   17   April   2021   and\n25 July 2021; accepted 19 August 2021. Date of publication 30 August 2021;\ndate  of  current  version  8  August  2022.  This  work  was  supported  in  part\nby  the  National  Science  Foundation  for  Young  Scientists  of  China  under\nGrant  61902218;  in  part  by  the  National  Natural  Science  Foundation  of\nChina  under  Grant  92064008;  in  part  by  the  Research  Grants  Council  of\nthe  Hong  Kong  Special  Administrative  Region,  China,  under  Grant  GRF\n15224918; and in part by Direct Grant for Research, The Chinese University\nof  Hong  Kong  under  Project  4055151.  This  article  was  presented  in  part  at\nthe 16th IEEE International Conference on Embedded Software and Systems\n(ICESS 2020, Best Paper Award) [DOI:10.1109/ICESS49830.2020.9301563].\n(Corresponding author: Zhaoyan Shen.)\nTianyu Wang is with the Department of Computer Science and Technology,\nShandong  University,  Qingdao  266000,  Shandong,  China,  and  also  with  the\nDepartment  of  Computer  Science  and  Engineering,  The  Chinese  University\nof Hong Kong, Hong Kong (e-mail: tywang@cse.cuhk.edu.hk).\nQian  Wang,  Zhaoyan  Shen,  and  Zhiping  Jia  are  with  the  Department  of\nComputer  Science  and  Technology,  Shandong  University,  Qingdao  266000,\nShandong,  China  (e-mail:  daisy_seven@163.com;  shenzhaoyan@sdu.edu.cn;\njzp@sdu.edu.cn).\nZiliShaoiswiththeDepartmentofComputerScienceand\nEngineering,  The  Chinese  University  of  Hong  Kong,  Hong  Kong  (e-mail:\nshao@cse.cuhk.edu.hk).\nDigital Object Identifier 10.1109/JIOT.2021.3108527\nI.  INTRODUCTION\nI\nNTERNET-OF-THINGS  (IoT)  devices,  in  which  objects\nor  “things”  are  augmented  with  computation  and  com-\nmunication  capabilities,  are  increasingly  utilized  in  our  daily\nlife  [2]–[5].  For  instance,  there  have  been  over  20  billion\nIoT  devices  by  2020,  and  the  number  may  reach  up  to  50\nbillion by 2025 [6], [7]. It becomes important to enable device-\nto-device  transactions  such  as  machine-to-machine  (M2M)\nmicro-payments [8]–[11]. With great potential to enable M2M\ntransactions  in  a  more  secure  and  trusted  way,  blockchain\ntechnologies   gain   great   attention   from   both   industry   and\nacademia [12]–[16], in which based on a decentralized archi-\ntecture,   transactions   are   added   through   a   mining   process\nand  maintained  in  a  tamper-resistant  distributed  ledger.  As\nblockchain  techniques  are  starting  to  be  deployed  in  IoT\nenvironments  [8],  it  becomes  important  to  investigate  their\ncharacteristics and system implications.\nIn   an   IoT   environment,   in   order   to   support   massive\nautonomous M2M transactions for data exchange and process-\ning while assuring data security and operation accountability,\nhigh transaction speed, and lightweight consensus mechanisms\nare required [3], [7], [17]. Traditional block-based blockchain\ntechnologies,  such  as  Bitcoin  [18]  and  Ethereum  [19],  can-\nnot be directly deployed in the IoT environment because they:\n1) suffer from low transactions per second (TPS), varying from\nseveral to dozens [20], which is far less than the requirement of\nthousands of TPS in an IoT environment [21], [22]; 2) involve\na resource-hungry mining process—Proof of Work (PoW), for\nwhich  resource-constrained  IoT  devices  may  lack  sufficient\ncomputation power to operate; and 3) require a costly transac-\ntion  fee  for  transaction  confirmation,  which  is  too  expensive\nfor  IoT  environments  with  massive  small-value  transactions\namong IoT devices.\nTo address the above issues, directed-acyclic-graph (DAG)-\nbased  blockchain  techniques  are  gaining  more  interest  in  the\ndistributed ledger field for IoT environments. IOTA is one of\nthe  representative  techniques  and  utilizes  a  DAG  structure,\ncalled  Tangle  [8],  to  organize  transactions.  For  example,  as\nFig. 1 shows, in a DAG, each node is a transaction, and clients\nissue all the transactions through a selective PoW process. Leaf\nnodes  (i.e.,  transactions  that  have  not  been  approved  by  lat-\nter  transactions)  are  called  tips.  For  a  transaction  insertion,\nit  must  select  and  approve  two  tips.  During  the  tip  selection\nand approval process, a random walking algorithm is used to\n2327-4662\nc\n©2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 1
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14479\nFig. 1.Tangle in a full node.\nchoose tips for approval, and a transaction validation algorithm\nis performed to verify the transactions along the validation path\nto avoid double-spending. Benefited from this self-propagated\nprocess  (i.e.,  the  latter  transaction  helps  verify  two  former\ntransactions),  theoretically,  the  system  throughput  of  IOTA\ndepends  on  the  incoming  transaction  frequency.  The  higher\nthe  frequency  is,  the  higher  the  throughput  achieves,  which\ncan even reach thousands of TPS [22].\nDifferentfromthewell-benchmarkedblock-based\nblockchain   systems,   more   investigations   are   needed   to\nunderstand   the   characteristics   and   system   implications   of\nDAG-based  blockchain  systems.  In  this  article,  we  carry  out\na  set  of  comprehensive  experimental  studies  on  IOTA  and\nattempt  to  gain  insights  into  its  unique  characteristics.  We\nfirst build a private IOTA network with typical configurations\nand then develop  a series of benchmark  tools that have been\nreleased  to  the  public  [1]  to  explore  the  system  characteris-\ntics.  We  examine  IOTA  from  three  aspects:  1)  performance;\n2)  security;  and  3)  system  robustness.  Our  results  reveal  the\nfollowing facts.\n1)  With the scale-up of IOTA, its throughput is higher than\nthe  traditional  block-based  blockchain  systems  but  far\nless  than  the  reported  thousands  of  TPS.  Through  ana-\nlyzing the transaction latency, we find that although PoW\nand  tip  selection  are  time-consuming,  database  queries\nare the major bottleneck.\n2)  IOTA  effectively  provides  IoT  security  by  defending\nagainst  various  attacks,  such  as  the  double-spending\nattack  and  the  off-syncing  attack.  While  these  attacks\ncan  be  detected,  how  fast  they  can  be  detected  and\ntheir impacts on the system performance deserve further\ninvestigation.\n3)  The system robustness of IOTA is closely related to the\nfrequency of the incoming transactions. Meanwhile, the\nmilestone  sent  by  the  centralized  coordinator  has  little\neffect on system robustness.\nWe  have  released  our  benchmark  tools  and  all  the  evalua-\ntion setups to the public. We expect that our work can inspire\nsystem architects, application designers, and practitioners with\nnew optimization directions for further exploration.\nThe   remainder   of   this   article   is   organized   as   follows.\nSection  II  introduces  the  background  about  two  types  of\nblockchains   and   our   motivation.   Section   III   presents   the\nexperimental  setup  and  environment.  Then,  we  provide  our\nexperimental results and the key observations in Section IV. In\nSection V, we discuss the system implications to system archi-\ntects  and  application  designers.  Related  works  are  presented\nin Section VI, and Section VII concludes this article.\nII.  B\nACKGROUND ANDMOTIVATION\nA.  IoT Environment\nIn  an  IoT  environment,  IoT  devices,  such  as  sensors  and\nembedded  controllers  are  connected  through  IoT  technolo-\ngies  [24],  [25].  To  support  the  communication  requirement\nbetween   a   large   number   of   IoT   devices,   M2M   message\nbecomes one of the basic technologies for IoT [11]. Recently,\nas  the  privacy  and  security  issues  of  IoT  become  more  and\nmore important [26]–[28], the blockchain technology, with its\ngreat  potential  to  enable  M2M  transactions  in  a  more  secure\nand trusted way, has gained a lot of interest from both indus-\ntry  and  academia  [29],  [30].  Specifically,  in  a  blockchain,\nwith  its  decentralized  architecture,  M2M  transactions  can  be\nadded  to blocks  through  a mining process  and  maintained  in\na tamper-resistant distributed ledger.\nHowever, different from other peer-to-peer applications like\ncryptocurrency,  an  IoT  environment  raises  particular  chal-\nlenges for secure M2M transactions as follows. First, to sup-\nport massive autonomous M2M transactions for data exchange\nand  processing,  it  requires  much  higher  throughput,  e.g.,\nthousands  TPS  [21],  [22].  Second,  many  IoT  devices  are\nresource-constrained  and  lack  sufficient  computation  power\nto  process  resource-hungry  consensus  protocol  such  as  PoW.\nThird,  for  M2M  communications,  it  is  important  to  support\nlow  cost  (or  zero  cost)  transactions  (called  microtransac-\ntion).  High  transaction  fees  will  severely  limit  the  usage  of\nblockchains in IoT environments [11].\nDAG-based blockchains are emerging as a promising direc-\ntion  to  tackle  the  above  challenges.  Different  from  tradi-\ntional  block-based  blockchains,  in  which  the  throughput  is\nlimited  with  fixed  parameters  (e.g.,  block  size  and  block\ninterval),  a  DAG-based  blockchain  organizes  all  transactions\nin  a  DAG  structure.  Without  block-based  limitations,  it  can\nachieve  higher  throughput.  Moreover,  lightweight  consensus\nprotocols  in  DAG-based  blockchains  avoid  resource-hungry\ncomputation,  so  they  are  suitable  for  resource-constrained\nIoT  devices.  Finally,  transactions  with  a  DAG  structure  can\nbe  self-propagated,  which  can  help  reduce  transaction  fees.\nThus, microtransactions in IoT environments can be efficiently\nsupported.\nB.  Block-Based Blockchain\nTraditional    block-based    blockchain    systems,    such    as\nBitcoin  [18]  and  Ethereum  [19],  utilize  a  distributed  public\nledger  technology  that  stores  transactions  with  a  linked  list\nof  blocks.  Blocks  are  generated  and  shared  over  the  entire\nblockchain  network  to  defend  against  system  failure,  data\nmanipulation,  and  cyber  attacks  [31],  [32].  These  systems\ngenerally  adopt  a  mining  process  (e.g.,  PoW,  which  requires\nsolving a computation and energy-hungry puzzle) [33] to gen-\nerate new blocks. A newly generated block will be broadcast\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 2
      }
    }
  },
  {
    "pageContent": "14480IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\nto the whole network to achieve consensus. The mining pro-\ncess  heavily  limits  the  scalability  of  block-based  blockchain\nsystems  and  makes  them  suffer  from  low  throughput.  For\nexample,  the  throughput  of  Bitcoin  and  Ethereum  are  only\ntens per second. Besides, every transaction is carried out with\na certain transaction fee, and the transaction fee is expensive\nand keeps increasing.\nThere are currently two major approaches to improving the\nthroughput  of  the  block-based  blockchain  systems:  1)  accel-\nerating  the  block  generation  time  and  2)  enlarging  the  block\nsize. Accelerating the block generation time means decreasing\nthe nonce accuracy during the mining process, which will sac-\nrifice the blockchain system’s security. Besides, this approach\nincreases  the  possibility  that  multiple  miners  solve  the  PoW\npuzzle  simultaneously,  aggravating  the  blockchain  forks.  For\nthe second approach, a larger block size requires longer gener-\nation time and broadcasting time across the network. Thus, this\napproach only achieves slight improvement in system through-\nput [14], [34]. All these disadvantages make it hard to apply\nthe block-based blockchain in IoT environments.\nC.  DAG-Based Blockchain\nDAG-based   blockchains   provide   a   promising   solution\nto  enable  secure  autonomous  transactions  in  IoT  environ-\nments [8], [35]. Instead of packing transactions into a linked\nblock  list,  a  DAG-based  blockchain  maintains  transactions\nwith the DAG structure. In this article, we use IOTA to illus-\ntrate its working principle. IOTA has been applied in multiple\nindustrial  environments,  such  as  healthcare  and  smart  sens-\ning  [11],  [36]–[38].  The  DAG  structure  of  IOTA  is  called\nTangle,  in  which  each  node  is  a  transaction.  Leaf  nodes  of\nTangle  (i.e.,  transactions  that  have  not  been  approved)  are\ncalled  tips.  For  a  transaction  to  be  added  to  Tangle,  it  must\nselect  and  approve  two  tips  and  do  a  light-weighted  PoW  to\ncomplete the attached transaction. The whole Tangle is stored\nin full nodes that running the IOTA reference implementation\n(IRI)  service.  Other  participators  that  launch  transactions  are\ncalled light nodes.\nFig.  1  shows  the  snapshot  of  a  Tangle  in  a  full  node.  In\nIOTA,  transactions  are  issued  by  light  nodes  and  attached  to\nthe Tangle through a selective PoW process, which includes tip\nselection and validation processes. For example, in Fig. 1,Qis\na newly attached transaction (i.e., a tip),LandOare two old\ntips approved byQ.The tip selection process uses a Markov\nChain Monte Carlo (MCMC) algorithm to perform a random\nwalking on the DAG. The algorithm begins with a former mile-\nstone  (e.g.,G).  Then,  based  on  probability,  it  selects  another\ntransaction  that  approves  it  (the  chosen  probability  of  each\napprover is relative to its accumulated weight—the number on\nthe node’s bottom right indicating how many transactions have\napproved it directly or indirectly). The algorithm stops until it\nreaches a tip and is performed twice for another tip selection.\nAfter that, the newly attached transaction needs to verify the\ntransactions  approved  by  these  two  selected  tips  recursively\n(along the validation path) until a fully confirmed transaction.\nWhen  a  transaction  has  been  verified  by  a  predefined  large\nnumber of transactions or indirectly approved by a milestone\n(a  transaction  with  a  significant  weight  issued  by  the  IOTA\nfoundation), it becomes fully confirmed. Once a new transac-\ntion  is  attached  to  the  DAG,  the  full  node  will  synchronize\nthe  updated  DAG  to  its  neighbors  to  promise  the  Tangle’s\nconsistency.\nAs  reported  by  the  IOTA  foundation  [39],  it  can  satisfy\nthe requirement of an IoT environment since its performance\nis  related  to  the  number  of  users.  That  is,  the  more  incom-\ning  truncations  served,  the  higher  throughput  it  achieves.\nSpecifically,  a  higher  incoming  transaction  frequency  will\naccelerate  approving  tips  and  speed  up  the  transaction  con-\nfirmation process. However, in IOTA, in the beginning, it will\ntake  a  long  time  for  transactions  to  be  confirmed  if  there\nare  not  enough  users.  Thus,  the  IOTA  foundation  maintains\na centralized coordinator sending milestones (yellow nodes in\nFig. 1) to confirm those tips periodically. Tips directly or indi-\nrectly approved by milestones will be confirmed immediately.\nThe frequency of sending milestones is vitally crucial for the\nlatency of confirming those transactions.\nD.  Motivation\nCurrently, block-based blockchain systems, such as Bitcoin\nand  Ethereum,  have  been  well  investigated,  and  many  works\nhave  been  performed  for  benchmarking  these  systems.  For\ninstance,  Pongnumkulet  al.[40]  conducted  a  performance\nanalysis  of  Hyperledger  Fabric  and  Ethereum  in  terms  of\nexecution  time,  latency,  and  throughput,  to  provide  adop-\ntion  hints  of  the  blockchain  technology  in  their  IT  systems.\nDinhet   al.[41]   developed   an   evaluation   framework   for\nanalyzing  private  blockchains,  serving  a  fair  way  for  com-\nparing different platforms, and enabling a deeper understand-\ning  of  different  system  design  choices.  Baligaet  al.[42]\ncharacterized the performance features of Quorum, a permis-\nsioned blockchain platform built from the Ethereum codebase.\nThey  use  several  micro-benchmarks  to  study  the  throughput\nand  latency  characteristics  of  Quorum.  Gervaiset  al.[16]\nintroduced  a  novel  quantitative  framework  to  compare  PoW\nblockchains   objectively.   They   characterize   different   PoW\nblockchains and evaluate their performance and security.\nHowever, due to the lack of well-designed evaluation tools,\nDAG-based blockchains need more investigation. Thus, based\non IOTA, we develop a series of benchmark tools and aim to\nexhibit its intrinsic characteristics in this article.\nIn  this  work,  we  strive  to  explore  and  understand  the\nintrinsic  characteristics  of  IOTA  by  answering  the  following\nquestions.\n1)  How   are   the   performance   characteristics   of   IOTA,\nincluding throughput, latency, and scalability?\n2)  How robust for IOTA to defend against security attacks\nsuch  as  double-spending?  What  will  happen  if  one  of\nthe full nodes is attacked and off synced from the whole\nnetwork?\n3)  The shape of the Tangle reflects the system robustness of\nIOTA. What factors will influence the shape (robustness)\nof the Tangle?\n4)  How milestones influence IOTA, including performance,\nsecurity, and system robustness?\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 3
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14481\nFig. 2.Private IOTA blockchain network.\nFig. 3.Private IOTA system architecture.\nIII.  MEASUREMENTENVIRONMENT\nIn  this  work,  we  develop  a  series  of  IOTA  benchmark\ntools, mainly including three parts: 1) an automatic transaction\ninitiator;  2)  a  real-time  status  monitor;  and  3)  a  double-\nspending  attacker.  We  implement  our  automatic  transaction\ninitiator with multithreadingNodeJS, utilizing APIs provided\nby  the  IOTA  foundation.  Each  initiator  will  automatically\nsend  transactions  with  the  preconfigured  sender’s  seed  and\nreceiver’s  address.  The  monitor  is  implemented  withGolang\nfor high performance. All the tools have been released to the\npublic [23].\nThe  evaluations  are  performed  based  on  a  distributed  pri-\nvate  IOTA  blockchain  network.  We  have  recorded  the  shape\nof  the  IOTA  Tangle  after  running  IOTA  for  three  days  (the\nTangle graphic view can be found at).\n1\nIn our environment, the\nnetwork consists of 35 Intel next unit of computings (NUCs),\nand each NUC is equipped with i5-6200u CPU, 4-GB DDR3\nmemory, and 128-GB NVMe storage. Fig. 2 shows the private\nIOTA blockchain system.\nThe  NUCs  are  divided  into  several  roles.  As  edge  devices\ncan choose to participate in all transaction certifications (as a\nfull node) or not (as a light node), to simulate it, one NUC is\nused as a coordinator to send milestones to the private IOTA\nnetwork (the orange one in Fig. 3), while the others perform\nas full nodes (the blue ones) or clients (the yellow ones). All\n1\nIOTATanglegraphicalview:https://www.youtube.com/channel/\nUCj0muwSgKr2bn2BybLkw3kQ.\nthe  clients  are  installed  with  our  automatic  transaction  ini-\ntiator  (the  pink  module)  to  continuously  initiate  transactions\nand  send  them  to  the  whole  IOTA  network  in  a  configured\nfrequency.  All  the  full  nodes  are  equipped  with  IRI  1.5.5\n(IRI,  version  1.5.5)  to  receive  and  handle  those  transactions.\nThus, we can adjust the whole IOTA network’s load by simply\nincreasing or decreasing the number of clients.\nAs Fig. 3 shows, a real-time status monitor is installed on\nan NUC to monitor all changes of transaction status (the pur-\nple module), fromtipstoapprovedthenconfirmedones, and\nrecord  the  latency  including  inherent  and  confirmation  laten-\ncies.  The  real-time  status  monitor  also  collects  the  CPU  and\nmemory usage for performance analysis and the tip/confirmed\ntransaction ratio for system robustness analysis.\nBecause  both  receiving  milestone  transactions  and  broad-\ncasting  transaction  status  will  occupy  resources  in  the  IOTA\nfull  nodes,  we  separate  one  full  node  (the  green  one)  from\nthe other full nodes to serve as the milestone receiver and the\nstatus  broadcaster.  Thus,  we  can  isolate  its  influence  on  the\nother full nodes.\nOne  NUC  is  selected  from  all  the  clients  to  serve  as  a\ndouble-spending  attacker  (the  red  module)  by  maliciously\nsending two transactions using the same amount of money. By\nmonitoring  all  the  IOTA  full  nodes’  status,  we  can  observe\nthe  behavior  after  the  full  node  detects  the  double-spending\nattack—one  of  the  major  security  issues  in  a  private  IOTA\nnetwork.\nIn  this  work,  we  configure  the  private  IOTA  system  with\nseveral  typical  setups,  including  the  different  number  of  full\nnodes,  clients,  and  milestone  intervals,  and  judiciously  eval-\nuate  the  representative  DAG-based  blockchain  system  from\nthree  aspects:  1)  performance;  2)  security;  and  3)  system\nrobustness.\nIV.  E\nXPERIMENTALEXAMINATION\nA.  Performance\nThroughput:The  system  throughput  indicates  how  many\ntransactions the blockchain network can handle per second. We\nevaluate  the  system  throughput  with  both  a  single  full  node\nand  multiple  full  nodes  scenarios.  When  testing  the  system\nthroughput,  we  gradually  increase  the  incoming  transaction\nspeed (TPS).\nFig.  4(a)  shows  the  system  throughput  when  there  is  only\none  full  node.  When  the  incoming  transaction  speed  is  less\nthan  15,  the  system  can  easily  accommodate  all  incoming\ntransactions.  Thus,  the  system  throughput  is  equal  to  the\nincoming  transaction  speed.  Once  the  incoming  transaction\nspeed  exceeds  15,  the  system  throughput  is  bounded  to  16\nTPS.  This  phenomenon  is  because  when  attaching  a  transac-\ntion  to  the  Tangle,  both  memory  and  computation  resources\nare required from the full node, as described in Section II-C.\nThus, when there is only one full node, with the increment of\nthe incoming transaction speed, the resources of the full node\nwill  finally  run  out,  and  the  system  throughput  is  limited  to\n16 TPS.\nWe  further  evaluate  the  system  throughput  by  configuring\nthe  system  with  multiple  full  nodes.  In  this  test,  we  fix  each\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 4
      }
    }
  },
  {
    "pageContent": "14482IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\n(a)(b)\nFig. 4.Latency and throughput in different configurations. (a) Single full node. (b) Multiple full nodes.\n(a)(b)\nFig. 5.Resource usage in different configurations. (a) Single full node. (b) Multiple full nodes.\nfull node to receive eight incoming TPS and then increase the\nfull node number to test the private IOTA network’s scalabil-\nity. The results are as shown in Fig. 4(b). It can be observed\nthat the highest system throughput is about 25 TPS when there\nare  three  active  full  nodes  and  drops  back  a  little  with  four\nactive full nodes. The reason that limits the system throughput\nis  the  network  synchronization  overhead.  When  a  new  trans-\naction  is  attached  to  the  Tangle,  it  needs  to  be  synchronized\nto  all  the  full  nodes.  Thus,  although  we  can  add  more  full\nnodes  to  handle  more  transactions,  the  system  throughput  is\nstill limited.\nLatency:The system latency can be divided into two parts:\none part is the time from the transaction initialization to it is\nattached  to  the  Tangle;  at  that  time,  another  part  of  latency\nbegins counting until the transaction has been confirmed. We\nname  the  former  one  asinherent  latencyand  the  latter  one\nasconfirmation  latency.  Both  two  latencies  are  evaluated  as\nfollows.\nInherent Latency:In the single full node scenario, the trend\nbetween  the  latency  and  the  incoming  transaction  speed  is\nshown in Fig. 4(a). With the increment of the incoming trans-\naction  speed,  the  inherent  latency  increases  correspondingly.\nWhen  the  throughput  reaches  its  upper  bound,  the  inherent\nlatency  boosts  to  an  extremely  high  level  as  the  incoming\ntransaction speed increases. We will further analyze the inher-\nent  latency  later  to  obtain  how  much  latency  that  each  task\nconsumes.\nFor  the  multiple  full  nodes  environment,  the  results  are  as\nshown  in  Fig.  4(b).  When  we  activate  three  full  nodes,  its\nthroughput reaches the upper bound while the inherent latency\nincreases.  It  represents  that  the  computation  resources  in  the\nfull nodes are running out. When four full nodes are activated,\nthe throughput declines while the latency continues increasing.\nOverall, the peak throughput cannot be further improved.\nConfirmation  Latency:Presently,  IOTA  still  depends  on\nmilestones  to  confirm  transactions,  so  we  fix  the  milestone\ninterval to 20 s during the whole test. As shown in Fig. 4(a),\nthe confirmation latency slowly increases when the incoming\ntransaction  speed  rises.  The  total  latency  reaches  the  maxi-\nmum at 18 TPS, but it drops back slightly when the incoming\ntransaction speed further increases. We measure each incom-\ning transaction’s confirmation latency and draw the distribution\ndiagram in Fig. 6 to analyze this phenomenon in terms of tip\nselection and validation.\nAnalysis:Fig.  5(a)  shows  the  resource  usage  in  the  single\nfull node scenario. When we continue increasing the incoming\ntransaction  speed,  the  CPU  usage  of  the  full  node  increases\nrapidly. It exceeds 90% when the incoming transaction speed\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 5
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14483\nFig. 6.Distribution of the confirmation latencies.\nreaches 18 TPS. The computation resource becomes the bottle-\nneck which vitally limits its performance. Combining Fig. 4(a)\nfor analysis, the throughput stops increasing when the incom-\ning  transaction  speed  reaches  18  TPS,  exactly  matching  the\nCPU  usage  shown  in  Fig.  5(a).  However,  the  full  node’s\nmemory  usage  does  not  exceed  30%,  which  reveals  that  the\ntasks running in the full node are not memory intensive.\nAs  Fig.  5(b)  shows,  although  the  CPU  usage  of  one  full\nnode is not too high at the beginning, with the full node num-\nber  increases,  the  average  CPU  usage  of  each  full  node  also\nincreases. Since we do not increase the incoming transaction\nspeed  of  one  full node,  the  increase  in CPU usage  is mainly\ndue  to  the  communication  cost.  Once  a  full  node  receives  a\ntransaction,  it  needs  to  broadcast  the  transaction  to  all  the\nother full nodes in the whole private IOTA network, which is a\ncostly process. Thus, both the computation-intensive tasks and\nthe  network  communication  cost  influence  the  private  IOTA\nnetwork’s  throughput  by  consuming  its  full  nodes’  compu-\ntation  resources,  limiting  the  system  throughput  to  less  than\n30 TPS.\nThe confirmation latency is highly related to the milestone\ninterval. Because the random walk process starts at three mile-\nstones  ago,  the  confirmation  latency  cannot  exceed  triple  the\nmilestone  interval  (i.e.,  60  s).  During  the  tip  selection  pro-\ncess,  it  chooses  the  next  transaction  based  on  the  trust  value\nof  transactions.  The  more  transactions  connected  behind  this\ntransaction,  the  higher  trust  value  this  transaction  will  get,\nmaking  it  more  likely  to  be  chosen  at  the  next  step  of  the\nrandom walk algorithm. A milestone is trusted due to its cen-\ntralization, maintaining a significantly higher trust value than\nall other transactions. Suppose there are many tips connected\nto  the  Tangle  simultaneously  with  a  milestone.  In  that  case,\nall these tips are less likely to be approved by following tips\nbecause they prefer connecting to the milestone more.\nFor  the  confirmation  latency,  it  is  worth  noting  that  we\nonly  count  valid  records.  That  is,  the  transactions  with  infi-\nnite  confirmation  latency  will  not  be  recorded.  Fig.  6  shows\nthe  distribution  of  the  confirmation  latency  from  each  trans-\naction.  The  confirmation  latency  linearly  increases  when  the\nincoming transaction speed is 6. However, when the incoming\nFig. 7.Inherent latency composition.\ntransaction speed increases to 15, the confirmation latency dis-\ntribution is divided into two stages: 1) 9–25 s and 2) 29–41 s.\nThis  distribution  is  mainly  due  to  the  lack  of  computation\nresources  in  the  single  full  node,  which  will  cause  a  trans-\naction  to  be  blocked  until  the  second  or  the  third  milestone\ncomes.  All  those  transactions  with  the  confirmation  latency\nranged from 29 to 41 s are the blocked ones. If the incoming\ntransaction  speed  further  increases,  the  average  confirmation\nlatency  begins  to  drop  back.  It  seems  good,  but  actually,  it\nsacrifices the stability of the Tangle. With the increasing num-\nber of blocked transactions, the milestone can only confirm a\nfraction  of  those  transactions,  leaving  many  transactions  not\nconfirmed  forever.  Therefore,  these  transactions  will  have  an\ninfinite confirmation latency; as they are not valid records, the\nconfirmation  latency  distribution  at  24  TPS  does  not  include\nthose isolated transactions.\nBottleneck:According    to    the    previous    works    [39],\n[43]–[47], during the whole transaction initialization process,\nthe  most  costly  parts  are  the  tip  selection  and  the  validation\nprocesses, both of which are handled by the full nodes. When\nthe  incoming  transaction  speed  increases,  the  full  nodes  will\nbecome  too  busy  to  handle  these  tasks  incurred  by  incom-\ning transactions. However, except for those two tasks, we find\nanother annoying factor that greatly impacts the performance.\nFig.  7  shows  the  composition  of  the  inherent  latencies  of\nthe  transactions.  We  can  see  that  the  bottleneck  of  initiat-\ning  a  transaction  is  neither  the  tip  selection  process  nor  the\nvalidation  process  but  database  queries.  In  IOTA,  during  the\ntransaction  initiation  period,  one  address  can  only  be  used\nonce.  Thus,  it  needs  a  unique  address  checking  process  to\ncheck  if  an  address  has  been  used  before.  IOTA  implements\nthis  process  by  reading  all  transactions  from  the  database\nand  checking  if  the  specific  address  has  been  used.  As  the\ndatabase size grows larger and larger, this query process con-\nsumes  more  and  more  time,  which  severely:  1)  degrades  the\nfull  nodes’  performance;  2)  makes  the  inherent  latency  con-\ntinue  increasing;  and  3)  limits  the  private  IOTA  network’s\nthroughput. To the best of our knowledge, this is the first time\nthat the database query cost is evaluated and identified as the\nperformance bottleneck in the private IOTA network.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 6
      }
    }
  },
  {
    "pageContent": "14484IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\nFig. 8.Reattached transactions in the double-spending attack.\nB.  Security\nTo  evaluate  the  private  IOTA  network’s  security,  we  have\nsimulated two types of attacks, double-spending, and off sync-\ning.  Double-spending  means  that  one  user  tries  to  spend  the\nsame amount of money twice with two different receivers. Off\nsyncing is a consistency attack by which attackers attempt to\nmake one of the full nodes offline, thus creating an inconsis-\ntency  among  the  full  nodes.  The  evaluation  results  for  these\ntwo types of attacks are shown as follows.\nDouble-Spending  Attack:According  to  the  white  paper  of\nIOTA [8], it can detect the double-spending attack and remove\nillegal  transactions  from  the  Tangle.  To  examine  this,  for\nthe double-spending attack, we directly send two transactions\nspending  the  same  amount  of  money  and  wait  until  the  full\nnodes detect the attack. There will be many transactions con-\nnecting  to  the  illegal  transaction  before  the  double-spending\nattack  is  detected.  Those  transactions  need  to  be  removed\ntogether  with  the  illegal  transaction.  The  later  a  double-\nspending  attack  is  detected,  the  more  transactions  it  will\ninfluence.  Thus, we record the number of transactions which\nneed to be reattached to the Tangle due to the double-spending\nattack  (they-axis)  with  different  incoming  transaction  speed\n(x-axis). The results are shown in Fig. 8.\nIt  can  be  observed  that  the  results  are  not  related  to  the\nincoming  transaction  speed.  The  double-spending  attack  can\nbe detected once a transaction is directly or indirectly attached\nto both the two double-spending transactions. Then, one of the\ntwo  double-spending  transactions  will  be  marked  as  illegal\nand  removed  from  the  Tangle.  According  to  the  results,  the\ntime of detecting the double-spending attack is uncertain, and\nthe number of transactions influenced by the double-spending\nattack  is  ranged  from  1  to  14.  We  have  observed  no  more\nthan  14  transactions  to  be  influenced  during  the  whole  test,\nrevealing that the private IOTA network can detect the double-\nspending attack. However, how can a double-spending attack\nbe  detected  faster  and  its  impact  on  the  system  performance\nneed further investigation.\nOff-Syncing  Attack:The  private  IOTA  network  has  several\nfull  nodes  providing  service  to  user  clients.  Each  full  node\nstores the whole Tangle, and all of the full nodes need to be\nmaintained  in  a  consistent  status.  However,  suppose  one  of\nthem  suffers  from  attacks  and  is  not  synchronized  with  the\nFig. 9.Performance during the off-syncing attack.\nwhole  network.  In  that  case,  the  system  performance  will  be\ndegraded, as shown in the performance experiment results in\nSection  IV-A.  When  the  nonsynchronized  full  node  rejoins\nthe  network,  the  synchronization  process  will  restart,  which\nwill  incur  more  performance  overhead.  To  simulate  the  off-\nsyncing attack situation, we activate three full nodes that work\nnormally and turn off one full node in the cluster. We continue\nmonitoring the performance during off-syncing and resyncing\nperiods. The results are shown in Fig. 9.\nWe  fix  each  full  node  to  receive  eight  incoming  TPS  and\nwait until the Tangle reaches stable status. Then, we shut down\none  full  node  at  60  s  and  restart  it  at  120  s.  Meanwhile,  we\nclean the off-synced full node’s database, thereby maximizing\nthe number of resynced transactions. We repeat the test three\ntimes  and  then  take  the  average  throughput  data  for  analy-\nsis. As expected, at 60 s, the throughput suddenly drops down\nfrom 24 to 16 TPS. At 120 s, the number of transactions to be\nresynced  is  about  4200.  The  throughput  maintains  low  until\n300 s, and it climbs back to about 24 TPS at 360 s, represent-\ning that the synchronization process is accomplished. Although\nthe private IOTA network suffers from a throughput degrada-\ntion, its performance only takes around 240 s to bounce back\nto the normal level. After all the full nodes are synchronized at\n480  s,  the  private  IOTA  network  continues  providing  service\nnormally.\nWe  can  see  that  both  the  confirmation  latency  and  inher-\nent latency are stable during the whole experiment, revealing\nthat the private IOTA network is stable during the whole test.\nWith continuous service, the recovery speed is about 23 TPS\n(using 180 s to recover 4200 transactions), which is acceptable\ncompared to its normal performance.\nC.  System Robustness\nTip  Ratio  and  Confirmed  Transaction  Ratio:The  system\nrobustness  of  IOTA  is  highly  related  to  its  tip  ratio  and\nconfirmed  transaction  ratio.  Tips  represent  newly  attached\ntransactions,  whose  ratio  should  be  stable  in  a  healthy  pri-\nvate  IOTA  network.  If  the  tip  ratio  continues  increasing,  it\nrepresents that too many transactions attach to the stale state\nof  the  Tangle  or  wait  to  be  processed.  Under  this  condition,\nif  the  incoming  transaction  speed  is  still  high,  the  full  nodes\nwill finally crash.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 7
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14485\n(a)(b)(c)\nFig.  10.System  robustness  with  different  configurations.  (a)  Single  full  node.  (b)  Tip  ratio  in  multiple  full  nodes.  (c)  Confirmation  ratio  in  multiplefull\nnodes.\n(a)(b)(c)\nFig. 11.Influence with different milestone intervals. (a) Tip ratio with eight incoming TPS. (b) Tip ratio with 16 incoming TPS. (c) Performance.\nWe  monitor  the  tip  ratio  in  each  test  and  observe  several\nunstable situations which might cause the full nodes crashing.\nFig.  10(a)  shows  the  condition  of  the  single  full  node  sce-\nnario.  Thex-axis  shows  the  incoming  transaction  speed.  We\ncan see that when we increase the incoming transaction speed\nto  24,  the  tip  ratio  boosts  to  an  extremely  high  level,  while\nthe  confirmed  transaction  ratio  decreases  to  less  than  20%.\nAt that time, the full node is already overloaded. Suppose we\nkeep the workload at such intensity for a while. In that case,\nthe whole IOTA network will crash, rejecting all the incoming\ntransactions, which severely damages the system robustness of\nthe private IOTA network.\nFor the multiple full node scenarios, we fix each full node’s\nincoming transaction speed at 8. Fig. 10(b) and (c) reveal the\ntip  ratio  and  confirmed  transaction  ratio  with  different  con-\nfigurations.  It  can  be  observed  that  when  there  are  less  than\nfour full nodes activated, the tip ratio maintains relatively low\nwhile  the  confirmed  transaction  ratio  is  kept  high.  It  reveals\nthat the Tangle is in a very healthy state. However, with four\nfull  nodes,  the  situation  is  different.  The  tip  ratio  starts  at\naround  15%  at  120  s  and  rises  to  more  than  20%  at  960  s\nwith a continuously  increasing  trend.  The  confirmed  transac-\ntion ratio drops from more than 50% to around 40%. As time\ngoes by, the full nodes become unstable and finally crash.\nThe  result  exhibits  that  when  a  full  node  does  not  strug-\ngle  to  deal  with  the  incoming  transactions,  the  private  IOTA\nnetwork’s   health   can   remain   at   a   relatively   normal   sta-\ntus.  Nevertheless,  once  the  full  nodes  run  out  of  resources,\nthere  will  be  more  and  more  incoming  transactions  wait-\ning   to   be   processed,   which   will   finally   cause   a   system\ncrash.\nMilestone Interval:Another critical factor that will influence\nthe tip ratio is the milestone interval. According to the confir-\nmation  mechanism  of  IOTA,  if  a  transaction  is  not  approved\ndirectly  or  indirectly  by  a  recent  milestone,  it  will  remain\nunconfirmed until the next milestone comes. Furthermore, if a\ntransaction is not approved during three milestones, it will not\nbe confirmed anymore. That means each milestone may leave\nsome  transactions  in  the  Tangle  to  be  tips  forever.  Thus,  the\ntotal  tip  number  will  increase  continuously,  but  the  tip  num-\nber between two milestones, which is highly related to the tip\nratio, will be stable.\nWe use one full node configuration for this test. The tip ratio\ninfluences incurred by different milestone intervals are shown\nin  Fig.  11(a)  and  (b).  When  we  fix  the  incoming  transac-\ntion speed at 8, different milestone intervals incur different tip\nratios. After a short unstable time initially, no matter how we\nchange the milestone interval, the tip ratio is maintained sta-\nble. However, a longer milestone interval will lead to a higher\ntip  ratio,  mainly  due  to  one  milestone’s  limited  confirmation\nability.\nWhen  we  fix  the  incoming  transaction  speed  at  16,  the\nresults are different. From Fig. 11(b), we can see that all three\nlines are increasing. Although shorter milestone intervals cause\nlower  tip  ratios,  all  of  them  are  not  stable.  As  time  goes  by,\nthe tip ratio increases slowly, which indicates that each mile-\nstone  leaves  more  and  more  tips  unconfirmed,  degrading  the\nstability of the whole IOTA network. The main reason is that\n16 TPS is the upper limit of one full node’s throughput. Thus,\nthe overloaded full node degrades the system robustness.\nBesides  the  system  robustness,  the  milestone  interval  can\nalso affect system performance. We monitor the performance\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 8
      }
    }
  },
  {
    "pageContent": "14486IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\nof  the  private  IOTA  network  as  we  change  the  milestone\ninterval.  We  first  fix  the  incoming  transaction  speed  at  8.\nFig.  11(c)  shows  its  performance.  When  we  slow  down  the\nmilestone speed, the throughput of the private IOTA network\ndecreases  a  little,  and  the  latency  also  grows  higher.  It  is\nbecause  the  tip  selection  and  validation  processes  will  cover\nmore  transactions.  Furthermore,  the  full  node  needs  to  uti-\nlize more resources to handle the computation-intensive tasks\nwhen the milestone interval prolongs.\nThe above evaluations show that whether or not the tip ratio\nis stable is highly associated with the private IOTA network’s\nstatus, and many factors will influence the tip ratio. The most\ncrucial  factor  is  the  incoming  transaction  speed.  Too  many\nincoming  transactions  will  make  the  full  nodes  run  out  of\ntheir  resources,  and  finally,  crash.  Meanwhile,  the  milestone\ninterval is also very important, and its changes may influence\nvarious behaviors of the private IOTA network, especially the\nperformance.\nV.   S\nYSTEMIMPLICATIONS\nWe will summarize some system implications and promising\noptimization directions in this section after the comprehensive\nexploration of the IOTA’s characteristics.\nPerformance:The performance upper bound of the private\nIOTA network is highly related to the system configurations.\nThe  existing  public  IOTA  network  contains  more  than  one\nhundred full nodes, and the milestone interval is set to 1 min.\nHowever, this configuration only makes the throughput of the\npublic  IOTA  network  reach  about  10  TPS  [48].  To  further\nimprove the IOTA’s throughput, reducing the IOTA full nodes’\nworkload is the top priority. From our experiment, we can see\nthat  when  generating  a  transaction,  besides  the  tip  selection\nand the validation processes, the database query also incurs a\nlot of storage overhead and prolongs the internal latency. Thus,\nimproving the database query performance will contribute a lot\nto the IOTA’s performance [49]. Furthermore, if the tip selec-\ntion  and  validation  processes  can  be  accelerated  [46],  [47],\nit  will  also  enhance  the  full  nodes’  capability  of  processing\nincoming transactions.\nFor   the  transaction  confirmation   process,   the  confirma-\ntion  latency  is  fully  dependent  on  the  milestone  interval.  If\nmilestones are issued more frequently, transactions can be con-\nfirmed more quickly, reducing the confirmation latency. Thus,\nif  we  employ  the  private  IOTA  network  in  an  IoT  environ-\nment,  a  smaller  milestone  interval  will  enhance  the  system\nperformance.\nAnother  potential  optimization  is  to  mitigate  the  network\ncommunication  overhead  between  multiple  full  nodes.  The\ncommunication  cost  limits  the  private  IOTA  network’s  scal-\nability and causes the degradation of its performance. Once a\ntransaction is attached, the updated Tangle needs to be broad-\ncasted  to  all  the  other  full  nodes,  incurring  heavy  network\ntraffic. In our experiments, when the full node number reaches\n4,   the   network   traffic   will   seriously   degrade   the   system\nperformance.\nSecurity:The  IOTA’s  security  can  be  promised  when  fac-\ning  double-spending  and  off-syncing  attacks.  However,  for\noff-syncing attacks, the whole IOTA network’s recovery speed\nis slow, at around 20 TPS. Improving the recovery speed can\nreduce  the  period  of  performance  thrashing,  enhancing  the\nprivate IOTA network’s stability.\nFor  the  double-spending  attack,  the  detection  time  is  not\nguaranteed,  which  is  an  uncertain  factor  when  employing\nIOTA   in   an   IoT   environment.   Although   we   do   not   find\nmore  than  14  transactions  that  need  to  be  reattached  during\nthe  double-spending  attack  experiments,  it  is  worthwhile  to\nenhance the efficiency of double-spending detection.\nSystem  Robustness:The  system  robustness  of  the  private\nIOTA  network  is  not  satisfactory.  Many  situations  can  cause\nchanges  in  the  Tangle’s  tip  ratio.  Once  the  tip  ratio  presents\nan  upward  trend,  the  whole  IOTA  network  will  be  at  the\nrisk  of  crashing.  One  interesting  optimization  direction  can\nbe developing new scheduling algorithms to prevent the IOTA\nfull nodes from being overloaded and make the tip ratio more\nstable to improve system robustness.\nControlling  the  milestone  intervals  is  also  a  promising\napproach for enhancing the system robustness since the actual\nnumber of tips in the private IOTA network is highly related\nto  the  milestone  interval.  According  to  our  experiments,  set-\nting  a  smaller  milestone  interval  when  employing  IOTA  in\nthe  IoT  environment  will  be  a  better  choice.  Furthermore,\nthe   milestone   mechanism   can   also   be   replaced   by   other\nefficient  consensus  mechanisms  to  control  the  transactions’\nconfirmation.\nVI.  R\nELATEDWORK\nIn  this  section,  we  will  introduce  closely  related  works\nthat   focus   on   optimizing   and   benchmarking   block-based\nblockchain  systems  and  DAG-based  blockchain  systems.  We\nalso  list  several  works  concentrating  on  the  blockchain  tech-\nnique in IoT environments.\nBlock-Based   Blockchain:Many   techniques   have   been\nproposed for block-based blockchain systems to optimize the\nPoW consensus mechanism. Several studies propose to trans-\nlate  the  huge  energy  consumption  of  PoW  into  meaningful\nwork.  For  example,  Primecoin  [50]  replaces  hash  calculation\nwith the search of prime sequence, and Gapcoin [51] searches\nfor  large  prime  gaps.  Hardware  accelerators  are  designed\nfor   accelerating   the   PoW   process,   such   as   GPU,   FPGA,\nASIC,  and  ReRAM  [52]–[55],  to  improve  the  performance\nof  the  blockchain  system.  GPU  platforms  experience  higher\npower  consumption  and  higher  price.  ASIC  is  application-\nspecific  and  cannot  be  used  once  the  mining  algorithm  is\nupdated. FPGA suffers from complicated unfavored program-\nming.  ReRAM  implementations  are  not  widely  adopted  by\nthe  industry  yet.  Hence,  the  performance  optimization  of\nblock-based blockchain systems still needs more effort.\nBenchmarking  block-based  blockchain  systems  have  been\nwidely investigated. For instance, Gervaiset al.[16] presented\na novel quantitative framework to compare PoW blockchains.\nThey   characterize   different   PoW   blockchains   and   evalu-\nate   their   performance   and   security.   Haoet   al.[56]   and\nSukhwaniet   al.[57]   targeted   how   consensus   protocols\ninfluence  the  performance.  Different  consensus  algorithms\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 9
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14487\nare   compared   to   show   their   impact   on   the   performance\nof  the  blockchain  system.  Rouhani  and  Deters  [58],  and\nNasiret  al.[59]  evaluated  the  performance  of  a  private\nblockchain  and  perform  transaction  analysis  on  Ethereum\nand  hyper  ledger  fabric,  respectively.  Dinhet  al.[41]  and\nZhenget al.[60] focused on the benchmark tools for standard\nblock-based blockchains. They propose performance monitor-\ning and benchmarking frameworks and present comprehensive\nanalysis for different system design choices.\nSeveralstudieshavebeenconductedtooptimize\napplication-specific  blockchain  systems.  Sagirlaret  al.[17]\nproduced a novel IoT-oriented hybrid blockchain architecture,\nand  the  performance  evaluation  proves  the  validity  of  their\ndesign under the sweet-spot guidelines. Novo [61] developed\na  distributed  IoT  management  system  based  on  blockchain,\novercoming  the  limitations  on  the  applicability  in  scenarios\nwith   numerous   IoT   devices.   Suankaewmaneeet   al.[62]\nfocused  on  analyzing  mobile  blockchains’  performance  and\nexploring potential applications.\nBlockchain  in  IoT  Environment:To  make  IoT  environ-\nment   more   secure   and   trusted,   several   works   propose   to\nadopt  blockchain  techniques.  Mohantaet  al.[30]  proposed\nan Ethererum-based blockchain system in a smart IoT system\nto tackle security and privacy issues. Cuiet al.[29] introduced\nCoDAG, a blockchain protocol based on a compacted directed\nacyclic graph, to improve the blockchain throughput. CoDAG\nin an Industrial Internet-of-Things (IIoT) system significantly\noutperforms Bitcoin and Ethererum.\nHeet  al.[63]  focused  on  optimizing  the  security  of  the\nedge  computing  architecture  in  an  IoT  environment,  which\nuses  block-based  blockchains  to  maintain  trust  between  IoT\ndevices and edge computing nodes (ECNs). They also design\na machine-learning algorithm to efficiently allocate edge com-\nputing  resources,  which  is  implemented  with  smart  contracts\nin a private blockchain network. Cuiet al.[64] study trusted\nedge computing in an IoT environment and construct a decen-\ntralized  platform  with  blockchains  to  enhance  the  trust  and\nthe incentive of each participant. In [65], a containerized edge\ncomputing  platform,  called  CUTE,  is  developed  to  provide\nlow latency computation services for the Internet of Vehicles.\nCUTE  has  been  deployed  in  the  China  Mobile  Network  and\nthe results show that CUTE outperforms traditional container\nscheduling policies.\nDAG-BasedBlockchain:ResearchesonDAG-based\nblockchain  systems  are  still  at  their  early  stage.  IOTA  foun-\ndation  [39]  presents  several  simulation  results  for  the  Tangle\nstructure  and  evaluates  the  trend  of  the  cumulative  weight\nparameter  and  number  of  tips.  The  presented  data  confirm\nthe  results  in  the  IOTA  whitepaper.  Attias  and  Bramas  [45]\nproposed a multiagent network model to test the stabilization\nof IOTA and also propose two Tangle compression algorithms\nto  reduce  the  inherent  latency.  Pervezet  al.[66]  presented\na  comparative  analysis  of  several  DAG-Based  blockchains,\nincluding  Nxt,  IOTA,  Orumesh,  DagCoin,  Byteball,  Nano,\nand  XDAG.  Wanget  al.[67]  constructed  three  types  of\nattack  strategies  and  test  IOTA  security  with  these  attacks.\nCaoet al.[68] focused on the performance analysis between\ndifferent consensus algorithms. They compare PoW, PoS, and\nDAG-based  blockchains  and  the  results  indicate  that  PoW\nand PoS are more sensitive to the change of network resource\nwhile  DAG  is  more  sensitive  to  network  load  conditions.\nLiet  al.[69]  used  the  Markov  chain  model  to  formulate\nthe  consensus  process  of  IOTA.  They  also  design  a  typical\ndouble-spending  attack  in  the  consensus  process  and  use  a\nstochastic  model  to  examine  the  probability  of  launching  a\nsuccessful attack under different loads.\nOnly  a  few  works  are  focusing  on  optimizing  DAG-based\nblockchains. Wanget al.[46], [47] proposed an ReRAM-based\naccelerator  for  IOTA  blockchain,  including  speeding  up  both\nthe PoW process and validation process. By offloading those\ntwo processes to parallel execution on ReRAM, the CPU usage\ncan be reduced significantly, thus improving the performance.\nShafeeqet al.[70] reduced the IOTA address generation time\nby adopting a cuckoo bloom filter to mitigate some database\noverhead.\nOne  reason  with  few  works  on  optimizing  DAG-based\nblockchains is the lack of a full-functional benchmarking tool.\nDonget al.[71] proposed a performance evaluation framework\nfor  DAG-based  blockchains.  Parket  al.[72]  also  analyzed\nthe  performance  of  DAG-based  blockchains.  However,  those\nworks only focus on the performance characteristics of DAG-\nbased  blockchain,  neglecting  other  metrics,  such  as  security\nand system robustness.\nIn  this  article,  we  aim  to  bridge  this  gap  by  develop-\ning a full-functional benchmarking tool and investigating not\nonly the performance characteristics but also the security and\nsystem robustness of DAG-based blockchains.\nVII.  C\nONCLUSION\nDAG-based  blockchains  are  emerging,  aiming  to  provide\ntrustworthy  and  secure  device-to-device  transactions  for  IoT\nenvironments  with  high  throughput.  In  this  article,  based  on\nIOTA,  we  build  a  private  DAG-based  blockchain  system  and\ndevelop  a  series  of  benchmark  tools,  including  a  transac-\ntion initiator, an IOTA status monitor, and a double-spending\nattacker.  All  the  benchmark  tools  are  open-sourced  to  the\npublic.  Based  on  these  benchmark  tools,  we  examine  IOTA\nin  terms  of  performance,  security,  and  system  robustness.\nAlthough  the  security  of  IOTA  can  be  promised,  both  its\nperformance  and  robustness  need  more  improvements.  We\nfurther  analyze  the  underlying  reasons  and  summarize  sev-\neral  system  implications  and  optimization  directions  for  fur-\nther  IoT  security  design  based  on  DAG-based  blockchain\ntechnologies.\nR\nEFERENCES\n[1]   T. Wang, Q. Wang, Z. Shen, Z. Jia, and Z. Shao, “Understanding intrin-\nsic characteristics and system implications of dag-based blockchain,” in\nProc. IEEE Int. Conf. Embedded Softw. Syst. (ICESS), Shanghai, China,\n2020, pp. 1–6.\n[2]   N. Hackius and M. Petersen, “Blockchain in logistics and supply chain:\nTrick  or  treat?”  inProc.  Hamburg  Int.  Conf.  Logist.  (HICL),  2017,\npp. 3–18.\n[3]   A.  Bahga  and  V.  K.  Madisetti,  “Blockchain  platform  for  industrial\nInternet of Things,”Sci. Res. Publ. J. Softw. Eng. Appl., vol. 9, no. 10,\npp. 533–546, 2016.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 10
      }
    }
  },
  {
    "pageContent": "14488IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022\n[4]  T.-T.  Kuo,  H.-E.  Kim,  and  L.  Ohno-Machado,  “Blockchain  distributed\nledger   technologies   for   biomedical   and   health   care   applications,”\nOxford  Univ.  Press  J.  Amer.  Med.  Informat.  Assoc.,  vol.  24,  no.  6,\npp. 1211–1220, 2017.\n[5]  S.  Park  and  H.  Kim,  “DAG-based  distributed  ledger  for  low-latency\nsmart  grid  network,”Multidiscipl.  Digit.  Publ.  Inst.  Energies,  vol.  12,\nno. 18, p. 3570, 2019.\n[6]  S. Dange and M. Chatterjee, “IoT botnet: The largest threat to the IoT\nnetwork,”  inSpringer  Data  Communication  and  Networks.  Singapore:\nSpringer, 2020.\n[7]S.Alam,S.T.Siddiqui,A.Ahmad,R.Ahmad,andM.Shuaib,\n“Internet of Things (IoT) enabling technologies, requirements, and secu-\nrity challenges,” inSpringer Advances in Data and Information Sciences.\nSingapore: Springer, 2020.\n[8]  S.  Popov,  “The  tangle,”  IOTA  Foundation,  Austin,  TX,  USA,  White\npaper, vol. 1, p. 3, 2016.\n[9]  J.  Wurm,  K.  Hoang,  O.  Arias,  A.-R.  Sadeghi,  and  Y.  Jin,  “Security\nanalysis  on  consumer  and  industrial  IoT  devices,”  inProc.  IEEE  Asia\nSouth  Pac.  Design  Autom.  Conf.  (ASP-DAC),  Macao,  China,  2016,\npp. 519–524.\n[10]  N.  Cam-Winget,  A.-R.  Sadeghi,  and  Y.  Jin,  “Can  IoT  be  secured:\nEmerging   challenges   in   connecting   the   unconnected,”   inProc.\nACM/EDAC/IEEE Design Autom. Conf. (DAC), Austin, TX, USA, 2016,\npp. 1–6.\n[11]  N. Zivic, C. Ruland, and J. Sassmannshausen, “Distributed ledger tech-\nnologies  for  M2M  communications,”  inProc.  Int.  Conf.  Inf.  Netw.\n(ICOIN), Kuala Lumpur, Malaysia, 2019, pp. 301–306.\n[12]  W.  Jiang,  P.  Pop,  and  K.  Jiang,  “Design  optimization  for  security-\nand   safety-critical   distributed   real-time   applications,”Microprocess.\nMicrosyst., vol. 52, pp. 401–415, Jul. 2017.\n[13]  M.   Shen,   X.   Tang,   L.   Zhu,   X.   Du,   and   M.   Guizani,   “Privacy-\npreserving   support   vector   machine   training   over   blockchain-based\nencrypted  IoT  data  in  smart  cities,”IEEE  Internet  Things  J.,vol.6,\nno. 5, pp. 7702–7712, Oct. 2019.\n[14]  K.  Cromanet  al.,  “On  scaling  decentralized  blockchains,”  inProc.\nSpringer Int. Conf. Finan. Cryptogr. Data Security, 2016, pp. 106–125.\n[15]  T.  Chenet  al.,  “Understanding  Ethereum  via  graph  analysis,”ACM\nTrans. Internet Technol., vol. 20, no. 2, pp. 1–32, 2020.\n[16]  A.  Gervais,  G.  O.  Karame,  K.  Wüst,  V.  Glykantzis,  H.  Ritzdorf,\nand  S.  Capkun,  “On  the  security  and  performance  of  proof  of  work\nblockchains,” inProc. ACM SIGSAC Conf. Comput. Commun. Security,\n2016, pp. 3–16.\n[17]  G.  Sagirlar,  B.  Carminati,  E.  Ferrari,  J.  D.  Sheehan,  and  E.  Ragnoli,\n“Hybrid-IoT:  Hybrid  blockchain  architecture  for  Internet  of  Things—\nPoW   sub-blockchains,”   inProc.   IEEE   Int.   Conf.   Internet   Things\n(iThings)  IEEE  Green  Comput.  Commun.  (GreenCom)  IEEE  Cyber\nPhys. Soc. Comput. (CPSCom) IEEE Smart Data (SmartData), Halifax,\nNS, Canada, 2018, pp. 1007–1016.\n[18]  S. Nakamoto. (2008).Bitcoin:  A Peer-to-Peer  Electronic  Cash System.\n[Online]. Available: www.bitcoin.org\n[19]  G.  Wood,  “Ethereum:  A  secure  decentralised  generalised  transaction\nledger,”  Ethereum  project,  Zug,  Switzerland,  Yellow  Paper,  vol. 151,\npp. 1–32, 2014.\n[20]  A.   Rossow.   (2018).Ethereum   Founder   Acknowledges   Promising\nSolution   to   Blockchains’   Scalability   Problem.   [Online].   Available:\nhttps://www.forbes.com/sites/andrewrossow\n[21]  R. Singh, A. D. Dwivedi, and G. Srivastava, “Internet of Things based\nblockchain  for  temperature  monitoring  and  counterfeit  pharmaceutical\nprevention,”Sensors, vol. 20, no. 14, p. 3951, 2020.\n[22]  IOTA-Foundation.    (2020).What    Is    IoTA?.    [Online].    Available:\nhttps://www.iota-services.com/what-is-iota\n[23]  T.Wang.(2019).IoTA-Benchmark-Tool.[Online].Available:\nhttps://github.com/wty715/IOTA-Benchmark-Tool\n[24]  B. Dorsemaine, J.-P. Gaulier, J.-P. Wary, N. Kheir, and P. Urien, “Internet\nof Things: A definition & taxonomy,” inProc. 9th Int. Conf. Next Gener.\nMobile Appl. Serv. Technol., Cambridge, U.K., 2015, pp. 72–77.\n[25]  H.  Boyes,  B.  Hallaq,  J.  Cunningham,  and  T.  Watson,  “The  Industrial\nInternet   of   Things   (IIoT):   An   analysis   framework,”Comput.   Ind.,\nvol. 101, pp. 1–12, Oct. 2018.\n[26]  J.  Zhou,  Z.  Cao,  X.  Dong,  and  A.  V.  Vasilakos,  “Security  and  privacy\nfor cloud-based IoT: Challenges,”IEEE Commun. Mag., vol. 55, no. 1,\npp. 26–33, Jan. 2017.\n[27]  M. Frustaci, P. Pace, G. Aloi, and G. Fortino, “Evaluating critical secu-\nrity  issues  of  the  IoT  world:  Present  and  future  challenges,”IEEE\nInternet Things J., vol. 5, no. 4, pp. 2483–2495, Aug. 2018.\n[28]  M.  Frustaci,  P.  Pace,  and  G.  Aloi,  “Securing  the  IoT  world:  Issues\nand perspectives,” inProc. IEEE Conf. Stand. Commun. Netw. (CSCN),\nHelsinki, Finland, 2017, pp. 246–251.\n[29]  L.  Cui,  S.  Yang,  Z.  Chen,  Y.  Pan,  M.  Xu,  and  K.  Xu,  “An  efficient\nand  compacted  DAG-based  blockchain  protocol  for  industrial  Internet\nof Things,”IEEE Trans. Ind. Informat., vol. 16, no. 6, pp. 4134–4145,\nJun. 2020.\n[30]  B.  K.  Mohanta,  D.  Jena,  S.  Ramasubbareddy,  M.  Daneshmand,  and\nA.   H.   Gandomi,   “Addressing   security   and   privacy   issues   of   IoT\nusing  blockchain  technology,”IEEE  Internet  Things  J.,  vol.  8,  no.  2,\npp. 881–888, Jan. 2021.\n[31]  G.  Zyskind,  O.  Nathan,  and  A.  ’S.  Pentland,  “Decentralizing  privacy:\nUsing  blockchain  to  protect  personal  data,”  inProc.  IEEE  Security\nPrivacy Workshops, San Jose, CA, USA, 2015, pp. 180–184.\n[32]  M.   Shen,   J.   Duan,   L.   Zhu,   J.   Zhang,   X.   Du,   and   M.   Guizani,\n“Blockchain-based  incentives  for  secure  and  collaborative  data  shar-\ning  in  multiple  clouds,”IEEE  J.  Sel.  Areas  Commun.,  vol.  38,  no.  6,\npp. 1229–1241, Jun. 2020.\n[33]  R. Pass, L. Seeman, and A. Shelat, “Analysis of the blockchain protocol\nin  asynchronous  networks,”  inProc.  Springer  Annu.  Int.  Conf.  Theory\nAppl. Cryptograph. Techn., 2017, pp. 643–673.\n[34]  M.  Vukoli\n ́\nc,  “The  quest  for  scalable  blockchain  fabric:  Proof-of-work\nvs.  BFT  replication,”  inProc.  Springer  Int.  Workshop  Open  Problems\nNetw. Security, 2015, pp. 112–125.\n[35]  A.Churyumov.(2016).Byteball:ADecentralizedSystem\nforStorageandTransferofValue.[Online].Available:\nhttps://byteball.org/Byteball.pdf\n[36]  W.  F.  Silvano  and  R.  Marcelino,  “Iota  tangle:  A  cryptocurrency  to\ncommunicate  Internet-of-Things  data,”Future  Gener.  Comput.  Syst.,\nvol. 112, pp. 307–319, Nov. 2020.\n[37]  J.  Brogan,  I.  Baskaran,  and  N.  Ramachandran,  “Authenticating  health\nactivity  data  using  distributed  ledger  technologies,”Comput.  Struct.\nBiotechnol. J., vol. 16, pp. 257–266, Jul. 2018.\n[38]  O.  Lamtzidis  and  J.  Gialelis,  “An  IOTA  based  distributed  sensor  node\nsystem,” inProc. IEEE Globecom Workshops (GC Wkshps), Abu Dhabi,\nUAE, 2018, pp. 1–6.\n[39]  B. Kusmierz, “The first glance at the simulation of the tangle: Discrete\nmodel,” IOTA Found., Berlin, Germany, White Paper, 2017.\n[40]  S.Pongnumkul,C.Siripanpornchana,andS.Thajchayapong,\n“Performance   analysis   of   private   blockchain   platforms   in   varying\nworkloads,”   inProc.   IEEE   Int.   Conf.   Comput.   Commun.   Netw.\n(ICCCN), Vancouver, BC, Canada, 2017, pp. 1–6.\n[41]  T.   T.   A.   Dinh,   J.   Wang,   G.   Chen,   R.   Liu,   B.   C.   Ooi,   and\nK.-L.   Tan,   “BLOCKBENCH:   A   framework   for   analyzing   private\nblockchains,” inProc. ACM Int. Conf. Manage. Data (SIGMOD), 2017,\npp. 1085–1100.\n[42]  A.  Baliga,  I.  Subhod,  P.  Kamat,  and  S.  Chatterjee,  “Performance  eval-\nuation  of  the  quorum  blockchain  platform,”  2018.  [Online].  Available:\narXiv:1809.03421.\n[43]  B.  Kusmierz,  P.  Staupe,  and  A.  Gal,  “Extracting  tangle  properties\nin  continuous  time  via  large-scale  simulations,”  IOTA  Found.,  Berlin,\nGermany, Working Paper, 2018.\n[44]  P. C. Bartolomeu, E. Vieira, and J. Ferreira, “IOTA feasibility and per-\nspectives for enabling vehicular applications,” inProc. IEEE Globecom\nWorkshops, Abu Dhabi, UAE, 2018, pp. 1–7.\n[45]  V.  Attias  and  Q.  Bramas,  “Tangle  analysis  for  IOTA  cryptocurrency,”\n2018. [Online]. Available: https://vidal-attias.io/\n[46]  Q. Wang, T. Wang, Z. Shen, Z. Jia, M. Zhao, and Z. Shao, “Re-tangle:\nA  ReRAM-based  processing-in-memory  architecture  for  transaction-\nbased blockchain,” inProc. IEEE/ACM Int. Conf. Comput.-Aided Design\n(ICCAD), Westminster, CO, USA, 2019, pp. 1–8.\n[47]  Q.   Wanget   al.,   “A   highly   parallelized   PIM-based   accelerator   for\ntransaction-based blockchain in IoT environment,”IEEE Internet Things\nJ., vol. 7, no. 5, pp. 4072–4083, May 2020.\n[48]  IOTA-Foundation. (2021).IOTA Tangle Explorer. s[Online]. Available:\nhttps://thetangle.org\n[49]  T. Wang, W. Zhu, Q. Ma, Z. Shen, and Z. Shao, “ABACUS: Address-\npartitioned  bloom  filter  on  address  checking  for  uniqueness  in  IoT\nblockchain,”  inProc.  IEEE/ACM  Int.  Conf.  Comput.-Aided  Design\n(ICCAD), San Diego, CA, USA, 2020, pp. 1–7.\n[50]  S.  King,  “Primecoin:  Cryptocurrency  with  prime  number  proof-of-\nwork,” vol. 1, no. 6, Jul. 2013.\n[51]  S. King. (2014).Gapcoin. [Online]. Available: https://gapcoin.org\n[52]  Y.  Long,  T.  Na,  and  S.  Mukhopadhyay,  “ReRAM-based  processing-\nin-memory   architecture   for   recurrent   neural   network   acceleration,”\nIEEE  Trans.  Very  Large  Scale  Integr.  (VLSI)  Syst.,  vol.  26,  no.  12,\npp. 2781–2794, Dec. 2018.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 11
      }
    }
  },
  {
    "pageContent": "WANGet al.:  UNDERSTANDING CHARACTERISTICS AND SYSTEM IMPLICATIONS OF DAG-BASED BLOCKCHAIN14489\n[53]  Y.   Sakakibara,   K.   Nakamura,   and   H.   Matsutani,   “An   FPGA   NIC\nbased   hardware   caching   for   blockchain,”   inProc.   8th   Int.   Symp.\nHighly  Efficient  Accelerators  Reconfigurable  Technol.  (HEART),  2017,\npp. 1–6.\n[54]  H. Cho, “ASIC-resistance of multi-hash proof-of-work mechanisms for\nblockchain consensus protocols,”IEEE Access, vol. 6, pp. 66210–66222,\n2018.\n[55]  S.   Morishima   and   H.   Matsutani,   “Acceleration   of   anomaly   detec-\ntion   in   blockchain   using   in-GPU   cache,”   inProc.   IEEE   Int.\nConf.  Parallel  Distrib.  Process.  Appl.  Ubiquitous  Comput.  Commun.\nBig   Data   Cloud   Comput.   Soc.   Comput.   Netw.   Sustain.   Comput.\nCommun.   (ISPA/IUCC/BDCloud/SocialCom/SustainCom),   Melbourne,\nVIC, Australia, 2018, pp. 244–251.\n[56]  Y. Hao, Y. Li, X. Dong, L. Fang, and P. Chen, “Performance analysis of\nconsensus  algorithm  in  private  blockchain,”  inProc.  IEEE  Intell.  Veh.\nSymp. (IV), Changshu, China, 2018, pp. 280–285.\n[57]  H. Sukhwani, J. M. Martínez, X. Chang, K. S. Trivedi, and A. Rindos,\n“Performance  modeling  of  PBFT  consensus  process  for  permissioned\nblockchain  network  (hyperledger  fabric),”  inProc.  IEEE  Symp.  Rel.\nDistrib. Syst. (SRDS), Hong Kong, 2017, pp. 253–255.\n[58]  S. Rouhani and R. Deters, “Performance analysis of Ethereum transac-\ntions in private blockchain,” inProc. IEEE Int. Conf. Softw. Eng. Serv.\nSci. (ICSESS), 2017, pp. 70–74.\n[59]  Q. Nasir, I. A. Qasse, M. A. Talib, and A. B. Nassif, “Performance analy-\nsis of hyperledger fabric platforms,”Security Commun. Netw., vol. 2018,\nSep. 2018, Art. no. 3976093.\n[60]  P. Zheng, Z. Zheng, X. Luo, X. Chen, and X. Liu, “A detailed and real-\ntime  performance  monitoring  framework  for  blockchain  systems,”  in\nProc. IEEE/ACM Int. Conf. Softw. Eng. Softw. Eng. Pract. Track (ICSE-\nSEIP), Gothenburg, Sweden, 2018, pp. 134–143.\n[61]  O.   Novo,   “Scalable   access   management   in   IoT   using   blockchain:\nA  performance  evaluation,”IEEE  Internet  Things  J.,  vol.  6,  no.  3,\npp. 4694–4701, Jun. 2019.\n[62]  K.   Suankaewmanee,   D.   T.   Hoang,   D.   Niyato,   S.   Sawadsitang,\nP. Wang, and Z. Han, “Performance analysis and application of mobile\nblockchain,” inProc. IEEE Int. Conf. Comput. Netw. Commun. (ICNC),\nMaui, HI, USA, 2018, pp. 642–646.\n[63]  Y. He, Y. Wang, C. Qiu, Q. Lin, J. Li, and Z. Ming, “Blockchain-based\nedge computing resource allocation in IoT: A deep reinforcement learn-\ning  approach,”IEEE  Internet  Things  J.,  vol.  8,  no.  4,  pp. 2226–2237,\nFeb. 2021.\n[64]  L.  Cui,  S.  Yang,  Z.  Chen,  Y.  Pan,  Z.  Ming,  and  M.  Xu,  “A  decentral-\nized and trusted edge computing platform for Internet of Things,”IEEE\nInternet Things J., vol. 7, no. 5, pp. 3910–3922, May 2020.\n[65]  L.  Cuiet  al.,  “A  blockchain-based  containerized  edge  computing  plat-\nform for the Internet of Vehicles,”IEEE Internet Things J., vol. 8, no. 4,\npp. 2395–2408, Feb. 2021.\n[66]  H.  Pervez,  M.  Muneeb,  M.  U.  Irfan,  and  I.  U.  Haq,  “A  comparative\nanalysis  of  DAG-based  blockchain  architectures,”  inProc.  12th  Int.\nConf.  Open  Source  Syst.  Technol.  (ICOSST),  Lahore,  Pakistan,  2018,\npp. 27–34.\n[67]  B. Wang, Q. Wang, S. Chen, and Y. Xiang, “Security analysis on tangle-\nbased blockchain through simulation,” inProc. Aust. Conf. Inf. Security\nPrivacy, 2020, pp. 653–663.\n[68]  B.  Caoet  al.,  “Performance  analysis  and  comparison  of  PoW,  PoS\nand  DAG  based  blockchains,”Digit.  Commun.  Netw.,  vol.  6,  no.  4,\npp. 480–485, 2020.\n[69]  Y.  Liet  al.,  “Direct  acyclic  graph-based  ledger  for  Internet  of  Things:\nPerformance  and  security  analysis,”IEEE/ACM  Trans.  Netw.,  vol.  28,\nno. 4, pp. 1643–1656, Aug. 2020.\n[70]  S. Shafeeq, S. Zeadally, M. Alam, and A. Khan, “Curbing address reuse\nin  the  IOTA  distributed  ledger:  A  cuckoo-filter-based  approach,”IEEE\nTrans. Eng. Manag., vol. 67, no. 4, pp. 1244–1255, Nov. 2020.\n[71]  Z.  Dong,  E.  Zheng,  Y.  Choon,  and  A.  Y.  Zomaya,  “DAGBENCH:  A\nperformance  evaluation  framework  for  DAG  distributed  ledgers,”  in\nProc.  IEEE  Int.  Conf.  Cloud  Comput.  (CLOUD),  Milan,  Italy,  2019,\npp. 264–271.\n[72]  S.  Park,  S.  Oh,  and  H.  Kim,  “Performance  analysis  of  DAG-based\ncryptocurrency,”  inProc.  IEEE  Int.  Conf.  Commun.  Workshops  (ICC\nWorkshops), Shanghai, China, 2019, pp. 1–6.\nTianyu  Wangreceived  the  B.E.  degree  from  the\nSchool of Electronics and Information Engineering,\nTongji  University,  Shanghai,  China,  in  June  2016,\nand  the  M.S.  degree  from  the  School  of  Computer\nScience   and   Technology,   Shandong   University,\nQingdao, China, in June 2019.\nHis   main   research   interests   include   storage\nsystems,nonvolatile    memory,    and    blockchain\ntechniques.\nQian   Wangreceived  the  B.E.  degree  from  the\nSchool  of  Data  Science  and  Software  Engineering,\nQingdao University, Qingdao, China, in June 2017.\nShe  is  currently  pursuing  the  M.S.  degree  with\nthe  School  of  Computer  Science  and  Technology,\nShandong University, Qingdao.\nHer   research   interests   include   emerging   non-\nvolatile memory and Blockchain techniques.\nZhaoyan Shenreceived the B.E. and M.E. degrees\nfrom   the   Department   of   Computer   Science   and\nTechnology,  Shandong  University,  Qingdao,  China,\nin 2012 and 2015, respectively, and the Ph.D. degree\nfrom  the  Department  of  Computing,  Hong  Kong\nPolytechnic University, Hong Kong, in 2018.\nHe   is   currently   an   Assistant   Professor   with\nShandong University. His research interests include\nbig    data    systems,    storage    systems,    embedded\nsystems, system architecture, and hardware/software\ncodesign.\nZhiping  Jiareceived  the master’s  from  the  School\nof  Computer  Science,  Shandong  University,  Jinan,\nChina,  in  1989,  and  the  Ph.D.  degree  from  the\nSchool of Control Science, Shandong University in\n2007.\nIn   July   1989,   he   was   with   the   Department\nof  Computer  Science  and  Technology,  Shandong\nUniversity,  Qingdao,  China,  where  he  has  been  a\nProfessor  since  2002.  He  has  published  more  than\n70 research papers in refereed conferences and jour-\nnals  and  served  as  program  committee  members  in\nnumerous international conferences.\nDr. Jia received the Shandong Province Award and the Teaching Award.\nZili  Shaoreceived  the  B.E.  degree  in  electronic\nmechanics from the University of Electronic Science\nand Technology of China, Sichuan, China, in 1995,\nand the M.S. and Ph.D. degrees from the Department\nof Computer Science, University of Texas at Dallas,\nDallas, TX, USA, in 2003 and 2005, respectively.\nIn   2018,   he   was   with   the   Department   of\nComputing, The Hong Kong Polytechnic University,\nHong  Kong,  where  has  been  serving  since  2005.\nHe  is  currently  an  Associate  Professor  with  the\nDepartment  of  Computer  Science  and  Engineering,\nThe  Chinese  University  of  Hong  Kong,  Hong  Kong.  His  current  research\ninterests  include  big  data  systems,  storage  systems,  embedded  software  and\nsystems, and related industrial applications.\nAuthorized licensed use limited to: INDIAN INST OF INFO TECH AND MANAGEMENT. Downloaded on April 14,2024 at 12:31:23 UTC from IEEE Xplore.  Restrictions apply. ",
    "metadata": {
      "source": "D:\\RoadToNetflixEngineer\\new-learnings\\fs-ai-semantic-search\\documents\\Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments.pdf",
      "pdf": {
        "version": "1.10.100",
        "info": {
          "PDFFormatVersion": "1.4",
          "IsAcroFormPresent": false,
          "IsXFAPresent": false,
          "Title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
          "Subject": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
          "Creator": "LaTeX with hyperref package",
          "Producer": "Acrobat Distiller 22.0 (Windows); modified using iText® 7.1.1 ©2000-2018 iText Group NV (AGPL-version)",
          "CreationDate": "D:20220728170112+05'30'",
          "ModDate": "D:20220805202800-04'00'"
        },
        "metadata": {
          "_metadata": {
            "dc:format": "application/pdf",
            "dc:publisher": "IEEE",
            "dc:description": "IEEE Internet of Things Journal;2022;9;16;10.1109/JIOT.2021.3108527",
            "dc:title": "Understanding Characteristics and System Implications of DAG-Based Blockchain in IoT Environments",
            "dc:subject": "Benchmark toolInternet-of-Things (IoT) blockchainperformance evaluation",
            "dc:creator": "Tianyu WangQian WangZhaoyan ShenZhiping JiaZili Shao",
            "prism:publicationname": "IEEE Internet of Things Journal",
            "prism:startingpage": "14478",
            "prism:coverdisplaydate": "15 Aug.15, 2022",
            "prism:issueidentifier": "16",
            "prism:doi": "10.1109/JIOT.2021.3108527",
            "prism:volume": "9",
            "prism:endingpage": "14489",
            "jav:journal_article_version": "VoR"
          }
        },
        "totalPages": 12
      },
      "loc": {
        "pageNumber": 12
      }
    }
  }
]